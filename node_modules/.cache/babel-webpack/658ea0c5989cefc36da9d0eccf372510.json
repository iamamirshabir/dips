{"ast":null,"code":"import { ɵɵdefineInjectable, Injectable, ɵɵinject, Directive, TemplateRef, EventEmitter, Input, Output, ContentChildren, Component, ViewEncapsulation, ElementRef, NgZone, ChangeDetectorRef, Optional, Host, NgModule, ChangeDetectionStrategy, Renderer2, forwardRef, Inject, PLATFORM_ID, LOCALE_ID, ViewChild, ContentChild, ViewContainerRef, ComponentFactoryResolver, Injector, ApplicationRef, INJECTOR, RendererFactory2, Attribute, ViewChildren, HostBinding, InjectionToken } from '@angular/core';\nimport { CommonModule, isPlatformBrowser, getLocaleDayNames, FormStyle, TranslationWidth, getLocaleMonthNames, formatDate, DOCUMENT, getLocaleDayPeriods } from '@angular/common';\nimport { EMPTY, of, Subject, fromEvent, timer, race, BehaviorSubject, combineLatest, NEVER, zip, merge, Observable } from 'rxjs';\nimport { endWith, takeUntil, filter, take, map, startWith, distinctUntilChanged, switchMap, tap, withLatestFrom, delay, mergeMap, skip, share } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, FormsModule } from '@angular/forms';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\n\nfunction NgbAccordion_ng_template_0_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbAccordion_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"button\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵtemplate(2, NgbAccordion_ng_template_0_ng_template_2_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const panel_r3 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngbPanelToggle\", panel_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", panel_r3.title, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", panel_r3.titleTpl == null ? null : panel_r3.titleTpl.templateRef);\n  }\n}\n\nfunction NgbAccordion_ng_template_2_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbAccordion_ng_template_2_div_3_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbAccordion_ng_template_2_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(2, NgbAccordion_ng_template_2_div_3_ng_template_2_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const panel_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵpropertyInterpolate(\"id\", panel_r5.id);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", panel_r5.id + \"-header\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (panel_r5.contentTpl == null ? null : panel_r5.contentTpl.templateRef) || null);\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    opened: a1\n  };\n};\n\nfunction NgbAccordion_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(2, NgbAccordion_ng_template_2_ng_template_2_Template, 0, 0, \"ng-template\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, NgbAccordion_ng_template_2_div_3_Template, 3, 3, \"div\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const panel_r5 = ctx.$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n\n    const _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵclassMap(\"card \" + (panel_r5.cardClass || \"\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(\"card-header \" + (panel_r5.type ? \"bg-\" + panel_r5.type : ctx_r2.type ? \"bg-\" + ctx_r2.type : \"\"));\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"\", panel_r5.id, \"-header\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (panel_r5.headerTpl == null ? null : panel_r5.headerTpl.templateRef) || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(8, _c0, panel_r5, panel_r5.isOpen));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r2.destroyOnHide || panel_r5.isOpen || panel_r5.transitionRunning);\n  }\n}\n\nfunction NgbAlert_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbAlert_button_1_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1.close();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"span\", 2);\n    ɵngcc0.ɵɵtext(2, \"\\u00D7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nconst _c3 = [\"*\"];\n\nfunction NgbCarousel_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbCarousel_li_1_Template_li_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const slide_r4 = ctx.$implicit;\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      ctx_r5.focus();\n      return ctx_r5.select(slide_r4.id, ctx_r5.NgbSlideEventSource.INDICATOR);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const slide_r4 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", slide_r4.id === ctx_r0.activeId);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", \"slide-\" + slide_r4.id)(\"aria-controls\", \"slide-\" + slide_r4.id)(\"aria-selected\", slide_r4.id === ctx_r0.activeId);\n  }\n}\n\nfunction NgbCarousel_div_3_ng_template_3_Template(rf, ctx) {}\n\nfunction NgbCarousel_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵelementStart(1, \"span\", 8);\n    ɵngcc0.ɵɵi18n(2, 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, NgbCarousel_div_3_ng_template_3_Template, 0, 0, \"ng-template\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const slide_r7 = ctx.$implicit;\n    const i_r8 = ctx.index;\n    const c_r9 = ctx.count;\n    ɵngcc0.ɵɵproperty(\"id\", \"slide-\" + slide_r7.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵi18nExp(i_r8 + 1)(c_r9);\n    ɵngcc0.ɵɵi18nApply(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", slide_r7.tplRef);\n  }\n}\n\nfunction NgbCarousel_a_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbCarousel_a_4_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      const ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.arrowLeft();\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 12);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 8);\n    ɵngcc0.ɵɵi18n(3, 13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbCarousel_a_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 14);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbCarousel_a_5_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      const ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ctx_r13.arrowRight();\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 8);\n    ɵngcc0.ɵɵi18n(3, 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nconst _c10 = [\"defaultDayTemplate\"];\nconst _c11 = [\"content\"];\n\nfunction NgbDatepicker_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 7);\n  }\n\n  if (rf & 2) {\n    const date_r8 = ctx.date;\n    const currentMonth_r9 = ctx.currentMonth;\n    const selected_r10 = ctx.selected;\n    const disabled_r11 = ctx.disabled;\n    const focused_r12 = ctx.focused;\n    ɵngcc0.ɵɵproperty(\"date\", date_r8)(\"currentMonth\", currentMonth_r9)(\"selected\", selected_r10)(\"disabled\", disabled_r11)(\"focused\", focused_r12);\n  }\n}\n\nfunction NgbDatepicker_ng_template_2_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const month_r14 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate2(\" \", ctx_r16.i18n.getMonthFullName(month_r14.number, month_r14.year), \" \", ctx_r16.i18n.getYearNumerals(month_r14.year), \" \");\n  }\n}\n\nfunction NgbDatepicker_ng_template_2_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(1, NgbDatepicker_ng_template_2_div_0_div_1_Template, 2, 2, \"div\", 10);\n    ɵngcc0.ɵɵelement(2, \"ngb-datepicker-month\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const month_r14 = ctx.$implicit;\n    const ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13.navigation === \"none\" || ctx_r13.displayMonths > 1 && ctx_r13.navigation === \"select\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"month\", month_r14.firstDate);\n  }\n}\n\nfunction NgbDatepicker_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepicker_ng_template_2_div_0_Template, 3, 2, \"div\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3.model.months);\n  }\n}\n\nfunction NgbDatepicker_ngb_datepicker_navigation_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"ngb-datepicker-navigation\", 13);\n    ɵngcc0.ɵɵlistener(\"navigate\", function NgbDatepicker_ngb_datepicker_navigation_5_Template_ngb_datepicker_navigation_navigate_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      const ctx_r18 = ɵngcc0.ɵɵnextContext();\n      return ctx_r18.onNavigateEvent($event);\n    })(\"select\", function NgbDatepicker_ngb_datepicker_navigation_5_Template_ngb_datepicker_navigation_select_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      const ctx_r20 = ɵngcc0.ɵɵnextContext();\n      return ctx_r20.onNavigateDateSelect($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"date\", ctx_r4.model.firstDate)(\"months\", ctx_r4.model.months)(\"disabled\", ctx_r4.model.disabled)(\"showSelect\", ctx_r4.model.navigation === \"select\")(\"prevDisabled\", ctx_r4.model.prevDisabled)(\"nextDisabled\", ctx_r4.model.nextDisabled)(\"selectBoxes\", ctx_r4.model.selectBoxes);\n  }\n}\n\nfunction NgbDatepicker_ng_template_8_Template(rf, ctx) {}\n\nfunction NgbDatepicker_ng_template_9_Template(rf, ctx) {}\n\nfunction NgbDatepickerMonth_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 5);\n  }\n}\n\nfunction NgbDatepickerMonth_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const w_r4 = ctx.$implicit;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r3.i18n.getWeekdayShortName(w_r4), \" \");\n  }\n}\n\nfunction NgbDatepickerMonth_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, NgbDatepickerMonth_div_0_div_1_Template, 1, 0, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(2, NgbDatepickerMonth_div_0_div_2_Template, 2, 1, \"div\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.datepicker.showWeekNumbers);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.viewModel.weekdays);\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const week_r5 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7.i18n.getWeekNumerals(week_r5.number));\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_ng_template_0_Template(rf, ctx) {}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_ng_template_0_Template, 0, 0, \"ng-template\", 14);\n  }\n\n  if (rf & 2) {\n    const day_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r11 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r11.datepicker.dayTemplate)(\"ngTemplateOutletContext\", day_r10.context);\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbDatepickerMonth_ng_template_1_div_0_div_2_Template_div_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      const day_r10 = ctx.$implicit;\n      const ctx_r14 = ɵngcc0.ɵɵnextContext(3);\n      ctx_r14.doSelect(day_r10);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(1, NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_Template, 1, 2, \"ng-template\", 13);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const day_r10 = ctx.$implicit;\n    ɵngcc0.ɵɵclassProp(\"disabled\", day_r10.context.disabled)(\"hidden\", day_r10.hidden)(\"ngb-dp-today\", day_r10.context.today);\n    ɵngcc0.ɵɵproperty(\"tabindex\", day_r10.tabindex);\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r10.ariaLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !day_r10.hidden);\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(1, NgbDatepickerMonth_ng_template_1_div_0_div_1_Template, 2, 1, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(2, NgbDatepickerMonth_ng_template_1_div_0_div_2_Template, 2, 9, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const week_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.datepicker.showWeekNumbers);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", week_r5.days);\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepickerMonth_ng_template_1_div_0_Template, 3, 2, \"div\", 7);\n  }\n\n  if (rf & 2) {\n    const week_r5 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngIf\", !week_r5.collapsed);\n  }\n}\n\nfunction NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"ngb-datepicker-navigation-select\", 7);\n    ɵngcc0.ɵɵlistener(\"select\", function NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template_ngb_datepicker_navigation_select_select_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.select.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"date\", ctx_r0.date)(\"disabled\", ctx_r0.disabled)(\"months\", ctx_r0.selectBoxes.months)(\"years\", ctx_r0.selectBoxes.years);\n  }\n}\n\nfunction NgbDatepickerNavigation_4_ng_template_0_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 0);\n  }\n}\n\nfunction NgbDatepickerNavigation_4_ng_template_0_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 0);\n  }\n}\n\nfunction NgbDatepickerNavigation_4_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepickerNavigation_4_ng_template_0_div_0_Template, 1, 0, \"div\", 9);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 10);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, NgbDatepickerNavigation_4_ng_template_0_div_3_Template, 1, 0, \"div\", 9);\n  }\n\n  if (rf & 2) {\n    const month_r5 = ctx.$implicit;\n    const i_r6 = ctx.index;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", i_r6 > 0);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate2(\" \", ctx_r4.i18n.getMonthFullName(month_r5.number, month_r5.year), \" \", ctx_r4.i18n.getYearNumerals(month_r5.year), \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", i_r6 !== ctx_r4.months.length - 1);\n  }\n}\n\nfunction NgbDatepickerNavigation_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepickerNavigation_4_ng_template_0_Template, 4, 4, \"ng-template\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.months);\n  }\n}\n\nconst _c20 = [\"ngbDatepickerDayView\", \"\"];\nconst _c21 = [\"month\"];\nconst _c22 = [\"year\"];\n\nfunction NgbDatepickerNavigationSelect_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const m_r4 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"value\", m_r4);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1.i18n.getMonthFullName(m_r4, ctx_r1.date == null ? null : ctx_r1.date.year));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.i18n.getMonthShortName(m_r4, ctx_r1.date == null ? null : ctx_r1.date.year));\n  }\n}\n\nfunction NgbDatepickerNavigationSelect_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const y_r5 = ctx.$implicit;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"value\", y_r5);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.i18n.getYearNumerals(y_r5));\n  }\n}\n\nconst _c31 = [\"dialog\"];\nconst _c32 = [\"ngbNavOutlet\", \"\"];\n\nfunction NgbNavOutlet_ng_template_0_div_0_ng_template_1_Template(rf, ctx) {}\n\nconst _c33 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction NgbNavOutlet_ng_template_0_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, NgbNavOutlet_ng_template_0_div_0_ng_template_1_Template, 0, 0, \"ng-template\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"item\", item_r1)(\"nav\", ctx_r2.nav)(\"role\", ctx_r2.paneRole);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (item_r1.contentTpl == null ? null : item_r1.contentTpl.templateRef) || null)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(5, _c33, item_r1.active || ctx_r2.isPanelTransitioning(item_r1)));\n  }\n}\n\nfunction NgbNavOutlet_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbNavOutlet_ng_template_0_div_0_Template, 2, 7, \"div\", 1);\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r1.isPanelInDom() || ctx_r0.isPanelTransitioning(item_r1));\n  }\n}\n\nfunction NgbPagination_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵi18n(1, 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵi18n(1, 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵi18n(1, 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵi18n(1, 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0, \"...\");\n  }\n}\n\nfunction NgbPagination_ng_template_10_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 14);\n    ɵngcc0.ɵɵtext(1, \"(current)\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n    ɵngcc0.ɵɵtemplate(1, NgbPagination_ng_template_10_span_1_Template, 2, 0, \"span\", 13);\n  }\n\n  if (rf & 2) {\n    const page_r17 = ctx.$implicit;\n    const currentPage_r18 = ctx.currentPage;\n    ɵngcc0.ɵɵtextInterpolate1(\" \", page_r17, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", page_r17 === currentPage_r18);\n  }\n}\n\nfunction NgbPagination_li_13_ng_template_2_Template(rf, ctx) {}\n\nconst _c44 = function (a0, a1) {\n  return {\n    disabled: a0,\n    currentPage: a1\n  };\n};\n\nfunction NgbPagination_li_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 16);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_13_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r22);\n      const ctx_r21 = ɵngcc0.ɵɵnextContext();\n      ctx_r21.selectPage(1);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(2, NgbPagination_li_13_ng_template_2_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext();\n\n    const _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r12.previousDisabled());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r12.previousDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r12.previousDisabled() ? \"true\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r12.tplFirst == null ? null : ctx_r12.tplFirst.templateRef) || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(6, _c44, ctx_r12.previousDisabled(), ctx_r12.page));\n  }\n}\n\nfunction NgbPagination_li_14_ng_template_2_Template(rf, ctx) {}\n\nconst _c47 = function (a0) {\n  return {\n    disabled: a0\n  };\n};\n\nfunction NgbPagination_li_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 18);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_14_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      const ctx_r24 = ɵngcc0.ɵɵnextContext();\n      ctx_r24.selectPage(ctx_r24.page - 1);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(2, NgbPagination_li_14_ng_template_2_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = ɵngcc0.ɵɵnextContext();\n\n    const _r2 = ɵngcc0.ɵɵreference(3);\n\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r13.previousDisabled());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r13.previousDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r13.previousDisabled() ? \"true\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r13.tplPrevious == null ? null : ctx_r13.tplPrevious.templateRef) || _r2)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(6, _c47, ctx_r13.previousDisabled()));\n  }\n}\n\nfunction NgbPagination_li_15_a_1_ng_template_1_Template(rf, ctx) {}\n\nconst _c48 = function (a1) {\n  return {\n    disabled: true,\n    currentPage: a1\n  };\n};\n\nfunction NgbPagination_li_15_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"a\", 21);\n    ɵngcc0.ɵɵtemplate(1, NgbPagination_li_15_a_1_ng_template_1_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r27 = ɵngcc0.ɵɵnextContext(2);\n\n    const _r8 = ɵngcc0.ɵɵreference(9);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r27.tplEllipsis == null ? null : ctx_r27.tplEllipsis.templateRef) || _r8)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c48, ctx_r27.page));\n  }\n}\n\nfunction NgbPagination_li_15_a_2_ng_template_1_Template(rf, ctx) {}\n\nconst _c49 = function (a0, a1, a2) {\n  return {\n    disabled: a0,\n    $implicit: a1,\n    currentPage: a2\n  };\n};\n\nfunction NgbPagination_li_15_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 22);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_15_a_2_Template_a_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r33);\n      const pageNumber_r26 = ɵngcc0.ɵɵnextContext().$implicit;\n      const ctx_r31 = ɵngcc0.ɵɵnextContext();\n      ctx_r31.selectPage(pageNumber_r26);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(1, NgbPagination_li_15_a_2_ng_template_1_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const pageNumber_r26 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r28 = ɵngcc0.ɵɵnextContext();\n\n    const _r10 = ɵngcc0.ɵɵreference(11);\n\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r28.disabled ? \"-1\" : null)(\"aria-disabled\", ctx_r28.disabled ? \"true\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r28.tplNumber == null ? null : ctx_r28.tplNumber.templateRef) || _r10)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(4, _c49, ctx_r28.disabled, pageNumber_r26, ctx_r28.page));\n  }\n}\n\nfunction NgbPagination_li_15_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵtemplate(1, NgbPagination_li_15_a_1_Template, 2, 4, \"a\", 19);\n    ɵngcc0.ɵɵtemplate(2, NgbPagination_li_15_a_2_Template, 2, 8, \"a\", 20);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const pageNumber_r26 = ctx.$implicit;\n    const ctx_r14 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", pageNumber_r26 === ctx_r14.page)(\"disabled\", ctx_r14.isEllipsis(pageNumber_r26) || ctx_r14.disabled);\n    ɵngcc0.ɵɵattribute(\"aria-current\", pageNumber_r26 === ctx_r14.page ? \"page\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r14.isEllipsis(pageNumber_r26));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r14.isEllipsis(pageNumber_r26));\n  }\n}\n\nfunction NgbPagination_li_16_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbPagination_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_16_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r37);\n      const ctx_r36 = ɵngcc0.ɵɵnextContext();\n      ctx_r36.selectPage(ctx_r36.page + 1);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(2, NgbPagination_li_16_ng_template_2_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = ɵngcc0.ɵɵnextContext();\n\n    const _r4 = ɵngcc0.ɵɵreference(5);\n\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r15.nextDisabled());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r15.nextDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r15.nextDisabled() ? \"true\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r15.tplNext == null ? null : ctx_r15.tplNext.templateRef) || _r4)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(6, _c44, ctx_r15.nextDisabled(), ctx_r15.page));\n  }\n}\n\nfunction NgbPagination_li_17_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbPagination_li_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 24);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_17_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r40);\n      const ctx_r39 = ɵngcc0.ɵɵnextContext();\n      ctx_r39.selectPage(ctx_r39.pageCount);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(2, NgbPagination_li_17_ng_template_2_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext();\n\n    const _r6 = ɵngcc0.ɵɵreference(7);\n\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r16.nextDisabled());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r16.nextDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r16.nextDisabled() ? \"true\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r16.tplLast == null ? null : ctx_r16.tplLast.templateRef) || _r6)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(6, _c44, ctx_r16.nextDisabled(), ctx_r16.page));\n  }\n}\n\nfunction NgbPopoverWindow_h3_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.title);\n  }\n}\n\nfunction NgbPopoverWindow_h3_1_ng_template_3_Template(rf, ctx) {}\n\nfunction NgbPopoverWindow_h3_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"h3\", 3);\n    ɵngcc0.ɵɵtemplate(1, NgbPopoverWindow_h3_1_ng_template_1_Template, 1, 1, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgbPopoverWindow_h3_1_ng_template_3_Template, 0, 0, \"ng-template\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r1 = ɵngcc0.ɵɵreference(2);\n\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.isTitleTemplate() ? ctx_r0.title : _r1)(\"ngTemplateOutletContext\", ctx_r0.context);\n  }\n}\n\nfunction NgbProgressbar_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵi18n(1, 2);\n    ɵngcc0.ɵɵpipe(2, \"percent\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵi18nExp(ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r0.getValue() / ctx_r0.max));\n    ɵngcc0.ɵɵi18nApply(1);\n  }\n}\n\nfunction NgbRating_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const fill_r3 = ctx.fill;\n    ɵngcc0.ɵɵtextInterpolate(fill_r3 === 100 ? \"\\u2605\" : \"\\u2606\");\n  }\n}\n\nfunction NgbRating_ng_template_2_ng_template_3_Template(rf, ctx) {}\n\nfunction NgbRating_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 2);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"span\", 3);\n    ɵngcc0.ɵɵlistener(\"mouseenter\", function NgbRating_ng_template_2_Template_span_mouseenter_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      const index_r4 = ctx.index;\n      const ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.enter(index_r4 + 1);\n    })(\"click\", function NgbRating_ng_template_2_Template_span_click_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      const index_r4 = ctx.index;\n      const ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.handleClick(index_r4 + 1);\n    });\n    ɵngcc0.ɵɵtemplate(3, NgbRating_ng_template_2_ng_template_3_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const index_r4 = ctx.index;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n\n    const _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", index_r4 < ctx_r2.nextRate ? \"*\" : \" \", \")\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"cursor\", ctx_r2.isInteractive() ? \"pointer\" : \"default\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.starTemplate || ctx_r2.starTemplateFromContent || _r0)(\"ngTemplateOutletContext\", ctx_r2.contexts[index_r4]);\n  }\n}\n\nfunction NgbTimepicker_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_button_3_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      const ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.changeHour(ctx_r8.hourStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 12);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 14);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r0.isSmallSize)(\"btn-lg\", ctx_r0.isLargeSize)(\"disabled\", ctx_r0.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r0.disabled);\n  }\n}\n\nfunction NgbTimepicker_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_button_5_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      const ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.changeHour(-ctx_r10.hourStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r1.isSmallSize)(\"btn-lg\", ctx_r1.isLargeSize)(\"disabled\", ctx_r1.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n  }\n}\n\nfunction NgbTimepicker_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_button_9_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      const ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.changeMinute(ctx_r12.minuteStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 12);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r2.isSmallSize)(\"btn-lg\", ctx_r2.isLargeSize)(\"disabled\", ctx_r2.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r2.disabled);\n  }\n}\n\nfunction NgbTimepicker_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_button_11_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      const ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ctx_r14.changeMinute(-ctx_r14.minuteStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r3.isSmallSize)(\"btn-lg\", ctx_r3.isLargeSize)(\"disabled\", ctx_r3.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r3.disabled);\n  }\n}\n\nfunction NgbTimepicker_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵtext(1, \":\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbTimepicker_div_13_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_div_13_button_1_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      const ctx_r18 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r18.changeSecond(ctx_r18.secondStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 12);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 21);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r16.isSmallSize)(\"btn-lg\", ctx_r16.isLargeSize)(\"disabled\", ctx_r16.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r16.disabled);\n  }\n}\n\nfunction NgbTimepicker_div_13_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_div_13_button_3_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r21);\n      const ctx_r20 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r20.changeSecond(-ctx_r20.secondStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r17.isSmallSize)(\"btn-lg\", ctx_r17.isLargeSize)(\"disabled\", ctx_r17.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r17.disabled);\n  }\n}\n\nfunction NgbTimepicker_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵtemplate(1, NgbTimepicker_div_13_button_1_Template, 4, 7, \"button\", 3);\n    ɵngcc0.ɵɵelementStart(2, \"input\", 20);\n    ɵngcc0.ɵɵlistener(\"change\", function NgbTimepicker_div_13_Template_input_change_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      const ctx_r22 = ɵngcc0.ɵɵnextContext();\n      return ctx_r22.updateSecond($event.target.value);\n    })(\"input\", function NgbTimepicker_div_13_Template_input_input_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      const ctx_r24 = ɵngcc0.ɵɵnextContext();\n      return ctx_r24.formatInput($event.target);\n    })(\"keydown.ArrowUp\", function NgbTimepicker_div_13_Template_input_keydown_ArrowUp_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      const ctx_r25 = ɵngcc0.ɵɵnextContext();\n      ctx_r25.changeSecond(ctx_r25.secondStep);\n      return $event.preventDefault();\n    })(\"keydown.ArrowDown\", function NgbTimepicker_div_13_Template_input_keydown_ArrowDown_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      const ctx_r26 = ɵngcc0.ɵɵnextContext();\n      ctx_r26.changeSecond(-ctx_r26.secondStep);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, NgbTimepicker_div_13_button_3_Template, 4, 7, \"button\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.spinners);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx_r5.isSmallSize)(\"form-control-lg\", ctx_r5.isLargeSize);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r5.formatMinSec(ctx_r5.model == null ? null : ctx_r5.model.second))(\"readOnly\", ctx_r5.readonlyInputs)(\"disabled\", ctx_r5.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.spinners);\n  }\n}\n\nfunction NgbTimepicker_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 5);\n  }\n}\n\nfunction NgbTimepicker_div_15_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵi18n(1, 27);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r27 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵi18nExp(ctx_r27.i18n.getAfternoonPeriod());\n    ɵngcc0.ɵɵi18nApply(1);\n  }\n}\n\nfunction NgbTimepicker_div_15_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵi18n(0, 28);\n  }\n\n  if (rf & 2) {\n    const ctx_r29 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵi18nExp(ctx_r29.i18n.getMorningPeriod());\n    ɵngcc0.ɵɵi18nApply(0);\n  }\n}\n\nfunction NgbTimepicker_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 23);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 24);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_div_15_Template_button_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r31);\n      const ctx_r30 = ɵngcc0.ɵɵnextContext();\n      return ctx_r30.toggleMeridian();\n    });\n    ɵngcc0.ɵɵtemplate(2, NgbTimepicker_div_15_ng_container_2_Template, 2, 1, \"ng-container\", 25);\n    ɵngcc0.ɵɵtemplate(3, NgbTimepicker_div_15_ng_template_3_Template, 1, 1, \"ng-template\", null, 26, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r28 = ɵngcc0.ɵɵreference(4);\n\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r7.isSmallSize)(\"btn-lg\", ctx_r7.isLargeSize)(\"disabled\", ctx_r7.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r7.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r7.model && ctx_r7.model.hour >= 12)(\"ngIfElse\", _r28);\n  }\n}\n\nfunction NgbToast_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"strong\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.header);\n  }\n}\n\nfunction NgbToast_ng_template_2_ng_template_1_Template(rf, ctx) {}\n\nfunction NgbToast_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(1, NgbToast_ng_template_2_ng_template_1_Template, 0, 0, \"ng-template\", 5);\n    ɵngcc0.ɵɵelementStart(2, \"button\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbToast_ng_template_2_Template_button_click_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.hide();\n    });\n    ɵngcc0.ɵɵelementStart(3, \"span\", 7);\n    ɵngcc0.ɵɵtext(4, \"\\u00D7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n\n    const _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.contentHeaderTpl || _r0);\n  }\n}\n\nfunction NgbHighlight_ng_template_0_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const part_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r3.highlightClass);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(part_r1);\n  }\n}\n\nfunction NgbHighlight_ng_template_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const part_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(part_r1);\n  }\n}\n\nfunction NgbHighlight_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbHighlight_ng_template_0_span_0_Template, 2, 3, \"span\", 1);\n    ɵngcc0.ɵɵtemplate(1, NgbHighlight_ng_template_0_ng_template_1_Template, 1, 1, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n  }\n\n  if (rf & 2) {\n    const isOdd_r2 = ctx.odd;\n\n    const _r4 = ɵngcc0.ɵɵreference(2);\n\n    ɵngcc0.ɵɵproperty(\"ngIf\", isOdd_r2)(\"ngIfElse\", _r4);\n  }\n}\n\nfunction NgbTypeaheadWindow_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ngb-highlight\", 2);\n  }\n\n  if (rf & 2) {\n    const result_r3 = ctx.result;\n    const term_r4 = ctx.term;\n    const formatter_r5 = ctx.formatter;\n    ɵngcc0.ɵɵproperty(\"result\", formatter_r5(result_r3))(\"term\", term_r4);\n  }\n}\n\nfunction NgbTypeaheadWindow_ng_template_2_ng_template_1_Template(rf, ctx) {}\n\nconst _c86 = function (a0, a1, a2) {\n  return {\n    result: a0,\n    term: a1,\n    formatter: a2\n  };\n};\n\nfunction NgbTypeaheadWindow_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 3);\n    ɵngcc0.ɵɵlistener(\"mouseenter\", function NgbTypeaheadWindow_ng_template_2_Template_button_mouseenter_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      const idx_r7 = ctx.index;\n      const ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.markActive(idx_r7);\n    })(\"click\", function NgbTypeaheadWindow_ng_template_2_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      const result_r6 = ctx.$implicit;\n      const ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.select(result_r6);\n    });\n    ɵngcc0.ɵɵtemplate(1, NgbTypeaheadWindow_ng_template_2_ng_template_1_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const result_r6 = ctx.$implicit;\n    const idx_r7 = ctx.index;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n\n    const _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵclassProp(\"active\", idx_r7 === ctx_r2.activeIdx);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r2.id + \"-\" + idx_r7);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.resultTemplate || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(5, _c86, result_r6, ctx_r2.term, ctx_r2.formatter));\n  }\n}\n\nfunction toInteger(value) {\n  return parseInt(`${value}`, 10);\n}\n\nfunction toString(value) {\n  return value !== undefined && value !== null ? `${value}` : '';\n}\n\nfunction getValueInRange(value, max, min = 0) {\n  return Math.max(Math.min(value, max), min);\n}\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\nfunction isNumber(value) {\n  return !isNaN(toInteger(value));\n}\n\nfunction isInteger(value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null;\n}\n\nfunction padNumber(value) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\n\nfunction regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\nfunction hasClassName(element, className) {\n  return element && element.className && element.className.split && element.className.split(/\\s+/).indexOf(className) >= 0;\n}\n\nif (typeof Element !== 'undefined' && !Element.prototype.closest) {\n  // Polyfill for ie10+\n  if (!Element.prototype.matches) {\n    // IE uses the non-standard name: msMatchesSelector\n    Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  Element.prototype.closest = function (s) {\n    let el = this;\n\n    if (!document.documentElement.contains(el)) {\n      return null;\n    }\n\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n\n    return null;\n  };\n}\n\nfunction closest(element, selector) {\n  if (!selector) {\n    return null;\n  }\n  /*\n   * In certain browsers (e.g. Edge 44.18362.449.0) HTMLDocument does\n   * not support `Element.prototype.closest`. To emulate the correct behaviour\n   * we return null when the method is missing.\n   *\n   * Note that in evergreen browsers `closest(document.documentElement, 'html')`\n   * will return the document element whilst in Edge null will be returned. This\n   * compromise was deemed good enough.\n   */\n\n\n  if (typeof element.closest === 'undefined') {\n    return null;\n  }\n\n  return element.closest(selector);\n}\n/**\n * Force a browser reflow\n * @param element element where to apply the reflow\n */\n\n\nfunction reflow(element) {\n  return (element || document.body).offsetHeight;\n}\n\nconst environment = {\n  animation: true,\n  transitionTimerDelayMs: 5\n};\n/**\n * Global ng-bootstrap config\n *\n * @since 8.0.0\n */\n\nclass NgbConfig {\n  constructor() {\n    this.animation = environment.animation;\n  }\n\n}\n\nNgbConfig.ɵfac = function NgbConfig_Factory(t) {\n  return new (t || NgbConfig)();\n};\n\nNgbConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbConfig_Factory() {\n    return new NgbConfig();\n  },\n  token: NgbConfig,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * A configuration service for the [NgbAccordion](#/components/accordion/api#NgbAccordion) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\n\n\nclass NgbAccordionConfig {\n  constructor(ngbConfig) {\n    this.closeOthers = false;\n    this.animation = ngbConfig.animation;\n  }\n\n}\n\nNgbAccordionConfig.ɵfac = function NgbAccordionConfig_Factory(t) {\n  return new (t || NgbAccordionConfig)(ɵngcc0.ɵɵinject(NgbConfig));\n};\n\nNgbAccordionConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbAccordionConfig_Factory() {\n    return new NgbAccordionConfig(ɵɵinject(NgbConfig));\n  },\n  token: NgbAccordionConfig,\n  providedIn: \"root\"\n});\n\nNgbAccordionConfig.ctorParameters = () => [{\n  type: NgbConfig\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbAccordionConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nfunction getTransitionDurationMs(element) {\n  const {\n    transitionDelay,\n    transitionDuration\n  } = window.getComputedStyle(element);\n  const transitionDelaySec = parseFloat(transitionDelay);\n  const transitionDurationSec = parseFloat(transitionDuration);\n  return (transitionDelaySec + transitionDurationSec) * 1000;\n}\n\nconst noopFn = () => {};\n\nconst ɵ0 = noopFn;\nconst {\n  transitionTimerDelayMs\n} = environment;\nconst runningTransitions = new Map();\n\nconst ngbRunTransition = (element, startFn, options) => {\n  // Getting initial context from options\n  let context = options.context || {}; // Checking if there are already running transitions on the given element.\n\n  const running = runningTransitions.get(element);\n\n  if (running) {\n    switch (options.runningTransition) {\n      // If there is one running and we want for it to 'continue' to run, we have to cancel the new one.\n      // We're not emitting any values, but simply completing the observable (EMPTY).\n      case 'continue':\n        return EMPTY;\n      // If there is one running and we want for it to 'stop', we have to complete the running one.\n      // We're simply completing the running one and not emitting any values and merging newly provided context\n      // with the one coming from currently running transition.\n\n      case 'stop':\n        running.transition$.complete();\n        context = Object.assign(running.context, context);\n        runningTransitions.delete(element);\n    }\n  } // A reflow is required here, to be sure that everything is ready,\n  // Without reflow, the transition will not be started for some widgets, at initialization time\n\n\n  reflow(element);\n  const endFn = startFn(element, context) || noopFn; // If 'prefer-reduced-motion' is enabled, the 'transition' will be set to 'none'.\n  // If animations are disabled, we have to emit a value and complete the observable\n  // In this case we have to call the end function, but can finish immediately by emitting a value,\n  // completing the observable and executing end functions synchronously.\n\n  if (!options.animation || window.getComputedStyle(element).transitionProperty === 'none') {\n    endFn();\n    return of(undefined);\n  } // Starting a new transition\n\n\n  const transition$ = new Subject();\n  const stop$ = transition$.pipe(endWith(true));\n  runningTransitions.set(element, {\n    transition$,\n    context\n  });\n  const transitionDurationMs = getTransitionDurationMs(element); // 1. We have to both listen for the 'transitionend' event and have a 'just-in-case' timer,\n  // because 'transitionend' event might not be fired in some browsers, if the transitioning\n  // element becomes invisible (ex. when scrolling, making browser tab inactive, etc.). The timer\n  // guarantees, that we'll release the DOM element and complete 'ngbRunTransition'.\n  // 2. We need to filter transition end events, because they might bubble from shorter transitions\n  // on inner DOM elements. We're only interested in the transition on the 'element' itself.\n\n  const transitionEnd$ = fromEvent(element, 'transitionend').pipe(takeUntil(stop$), filter(({\n    target\n  }) => target === element));\n  const timer$ = timer(transitionDurationMs + transitionTimerDelayMs).pipe(takeUntil(stop$));\n  race(timer$, transitionEnd$).pipe(takeUntil(stop$)).subscribe(() => {\n    runningTransitions.delete(element);\n    endFn();\n    transition$.next();\n    transition$.complete();\n  });\n  return transition$.asObservable();\n};\n\nfunction measureCollapsingElementHeightPx(element) {\n  // SSR fix for without injecting the PlatformId\n  if (typeof navigator === 'undefined') {\n    return '0px';\n  }\n\n  const {\n    classList\n  } = element;\n  const hasShownClass = classList.contains('show');\n\n  if (!hasShownClass) {\n    classList.add('show');\n  }\n\n  element.style.height = '';\n  const height = element.getBoundingClientRect().height + 'px';\n\n  if (!hasShownClass) {\n    classList.remove('show');\n  }\n\n  return height;\n}\n\nconst ngbCollapsingTransition = (element, context) => {\n  let {\n    direction,\n    maxHeight\n  } = context;\n  const {\n    classList\n  } = element; // No maxHeight -> running the transition for the first time\n\n  if (!maxHeight) {\n    maxHeight = measureCollapsingElementHeightPx(element);\n    context.maxHeight = maxHeight; // Fix the height before starting the animation\n\n    element.style.height = direction !== 'show' ? maxHeight : '0px';\n    classList.remove('collapse');\n    classList.remove('collapsing');\n    classList.remove('show');\n    reflow(element); // Start the animation\n\n    classList.add('collapsing');\n  } // Start or revert the animation\n\n\n  element.style.height = direction === 'show' ? maxHeight : '0px';\n  return () => {\n    classList.remove('collapsing');\n    classList.add('collapse');\n\n    if (direction === 'show') {\n      classList.add('show');\n    } else {\n      classList.remove('show');\n    }\n\n    element.style.height = '';\n  };\n};\n\nlet nextId = 0;\n/**\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\n *\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\n *\n * @since 4.1.0\n */\n\nclass NgbPanelHeader {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbPanelHeader.ɵfac = function NgbPanelHeader_Factory(t) {\n  return new (t || NgbPanelHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPanelHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPanelHeader,\n  selectors: [[\"ng-template\", \"ngbPanelHeader\", \"\"]]\n});\n\nNgbPanelHeader.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPanelHeader, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPanelHeader]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive that wraps only the panel title with HTML markup inside.\n *\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\n */\n\n\nclass NgbPanelTitle {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbPanelTitle.ɵfac = function NgbPanelTitle_Factory(t) {\n  return new (t || NgbPanelTitle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPanelTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPanelTitle,\n  selectors: [[\"ng-template\", \"ngbPanelTitle\", \"\"]]\n});\n\nNgbPanelTitle.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPanelTitle, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPanelTitle]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive that wraps the accordion panel content.\n */\n\n\nclass NgbPanelContent {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbPanelContent.ɵfac = function NgbPanelContent_Factory(t) {\n  return new (t || NgbPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPanelContent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPanelContent,\n  selectors: [[\"ng-template\", \"ngbPanelContent\", \"\"]]\n});\n\nNgbPanelContent.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPanelContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPanelContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive that wraps an individual accordion panel with title and collapsible content.\n */\n\n\nclass NgbPanel {\n  constructor() {\n    /**\n     *  If `true`, the panel is disabled an can't be toggled.\n     */\n    this.disabled = false;\n    /**\n     *  An optional id for the panel that must be unique on the page.\n     *\n     *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\n     */\n\n    this.id = `ngb-panel-${nextId++}`;\n    this.isOpen = false;\n    /* A flag to specified that the transition panel classes have been initialized */\n\n    this.initClassDone = false;\n    /* A flag to specified if the panel is currently being animated, to ensure its presence in the dom */\n\n    this.transitionRunning = false;\n    /**\n     * An event emitted when the panel is shown, after the transition. It has no payload.\n     *\n     * @since 8.0.0\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the panel is hidden, after the transition. It has no payload.\n     *\n     * @since 8.0.0\n     */\n\n    this.hidden = new EventEmitter();\n  }\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.headerTpl = this.headerTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n\n}\n\nNgbPanel.ɵfac = function NgbPanel_Factory(t) {\n  return new (t || NgbPanel)();\n};\n\nNgbPanel.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPanel,\n  selectors: [[\"ngb-panel\"]],\n  contentQueries: function NgbPanel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPanelTitle, 0);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPanelHeader, 0);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPanelContent, 0);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.titleTpls = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerTpls = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTpls = _t);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    id: \"id\",\n    title: \"title\",\n    type: \"type\",\n    cardClass: \"cardClass\"\n  },\n  outputs: {\n    shown: \"shown\",\n    hidden: \"hidden\"\n  }\n});\nNgbPanel.propDecorators = {\n  disabled: [{\n    type: Input\n  }],\n  id: [{\n    type: Input\n  }],\n  title: [{\n    type: Input\n  }],\n  type: [{\n    type: Input\n  }],\n  cardClass: [{\n    type: Input\n  }],\n  shown: [{\n    type: Output\n  }],\n  hidden: [{\n    type: Output\n  }],\n  titleTpls: [{\n    type: ContentChildren,\n    args: [NgbPanelTitle, {\n      descendants: false\n    }]\n  }],\n  headerTpls: [{\n    type: ContentChildren,\n    args: [NgbPanelHeader, {\n      descendants: false\n    }]\n  }],\n  contentTpls: [{\n    type: ContentChildren,\n    args: [NgbPanelContent, {\n      descendants: false\n    }]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPanel, [{\n    type: Directive,\n    args: [{\n      selector: 'ngb-panel'\n    }]\n  }], function () {\n    return [];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    title: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    cardClass: [{\n      type: Input\n    }],\n    titleTpls: [{\n      type: ContentChildren,\n      args: [NgbPanelTitle, {\n        descendants: false\n      }]\n    }],\n    headerTpls: [{\n      type: ContentChildren,\n      args: [NgbPanelHeader, {\n        descendants: false\n      }]\n    }],\n    contentTpls: [{\n      type: ContentChildren,\n      args: [NgbPanelContent, {\n        descendants: false\n      }]\n    }]\n  });\n})();\n/**\n * Accordion is a collection of collapsible panels (bootstrap cards).\n *\n * It can ensure only one panel is opened at a time and allows to customize panel\n * headers.\n */\n\n\nclass NgbAccordion {\n  constructor(config, _element, _ngZone, _changeDetector) {\n    this._element = _element;\n    this._ngZone = _ngZone;\n    this._changeDetector = _changeDetector;\n    /**\n     * An array or comma separated strings of panel ids that should be opened **initially**.\n     *\n     * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\n     * the `(panelChange)` event.\n     */\n\n    this.activeIds = [];\n    /**\n     * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\n     */\n\n    this.destroyOnHide = true;\n    /**\n     * Event emitted right before the panel toggle happens.\n     *\n     * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\n     */\n\n    this.panelChange = new EventEmitter();\n    /**\n     * An event emitted when the expanding animation is finished on the panel. The payload is the panel id.\n     *\n     * @since 8.0.0\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the collapsing animation is finished on the panel, and before the panel element is removed.\n     * The payload is the panel id.\n     *\n     * @since 8.0.0\n     */\n\n    this.hidden = new EventEmitter();\n    this.animation = config.animation;\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n  /**\n   * Checks if a panel with a given id is expanded.\n   */\n\n\n  isExpanded(panelId) {\n    return this.activeIds.indexOf(panelId) > -1;\n  }\n  /**\n   * Expands a panel with a given id.\n   *\n   * Has no effect if the panel is already expanded or disabled.\n   */\n\n\n  expand(panelId) {\n    this._changeOpenState(this._findPanelById(panelId), true);\n  }\n  /**\n   * Expands all panels, if `[closeOthers]` is `false`.\n   *\n   * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n   */\n\n\n  expandAll() {\n    if (this.closeOtherPanels) {\n      if (this.activeIds.length === 0 && this.panels.length) {\n        this._changeOpenState(this.panels.first, true);\n      }\n    } else {\n      this.panels.forEach(panel => this._changeOpenState(panel, true));\n    }\n  }\n  /**\n   * Collapses a panel with the given id.\n   *\n   * Has no effect if the panel is already collapsed or disabled.\n   */\n\n\n  collapse(panelId) {\n    this._changeOpenState(this._findPanelById(panelId), false);\n  }\n  /**\n   * Collapses all opened panels.\n   */\n\n\n  collapseAll() {\n    this.panels.forEach(panel => {\n      this._changeOpenState(panel, false);\n    });\n  }\n  /**\n   * Toggles a panel with the given id.\n   *\n   * Has no effect if the panel is disabled.\n   */\n\n\n  toggle(panelId) {\n    const panel = this._findPanelById(panelId);\n\n    if (panel) {\n      this._changeOpenState(panel, !panel.isOpen);\n    }\n  }\n\n  ngAfterContentChecked() {\n    // active id updates\n    if (isString(this.activeIds)) {\n      this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n    } // update panels open states\n\n\n    this.panels.forEach(panel => {\n      panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1;\n    }); // closeOthers updates\n\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\n      this._closeOthers(this.activeIds[0], false);\n\n      this._updateActiveIds();\n    } // Setup the initial classes here\n\n\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this.panels.forEach(panel => {\n        const panelElement = this._getPanelElement(panel.id);\n\n        if (panelElement) {\n          if (!panel.initClassDone) {\n            panel.initClassDone = true;\n            const {\n              classList\n            } = panelElement;\n            classList.add('collapse');\n\n            if (panel.isOpen) {\n              classList.add('show');\n            }\n          }\n        } else {\n          // Classes must be initialized next time it will be in the dom\n          panel.initClassDone = false;\n        }\n      });\n    });\n  }\n\n  _changeOpenState(panel, nextState) {\n    if (panel != null && !panel.disabled && panel.isOpen !== nextState) {\n      let defaultPrevented = false;\n      this.panelChange.emit({\n        panelId: panel.id,\n        nextState: nextState,\n        preventDefault: () => {\n          defaultPrevented = true;\n        }\n      });\n\n      if (!defaultPrevented) {\n        panel.isOpen = nextState;\n        panel.transitionRunning = true;\n\n        if (nextState && this.closeOtherPanels) {\n          this._closeOthers(panel.id);\n        }\n\n        this._updateActiveIds();\n\n        this._runTransitions(this.animation);\n      }\n    }\n  }\n\n  _closeOthers(panelId, enableTransition = true) {\n    this.panels.forEach(panel => {\n      if (panel.id !== panelId && panel.isOpen) {\n        panel.isOpen = false;\n        panel.transitionRunning = enableTransition;\n      }\n    });\n  }\n\n  _findPanelById(panelId) {\n    return this.panels.find(p => p.id === panelId) || null;\n  }\n\n  _updateActiveIds() {\n    this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\n  }\n\n  _runTransitions(animation, emitEvent = true) {\n    // detectChanges is performed to ensure that all panels are in the dom (via transitionRunning = true)\n    // before starting the animation\n    this._changeDetector.detectChanges();\n\n    this.panels.forEach(panel => {\n      // When panel.transitionRunning is true, the transition needs to be started OR reversed,\n      // The direction (show or hide) is choosen by each panel.isOpen state\n      if (panel.transitionRunning) {\n        const panelElement = this._getPanelElement(panel.id);\n\n        ngbRunTransition(panelElement, ngbCollapsingTransition, {\n          animation,\n          runningTransition: 'stop',\n          context: {\n            direction: panel.isOpen ? 'show' : 'hide'\n          }\n        }).subscribe(() => {\n          panel.transitionRunning = false;\n\n          if (emitEvent) {\n            const {\n              id\n            } = panel;\n\n            if (panel.isOpen) {\n              panel.shown.emit();\n              this.shown.emit(id);\n            } else {\n              panel.hidden.emit();\n              this.hidden.emit(id);\n            }\n          }\n        });\n      }\n    });\n  }\n\n  _getPanelElement(panelId) {\n    return this._element.nativeElement.querySelector('#' + panelId);\n  }\n\n}\n\nNgbAccordion.ɵfac = function NgbAccordion_Factory(t) {\n  return new (t || NgbAccordion)(ɵngcc0.ɵɵdirectiveInject(NgbAccordionConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNgbAccordion.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbAccordion,\n  selectors: [[\"ngb-accordion\"]],\n  contentQueries: function NgbAccordion_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPanel, 0);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panels = _t);\n    }\n  },\n  hostAttrs: [\"role\", \"tablist\", 1, \"accordion\"],\n  hostVars: 1,\n  hostBindings: function NgbAccordion_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-multiselectable\", !ctx.closeOtherPanels);\n    }\n  },\n  inputs: {\n    activeIds: \"activeIds\",\n    destroyOnHide: \"destroyOnHide\",\n    animation: \"animation\",\n    type: \"type\",\n    closeOtherPanels: [\"closeOthers\", \"closeOtherPanels\"]\n  },\n  outputs: {\n    panelChange: \"panelChange\",\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbAccordion\"],\n  decls: 3,\n  vars: 1,\n  consts: [[\"ngbPanelHeader\", \"\"], [\"t\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"btn\", \"btn-link\", 3, \"ngbPanelToggle\"], [3, \"ngTemplateOutlet\"], [\"role\", \"tab\", 3, \"id\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"role\", \"tabpanel\", 3, \"id\", 4, \"ngIf\"], [\"role\", \"tabpanel\", 3, \"id\"], [1, \"card-body\"]],\n  template: function NgbAccordion_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbAccordion_ng_template_0_Template, 3, 3, \"ng-template\", 0, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbAccordion_ng_template_2_Template, 4, 11, \"ng-template\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.panels);\n    }\n  },\n  directives: function () {\n    return [NgbPanelHeader, ɵngcc1.NgForOf, NgbPanelToggle, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf];\n  },\n  encapsulation: 2\n});\n\nNgbAccordion.ctorParameters = () => [{\n  type: NgbAccordionConfig\n}, {\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: ChangeDetectorRef\n}];\n\nNgbAccordion.propDecorators = {\n  panels: [{\n    type: ContentChildren,\n    args: [NgbPanel]\n  }],\n  animation: [{\n    type: Input\n  }],\n  activeIds: [{\n    type: Input\n  }],\n  closeOtherPanels: [{\n    type: Input,\n    args: ['closeOthers']\n  }],\n  destroyOnHide: [{\n    type: Input\n  }],\n  type: [{\n    type: Input\n  }],\n  panelChange: [{\n    type: Output\n  }],\n  shown: [{\n    type: Output\n  }],\n  hidden: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbAccordion, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-accordion',\n      exportAs: 'ngbAccordion',\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'accordion',\n        'role': 'tablist',\n        '[attr.aria-multiselectable]': '!closeOtherPanels'\n      },\n      template: `\n    <ng-template #t ngbPanelHeader let-panel>\n      <button class=\"btn btn-link\" [ngbPanelToggle]=\"panel\">\n        {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n      </button>\n    </ng-template>\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div [class]=\"'card ' + (panel.cardClass || '')\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <ng-template [ngTemplateOutlet]=\"panel.headerTpl?.templateRef || t\"\n                       [ngTemplateOutletContext]=\"{$implicit: panel, opened: panel.isOpen}\"></ng-template>\n        </div>\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             *ngIf=\"!destroyOnHide || panel.isOpen || panel.transitionRunning\">\n          <div class=\"card-body\">\n               <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef || null\"></ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `\n    }]\n  }], function () {\n    return [{\n      type: NgbAccordionConfig\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    activeIds: [{\n      type: Input\n    }],\n    destroyOnHide: [{\n      type: Input\n    }],\n    panelChange: [{\n      type: Output\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    animation: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    closeOtherPanels: [{\n      type: Input,\n      args: ['closeOthers']\n    }],\n    panels: [{\n      type: ContentChildren,\n      args: [NgbPanel]\n    }]\n  });\n})();\n/**\n * A directive to put on a button that toggles panel opening and closing.\n *\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\n *\n * @since 4.1.0\n */\n\n\nclass NgbPanelToggle {\n  constructor(accordion, panel) {\n    this.accordion = accordion;\n    this.panel = panel;\n  }\n\n  set ngbPanelToggle(panel) {\n    if (panel) {\n      this.panel = panel;\n    }\n  }\n\n}\n\nNgbPanelToggle.ɵfac = function NgbPanelToggle_Factory(t) {\n  return new (t || NgbPanelToggle)(ɵngcc0.ɵɵdirectiveInject(NgbAccordion), ɵngcc0.ɵɵdirectiveInject(NgbPanel, 9));\n};\n\nNgbPanelToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPanelToggle,\n  selectors: [[\"button\", \"ngbPanelToggle\", \"\"]],\n  hostAttrs: [\"type\", \"button\"],\n  hostVars: 5,\n  hostBindings: function NgbPanelToggle_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function NgbPanelToggle_click_HostBindingHandler() {\n        return ctx.accordion.toggle(ctx.panel.id);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.panel.disabled);\n      ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.panel.isOpen)(\"aria-controls\", ctx.panel.id);\n      ɵngcc0.ɵɵclassProp(\"collapsed\", !ctx.panel.isOpen);\n    }\n  },\n  inputs: {\n    ngbPanelToggle: \"ngbPanelToggle\"\n  }\n});\n\nNgbPanelToggle.ctorParameters = () => [{\n  type: NgbAccordion\n}, {\n  type: NgbPanel,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Host\n  }]\n}];\n\nNgbPanelToggle.propDecorators = {\n  ngbPanelToggle: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPanelToggle, [{\n    type: Directive,\n    args: [{\n      selector: 'button[ngbPanelToggle]',\n      host: {\n        'type': 'button',\n        '[disabled]': 'panel.disabled',\n        '[class.collapsed]': '!panel.isOpen',\n        '[attr.aria-expanded]': 'panel.isOpen',\n        '[attr.aria-controls]': 'panel.id',\n        '(click)': 'accordion.toggle(panel.id)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NgbAccordion\n    }, {\n      type: NgbPanel,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Host\n      }]\n    }];\n  }, {\n    ngbPanelToggle: [{\n      type: Input\n    }]\n  });\n})();\n\nconst NGB_ACCORDION_DIRECTIVES = [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n\nclass NgbAccordionModule {}\n\nNgbAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbAccordionModule\n});\nNgbAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbAccordionModule_Factory(t) {\n    return new (t || NgbAccordionModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbAccordionModule, {\n    declarations: function () {\n      return [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbAccordionModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_ACCORDION_DIRECTIVES,\n      exports: NGB_ACCORDION_DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\n\n\nclass NgbAlertConfig {\n  constructor(ngbConfig) {\n    this.dismissible = true;\n    this.type = 'warning';\n    this.animation = ngbConfig.animation;\n  }\n\n}\n\nNgbAlertConfig.ɵfac = function NgbAlertConfig_Factory(t) {\n  return new (t || NgbAlertConfig)(ɵngcc0.ɵɵinject(NgbConfig));\n};\n\nNgbAlertConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbAlertConfig_Factory() {\n    return new NgbAlertConfig(ɵɵinject(NgbConfig));\n  },\n  token: NgbAlertConfig,\n  providedIn: \"root\"\n});\n\nNgbAlertConfig.ctorParameters = () => [{\n  type: NgbConfig\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbAlertConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nconst ngbAlertFadingTransition = ({\n  classList\n}) => {\n  classList.remove('show');\n};\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\n\n\nclass NgbAlert {\n  constructor(config, _renderer, _element) {\n    this._renderer = _renderer;\n    this._element = _element;\n    /**\n     * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n     *\n     * @since 8.0.0\n     */\n\n    this.closed = new EventEmitter();\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n    this.animation = config.animation;\n  }\n  /**\n   * Triggers alert closing programmatically (same as clicking on the close button (×)).\n   *\n   * The returned observable will emit and be completed once the closing transition has finished.\n   * If the animations are turned off this happens synchronously.\n   *\n   * Alternatively you could listen or subscribe to the `(closed)` output\n   *\n   * @since 8.0.0\n   */\n\n\n  close() {\n    const transition = ngbRunTransition(this._element.nativeElement, ngbAlertFadingTransition, {\n      animation: this.animation,\n      runningTransition: 'continue'\n    });\n    transition.subscribe(() => this.closed.emit());\n    return transition;\n  }\n\n  ngOnChanges(changes) {\n    const typeChange = changes['type'];\n\n    if (typeChange && !typeChange.firstChange) {\n      this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n\n      this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n    }\n  }\n\n  ngOnInit() {\n    this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`);\n  }\n\n}\n\nNgbAlert.ɵfac = function NgbAlert_Factory(t) {\n  return new (t || NgbAlert)(ɵngcc0.ɵɵdirectiveInject(NgbAlertConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbAlert.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbAlert,\n  selectors: [[\"ngb-alert\"]],\n  hostAttrs: [\"role\", \"alert\", 1, \"alert\", \"show\"],\n  hostVars: 4,\n  hostBindings: function NgbAlert_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"fade\", ctx.animation)(\"alert-dismissible\", ctx.dismissible);\n    }\n  },\n  inputs: {\n    dismissible: \"dismissible\",\n    type: \"type\",\n    animation: \"animation\"\n  },\n  outputs: {\n    closed: \"closed\"\n  },\n  exportAs: [\"ngbAlert\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c3,\n  decls: 2,\n  vars: 1,\n  consts: function () {\n    let i18n_1;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_alert_close$$FESM2015_NG_BOOTSTRAP_JS_2 = goog.getMsg(\"Close\");\n      i18n_1 = MSG_EXTERNAL_ngb_alert_close$$FESM2015_NG_BOOTSTRAP_JS_2;\n    } else {\n      i18n_1 = $localize`:@@ngb.alert.close␟f4e529ae5ffd73001d1ff4bbdeeb0a72e342e5c8␟7819314041543176992:Close`;\n    }\n\n    return [[\"type\", \"button\", \"class\", \"close\", \"aria-label\", i18n_1, 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", i18n_1, 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"]];\n  },\n  template: function NgbAlert_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵtemplate(1, NgbAlert_button_1_Template, 3, 0, \"button\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dismissible);\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  styles: [\"ngb-alert{display:block}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbAlert.ctorParameters = () => [{\n  type: NgbAlertConfig\n}, {\n  type: Renderer2\n}, {\n  type: ElementRef\n}];\n\nNgbAlert.propDecorators = {\n  animation: [{\n    type: Input\n  }],\n  dismissible: [{\n    type: Input\n  }],\n  type: [{\n    type: Input\n  }],\n  closed: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbAlert, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-alert',\n      exportAs: 'ngbAlert',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'role': 'alert',\n        'class': 'alert show',\n        '[class.fade]': 'animation',\n        '[class.alert-dismissible]': 'dismissible'\n      },\n      template: `\n    <ng-content></ng-content>\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n      (click)=\"close()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    `,\n      styles: [\"ngb-alert{display:block}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbAlertConfig\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    closed: [{\n      type: Output\n    }],\n    dismissible: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgbAlertModule {}\n\nNgbAlertModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbAlertModule\n});\nNgbAlertModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbAlertModule_Factory(t) {\n    return new (t || NgbAlertModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbAlertModule, {\n    declarations: function () {\n      return [NgbAlert];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [NgbAlert];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbAlertModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbAlert],\n      exports: [NgbAlert],\n      imports: [CommonModule],\n      entryComponents: [NgbAlert]\n    }]\n  }], null, null);\n})();\n\nclass NgbButtonLabel {}\n\nNgbButtonLabel.ɵfac = function NgbButtonLabel_Factory(t) {\n  return new (t || NgbButtonLabel)();\n};\n\nNgbButtonLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbButtonLabel,\n  selectors: [[\"\", \"ngbButtonLabel\", \"\"]],\n  hostVars: 8,\n  hostBindings: function NgbButtonLabel_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"btn\", true)(\"active\", ctx.active)(\"disabled\", ctx.disabled)(\"focus\", ctx.focused);\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbButtonLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbButtonLabel]',\n      host: {\n        '[class.btn]': 'true',\n        '[class.active]': 'active',\n        '[class.disabled]': 'disabled',\n        '[class.focus]': 'focused'\n      }\n    }]\n  }], null, null);\n})();\n\nconst NGB_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbCheckBox),\n  multi: true\n};\n/**\n * Allows to easily create Bootstrap-style checkbox buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n\nclass NgbCheckBox {\n  constructor(_label, _cd) {\n    this._label = _label;\n    this._cd = _cd;\n    /**\n     * If `true`, the checkbox button will be disabled\n     */\n\n    this.disabled = false;\n    /**\n     * The form control value when the checkbox is checked.\n     */\n\n    this.valueChecked = true;\n    /**\n     * The form control value when the checkbox is unchecked.\n     */\n\n    this.valueUnChecked = false;\n\n    this.onChange = _ => {};\n\n    this.onTouched = () => {};\n  }\n\n  set focused(isFocused) {\n    this._label.focused = isFocused;\n\n    if (!isFocused) {\n      this.onTouched();\n    }\n  }\n\n  onInputChange($event) {\n    const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n    this.onChange(modelToPropagate);\n    this.onTouched();\n    this.writeValue(modelToPropagate);\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this._label.disabled = isDisabled;\n  }\n\n  writeValue(value) {\n    this.checked = value === this.valueChecked;\n    this._label.active = this.checked; // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n\n    this._cd.markForCheck();\n  }\n\n}\n\nNgbCheckBox.ɵfac = function NgbCheckBox_Factory(t) {\n  return new (t || NgbCheckBox)(ɵngcc0.ɵɵdirectiveInject(NgbButtonLabel), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNgbCheckBox.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbCheckBox,\n  selectors: [[\"\", \"ngbButton\", \"\", \"type\", \"checkbox\"]],\n  hostVars: 2,\n  hostBindings: function NgbCheckBox_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"change\", function NgbCheckBox_change_HostBindingHandler($event) {\n        return ctx.onInputChange($event);\n      })(\"focus\", function NgbCheckBox_focus_HostBindingHandler() {\n        return ctx.focused = true;\n      })(\"blur\", function NgbCheckBox_blur_HostBindingHandler() {\n        return ctx.focused = false;\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    valueChecked: \"valueChecked\",\n    valueUnChecked: \"valueUnChecked\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([NGB_CHECKBOX_VALUE_ACCESSOR])]\n});\n\nNgbCheckBox.ctorParameters = () => [{\n  type: NgbButtonLabel\n}, {\n  type: ChangeDetectorRef\n}];\n\nNgbCheckBox.propDecorators = {\n  disabled: [{\n    type: Input\n  }],\n  valueChecked: [{\n    type: Input\n  }],\n  valueUnChecked: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCheckBox, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbButton][type=checkbox]',\n      host: {\n        '[checked]': 'checked',\n        '[disabled]': 'disabled',\n        '(change)': 'onInputChange($event)',\n        '(focus)': 'focused = true',\n        '(blur)': 'focused = false'\n      },\n      providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n    }]\n  }], function () {\n    return [{\n      type: NgbButtonLabel\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    valueChecked: [{\n      type: Input\n    }],\n    valueUnChecked: [{\n      type: Input\n    }]\n  });\n})();\n\nconst NGB_RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRadioGroup),\n  multi: true\n};\nlet nextId$1 = 0;\n/**\n * Allows to easily create Bootstrap-style radio buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n\nclass NgbRadioGroup {\n  constructor() {\n    this._radios = new Set();\n    this._value = null;\n    /**\n     * Name of the radio group applied to radio input elements.\n     *\n     * Will be applied to all radio input elements inside the group,\n     * unless [`NgbRadio`](#/components/buttons/api#NgbRadio)'s specify names themselves.\n     *\n     * If not provided, will be generated in the `ngb-radio-xx` format.\n     */\n\n    this.name = `ngb-radio-${nextId$1++}`;\n\n    this.onChange = _ => {};\n\n    this.onTouched = () => {};\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(isDisabled) {\n    this.setDisabledState(isDisabled);\n  }\n\n  onRadioChange(radio) {\n    this.writeValue(radio.value);\n    this.onChange(radio.value);\n  }\n\n  onRadioValueUpdate() {\n    this._updateRadiosValue();\n  }\n\n  register(radio) {\n    this._radios.add(radio);\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled) {\n    this._disabled = isDisabled;\n\n    this._updateRadiosDisabled();\n  }\n\n  unregister(radio) {\n    this._radios.delete(radio);\n  }\n\n  writeValue(value) {\n    this._value = value;\n\n    this._updateRadiosValue();\n  }\n\n  _updateRadiosValue() {\n    this._radios.forEach(radio => radio.updateValue(this._value));\n  }\n\n  _updateRadiosDisabled() {\n    this._radios.forEach(radio => radio.updateDisabled());\n  }\n\n}\n\nNgbRadioGroup.ɵfac = function NgbRadioGroup_Factory(t) {\n  return new (t || NgbRadioGroup)();\n};\n\nNgbRadioGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbRadioGroup,\n  selectors: [[\"\", \"ngbRadioGroup\", \"\"]],\n  hostAttrs: [\"role\", \"radiogroup\"],\n  inputs: {\n    name: \"name\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([NGB_RADIO_VALUE_ACCESSOR])]\n});\nNgbRadioGroup.propDecorators = {\n  name: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbRadioGroup, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbRadioGroup]',\n      host: {\n        'role': 'radiogroup'\n      },\n      providers: [NGB_RADIO_VALUE_ACCESSOR]\n    }]\n  }], function () {\n    return [];\n  }, {\n    name: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A directive that marks an input of type \"radio\" as a part of the\n * [`NgbRadioGroup`](#/components/buttons/api#NgbRadioGroup).\n */\n\n\nclass NgbRadio {\n  constructor(_group, _label, _renderer, _element, _cd) {\n    this._group = _group;\n    this._label = _label;\n    this._renderer = _renderer;\n    this._element = _element;\n    this._cd = _cd;\n    this._value = null;\n\n    this._group.register(this);\n\n    this.updateDisabled();\n  }\n  /**\n   * The form control value when current radio button is checked.\n   */\n\n\n  set value(value) {\n    this._value = value;\n    const stringValue = value ? value.toString() : '';\n\n    this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n\n    this._group.onRadioValueUpdate();\n  }\n  /**\n   * If `true`, current radio button will be disabled.\n   */\n\n\n  set disabled(isDisabled) {\n    this._disabled = isDisabled !== false;\n    this.updateDisabled();\n  }\n\n  set focused(isFocused) {\n    if (this._label) {\n      this._label.focused = isFocused;\n    }\n\n    if (!isFocused) {\n      this._group.onTouched();\n    }\n  }\n\n  get checked() {\n    return this._checked;\n  }\n\n  get disabled() {\n    return this._group.disabled || this._disabled;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  get nameAttr() {\n    return this.name || this._group.name;\n  }\n\n  ngOnDestroy() {\n    this._group.unregister(this);\n  }\n\n  onChange() {\n    this._group.onRadioChange(this);\n  }\n\n  updateValue(value) {\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    if (this.value !== value) {\n      this._cd.markForCheck();\n    }\n\n    this._checked = this.value === value;\n    this._label.active = this._checked;\n  }\n\n  updateDisabled() {\n    this._label.disabled = this.disabled;\n  }\n\n}\n\nNgbRadio.ɵfac = function NgbRadio_Factory(t) {\n  return new (t || NgbRadio)(ɵngcc0.ɵɵdirectiveInject(NgbRadioGroup), ɵngcc0.ɵɵdirectiveInject(NgbButtonLabel), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNgbRadio.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbRadio,\n  selectors: [[\"\", \"ngbButton\", \"\", \"type\", \"radio\"]],\n  hostVars: 3,\n  hostBindings: function NgbRadio_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"change\", function NgbRadio_change_HostBindingHandler() {\n        return ctx.onChange();\n      })(\"focus\", function NgbRadio_focus_HostBindingHandler() {\n        return ctx.focused = true;\n      })(\"blur\", function NgbRadio_blur_HostBindingHandler() {\n        return ctx.focused = false;\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"name\", ctx.nameAttr);\n    }\n  },\n  inputs: {\n    value: \"value\",\n    disabled: \"disabled\",\n    name: \"name\"\n  }\n});\n\nNgbRadio.ctorParameters = () => [{\n  type: NgbRadioGroup\n}, {\n  type: NgbButtonLabel\n}, {\n  type: Renderer2\n}, {\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}];\n\nNgbRadio.propDecorators = {\n  name: [{\n    type: Input\n  }],\n  value: [{\n    type: Input,\n    args: ['value']\n  }],\n  disabled: [{\n    type: Input,\n    args: ['disabled']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbRadio, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbButton][type=radio]',\n      host: {\n        '[checked]': 'checked',\n        '[disabled]': 'disabled',\n        '[name]': 'nameAttr',\n        '(change)': 'onChange()',\n        '(focus)': 'focused = true',\n        '(blur)': 'focused = false'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NgbRadioGroup\n    }, {\n      type: NgbButtonLabel\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    value: [{\n      type: Input,\n      args: ['value']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['disabled']\n    }],\n    name: [{\n      type: Input\n    }]\n  });\n})();\n\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\n\nclass NgbButtonsModule {}\n\nNgbButtonsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbButtonsModule\n});\nNgbButtonsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbButtonsModule_Factory(t) {\n    return new (t || NgbButtonsModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbButtonsModule, {\n    declarations: [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio],\n    exports: [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbButtonsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_BUTTON_DIRECTIVES,\n      exports: NGB_BUTTON_DIRECTIVES\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\n\n\nclass NgbCarouselConfig {\n  constructor(ngbConfig) {\n    this.interval = 5000;\n    this.wrap = true;\n    this.keyboard = true;\n    this.pauseOnHover = true;\n    this.pauseOnFocus = true;\n    this.showNavigationArrows = true;\n    this.showNavigationIndicators = true;\n    this.animation = ngbConfig.animation;\n  }\n\n}\n\nNgbCarouselConfig.ɵfac = function NgbCarouselConfig_Factory(t) {\n  return new (t || NgbCarouselConfig)(ɵngcc0.ɵɵinject(NgbConfig));\n};\n\nNgbCarouselConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbCarouselConfig_Factory() {\n    return new NgbCarouselConfig(ɵɵinject(NgbConfig));\n  },\n  token: NgbCarouselConfig,\n  providedIn: \"root\"\n});\n\nNgbCarouselConfig.ctorParameters = () => [{\n  type: NgbConfig\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCarouselConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n/**\n * Defines the carousel slide transition direction.\n */\n\n\nvar NgbSlideEventDirection;\n\n(function (NgbSlideEventDirection) {\n  NgbSlideEventDirection[\"LEFT\"] = \"left\";\n  NgbSlideEventDirection[\"RIGHT\"] = \"right\";\n})(NgbSlideEventDirection || (NgbSlideEventDirection = {}));\n\nconst isAnimated = ({\n  classList\n}) => {\n  return classList.contains('carousel-item-left') || classList.contains('carousel-item-right');\n};\n\nconst ɵ0$1 = isAnimated;\n\nconst removeDirectionClasses = ({\n  classList\n}) => {\n  classList.remove('carousel-item-left');\n  classList.remove('carousel-item-right');\n};\n\nconst ɵ1 = removeDirectionClasses;\n\nconst removeClasses = ({\n  classList\n}) => {\n  removeDirectionClasses({\n    classList\n  });\n  classList.remove('carousel-item-prev');\n  classList.remove('carousel-item-next');\n};\n\nconst ɵ2 = removeClasses;\n\nconst ngbCarouselTransitionIn = (element, {\n  direction\n}) => {\n  const {\n    classList\n  } = element;\n\n  if (isAnimated(element)) {\n    // Revert the transition\n    removeDirectionClasses(element);\n  } else {\n    // For the 'in' transition, a 'pre-class' is applied to the element to ensure its visibility\n    classList.add('carousel-item-' + (direction === NgbSlideEventDirection.LEFT ? 'next' : 'prev'));\n    reflow(element);\n    classList.add('carousel-item-' + direction);\n  }\n\n  return () => {\n    removeClasses(element);\n    classList.add('active');\n  };\n};\n\nconst ngbCarouselTransitionOut = (element, {\n  direction\n}) => {\n  const {\n    classList\n  } = element; //  direction is left or right, depending on the way the slide goes out.\n\n  if (isAnimated(element)) {\n    // Revert the transition\n    removeDirectionClasses(element);\n  } else {\n    classList.add('carousel-item-' + direction);\n  }\n\n  return () => {\n    removeClasses(element);\n    classList.remove('active');\n  };\n};\n\nlet nextId$2 = 0;\n/**\n * A directive that wraps the individual carousel slide.\n */\n\nclass NgbSlide {\n  constructor(tplRef) {\n    this.tplRef = tplRef;\n    /**\n     * Slide id that must be unique for the entire document.\n     *\n     * If not provided, will be generated in the `ngb-slide-xx` format.\n     */\n\n    this.id = `ngb-slide-${nextId$2++}`;\n    /**\n     * An event emitted when the slide transition is finished\n     *\n     * @since 8.0.0\n     */\n\n    this.slid = new EventEmitter();\n  }\n\n}\n\nNgbSlide.ɵfac = function NgbSlide_Factory(t) {\n  return new (t || NgbSlide)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbSlide.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbSlide,\n  selectors: [[\"ng-template\", \"ngbSlide\", \"\"]],\n  inputs: {\n    id: \"id\"\n  },\n  outputs: {\n    slid: \"slid\"\n  }\n});\n\nNgbSlide.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\nNgbSlide.propDecorators = {\n  id: [{\n    type: Input\n  }],\n  slid: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbSlide, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbSlide]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, {\n    id: [{\n      type: Input\n    }],\n    slid: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\n\n\nclass NgbCarousel {\n  constructor(config, _platformId, _ngZone, _cd, _container) {\n    this._platformId = _platformId;\n    this._ngZone = _ngZone;\n    this._cd = _cd;\n    this._container = _container;\n    this.NgbSlideEventSource = NgbSlideEventSource;\n    this._destroy$ = new Subject();\n    this._interval$ = new BehaviorSubject(0);\n    this._mouseHover$ = new BehaviorSubject(false);\n    this._focused$ = new BehaviorSubject(false);\n    this._pauseOnHover$ = new BehaviorSubject(false);\n    this._pauseOnFocus$ = new BehaviorSubject(false);\n    this._pause$ = new BehaviorSubject(false);\n    this._wrap$ = new BehaviorSubject(false);\n    /**\n     * An event emitted just before the slide transition starts.\n     *\n     * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n     */\n\n    this.slide = new EventEmitter();\n    /**\n     * An event emitted right after the slide transition is completed.\n     *\n     * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n     *\n     * @since 8.0.0\n     */\n\n    this.slid = new EventEmitter();\n    /*\n     * Keep the ids of the panels currently transitionning\n     * in order to allow only the transition revertion\n     */\n\n    this._transitionIds = null;\n    this.animation = config.animation;\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n    this.pauseOnHover = config.pauseOnHover;\n    this.pauseOnFocus = config.pauseOnFocus;\n    this.showNavigationArrows = config.showNavigationArrows;\n    this.showNavigationIndicators = config.showNavigationIndicators;\n  }\n  /**\n   * Time in milliseconds before the next slide is shown.\n   */\n\n\n  set interval(value) {\n    this._interval$.next(value);\n  }\n\n  get interval() {\n    return this._interval$.value;\n  }\n  /**\n   * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n   */\n\n\n  set wrap(value) {\n    this._wrap$.next(value);\n  }\n\n  get wrap() {\n    return this._wrap$.value;\n  }\n  /**\n   * If `true`, will pause slide switching when mouse cursor hovers the slide.\n   *\n   * @since 2.2.0\n   */\n\n\n  set pauseOnHover(value) {\n    this._pauseOnHover$.next(value);\n  }\n\n  get pauseOnHover() {\n    return this._pauseOnHover$.value;\n  }\n  /**\n   * If `true`, will pause slide switching when the focus is inside the carousel.\n   */\n\n\n  set pauseOnFocus(value) {\n    this._pauseOnFocus$.next(value);\n  }\n\n  get pauseOnFocus() {\n    return this._pauseOnFocus$.value;\n  }\n\n  set mouseHover(value) {\n    this._mouseHover$.next(value);\n  }\n\n  get mouseHover() {\n    return this._mouseHover$.value;\n  }\n\n  set focused(value) {\n    this._focused$.next(value);\n  }\n\n  get focused() {\n    return this._focused$.value;\n  }\n\n  arrowLeft() {\n    this.focus();\n    this.prev(NgbSlideEventSource.ARROW_LEFT);\n  }\n\n  arrowRight() {\n    this.focus();\n    this.next(NgbSlideEventSource.ARROW_RIGHT);\n  }\n\n  ngAfterContentInit() {\n    // setInterval() doesn't play well with SSR and protractor,\n    // so we should run it in the browser and outside Angular\n    if (isPlatformBrowser(this._platformId)) {\n      this._ngZone.runOutsideAngular(() => {\n        const hasNextSlide$ = combineLatest([this.slide.pipe(map(slideEvent => slideEvent.current), startWith(this.activeId)), this._wrap$, this.slides.changes.pipe(startWith(null))]).pipe(map(([currentSlideId, wrap]) => {\n          const slideArr = this.slides.toArray();\n\n          const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n\n          return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n        }), distinctUntilChanged());\n        combineLatest([this._pause$, this._pauseOnHover$, this._mouseHover$, this._pauseOnFocus$, this._focused$, this._interval$, hasNextSlide$]).pipe(map(([pause, pauseOnHover, mouseHover, pauseOnFocus, focused, interval, hasNextSlide]) => pause || pauseOnHover && mouseHover || pauseOnFocus && focused || !hasNextSlide ? 0 : interval), distinctUntilChanged(), switchMap(interval => interval > 0 ? timer(interval, interval) : NEVER), takeUntil(this._destroy$)).subscribe(() => this._ngZone.run(() => this.next(NgbSlideEventSource.TIMER)));\n      });\n    }\n\n    this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(() => this._cd.markForCheck());\n  }\n\n  ngAfterContentChecked() {\n    let activeSlide = this._getSlideById(this.activeId);\n\n    this.activeId = activeSlide ? activeSlide.id : this.slides.length ? this.slides.first.id : '';\n  }\n\n  ngAfterViewInit() {\n    // Initialize the 'active' class (not managed by the template)\n    if (this.activeId) {\n      const element = this._getSlideElement(this.activeId);\n\n      if (element) {\n        element.classList.add('active');\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroy$.next();\n  }\n  /**\n   * Navigates to a slide with the specified identifier.\n   */\n\n\n  select(slideId, source) {\n    this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n  }\n  /**\n   * Navigates to the previous slide.\n   */\n\n\n  prev(source) {\n    this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT, source);\n  }\n  /**\n   * Navigates to the next slide.\n   */\n\n\n  next(source) {\n    this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT, source);\n  }\n  /**\n   * Pauses cycling through the slides.\n   */\n\n\n  pause() {\n    this._pause$.next(true);\n  }\n  /**\n   * Restarts cycling through the slides from left to right.\n   */\n\n\n  cycle() {\n    this._pause$.next(false);\n  }\n  /**\n   * Set the focus on the carousel.\n   */\n\n\n  focus() {\n    this._container.nativeElement.focus();\n  }\n\n  _cycleToSelected(slideIdx, direction, source) {\n    const transitionIds = this._transitionIds;\n\n    if (transitionIds && (transitionIds[0] !== slideIdx || transitionIds[1] !== this.activeId)) {\n      // Revert prevented\n      return;\n    }\n\n    let selectedSlide = this._getSlideById(slideIdx);\n\n    if (selectedSlide && selectedSlide.id !== this.activeId) {\n      this._transitionIds = [this.activeId, slideIdx];\n      this.slide.emit({\n        prev: this.activeId,\n        current: selectedSlide.id,\n        direction: direction,\n        paused: this._pause$.value,\n        source\n      });\n      const options = {\n        animation: this.animation,\n        runningTransition: 'stop',\n        context: {\n          direction\n        }\n      };\n      const transitions = [];\n\n      const activeSlide = this._getSlideById(this.activeId);\n\n      if (activeSlide) {\n        const activeSlideTransition = ngbRunTransition(this._getSlideElement(activeSlide.id), ngbCarouselTransitionOut, options);\n        activeSlideTransition.subscribe(() => {\n          activeSlide.slid.emit({\n            isShown: false,\n            direction,\n            source\n          });\n        });\n        transitions.push(activeSlideTransition);\n      }\n\n      const previousId = this.activeId;\n      this.activeId = selectedSlide.id;\n\n      const nextSlide = this._getSlideById(this.activeId);\n\n      const transition = ngbRunTransition(this._getSlideElement(selectedSlide.id), ngbCarouselTransitionIn, options);\n      transition.subscribe(() => {\n        nextSlide === null || nextSlide === void 0 ? void 0 : nextSlide.slid.emit({\n          isShown: true,\n          direction,\n          source\n        });\n      });\n      transitions.push(transition);\n      zip(...transitions).pipe(take(1)).subscribe(() => {\n        this._transitionIds = null;\n        this.slid.emit({\n          prev: previousId,\n          current: selectedSlide.id,\n          direction: direction,\n          paused: this._pause$.value,\n          source\n        });\n      });\n    } // we get here after the interval fires or any external API call like next(), prev() or select()\n\n\n    this._cd.markForCheck();\n  }\n\n  _getSlideEventDirection(currentActiveSlideId, nextActiveSlideId) {\n    const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n\n    const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n  }\n\n  _getSlideById(slideId) {\n    return this.slides.find(slide => slide.id === slideId) || null;\n  }\n\n  _getSlideIdxById(slideId) {\n    const slide = this._getSlideById(slideId);\n\n    return slide != null ? this.slides.toArray().indexOf(slide) : -1;\n  }\n\n  _getNextSlide(currentSlideId) {\n    const slideArr = this.slides.toArray();\n\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n\n    const isLastSlide = currentSlideIdx === slideArr.length - 1;\n    return isLastSlide ? this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id : slideArr[currentSlideIdx + 1].id;\n  }\n\n  _getPrevSlide(currentSlideId) {\n    const slideArr = this.slides.toArray();\n\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n\n    const isFirstSlide = currentSlideIdx === 0;\n    return isFirstSlide ? this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id : slideArr[currentSlideIdx - 1].id;\n  }\n\n  _getSlideElement(slideId) {\n    return this._container.nativeElement.querySelector(`#slide-${slideId}`);\n  }\n\n}\n\nNgbCarousel.ɵfac = function NgbCarousel_Factory(t) {\n  return new (t || NgbCarousel)(ɵngcc0.ɵɵdirectiveInject(NgbCarouselConfig), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbCarousel.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbCarousel,\n  selectors: [[\"ngb-carousel\"]],\n  contentQueries: function NgbCarousel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbSlide, 0);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.slides = _t);\n    }\n  },\n  hostAttrs: [\"tabIndex\", \"0\", 1, \"carousel\", \"slide\"],\n  hostVars: 3,\n  hostBindings: function NgbCarousel_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keydown.arrowLeft\", function NgbCarousel_keydown_arrowLeft_HostBindingHandler() {\n        return ctx.keyboard && ctx.arrowLeft();\n      })(\"keydown.arrowRight\", function NgbCarousel_keydown_arrowRight_HostBindingHandler() {\n        return ctx.keyboard && ctx.arrowRight();\n      })(\"mouseenter\", function NgbCarousel_mouseenter_HostBindingHandler() {\n        return ctx.mouseHover = true;\n      })(\"mouseleave\", function NgbCarousel_mouseleave_HostBindingHandler() {\n        return ctx.mouseHover = false;\n      })(\"focusin\", function NgbCarousel_focusin_HostBindingHandler() {\n        return ctx.focused = true;\n      })(\"focusout\", function NgbCarousel_focusout_HostBindingHandler() {\n        return ctx.focused = false;\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-activedescendant\", ctx.activeId);\n      ɵngcc0.ɵɵstyleProp(\"display\", \"block\");\n    }\n  },\n  inputs: {\n    animation: \"animation\",\n    interval: \"interval\",\n    wrap: \"wrap\",\n    keyboard: \"keyboard\",\n    pauseOnHover: \"pauseOnHover\",\n    pauseOnFocus: \"pauseOnFocus\",\n    showNavigationArrows: \"showNavigationArrows\",\n    showNavigationIndicators: \"showNavigationIndicators\",\n    activeId: \"activeId\"\n  },\n  outputs: {\n    slide: \"slide\",\n    slid: \"slid\"\n  },\n  exportAs: [\"ngbCarousel\"],\n  decls: 6,\n  vars: 6,\n  consts: function () {\n    let i18n_4;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Currently selected slide number read by screen reader\n       */\n      const MSG_EXTERNAL_ngb_carousel_slide_number$$FESM2015_NG_BOOTSTRAP_JS__5 = goog.getMsg(\" Slide {$interpolation} of {$interpolation_1} \", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\",\n        \"interpolation_1\": \"\\uFFFD1\\uFFFD\"\n      });\n      i18n_4 = MSG_EXTERNAL_ngb_carousel_slide_number$$FESM2015_NG_BOOTSTRAP_JS__5;\n    } else {\n      i18n_4 = $localize`:Currently selected slide number read by screen reader@@ngb.carousel.slide-number␟a65b1b49aa7dd8c4f3004da6a8c2241814dae621␟783273603869937627: Slide ${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION: of ${\"\\uFFFD1\\uFFFD\"}:INTERPOLATION_1: `;\n    }\n\n    let i18n_6;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_carousel_previous$$FESM2015_NG_BOOTSTRAP_JS__7 = goog.getMsg(\"Previous\");\n      i18n_6 = MSG_EXTERNAL_ngb_carousel_previous$$FESM2015_NG_BOOTSTRAP_JS__7;\n    } else {\n      i18n_6 = $localize`:@@ngb.carousel.previous␟680d5c75b7fd8d37961083608b9fcdc4167b4c43␟4452427314943113135:Previous`;\n    }\n\n    let i18n_8;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_carousel_next$$FESM2015_NG_BOOTSTRAP_JS__9 = goog.getMsg(\"Next\");\n      i18n_8 = MSG_EXTERNAL_ngb_carousel_next$$FESM2015_NG_BOOTSTRAP_JS__9;\n    } else {\n      i18n_8 = $localize`:@@ngb.carousel.next␟f732c304c7433e5a83ffcd862c3dce709a0f4982␟3885497195825665706:Next`;\n    }\n\n    return [[\"role\", \"tablist\", 1, \"carousel-indicators\"], [\"role\", \"tab\", 3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"carousel-inner\"], [\"class\", \"carousel-item\", \"role\", \"tabpanel\", 3, \"id\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"carousel-control-prev\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"carousel-control-next\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"role\", \"tab\", 3, \"click\"], [\"role\", \"tabpanel\", 1, \"carousel-item\", 3, \"id\"], [1, \"sr-only\"], i18n_4, [3, \"ngTemplateOutlet\"], [\"role\", \"button\", 1, \"carousel-control-prev\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-prev-icon\"], i18n_6, [\"role\", \"button\", 1, \"carousel-control-next\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-next-icon\"], i18n_8];\n  },\n  template: function NgbCarousel_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"ol\", 0);\n      ɵngcc0.ɵɵtemplate(1, NgbCarousel_li_1_Template, 1, 5, \"li\", 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(3, NgbCarousel_div_3_Template, 4, 4, \"div\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(4, NgbCarousel_a_4_Template, 4, 0, \"a\", 4);\n      ɵngcc0.ɵɵtemplate(5, NgbCarousel_a_5_Template, 4, 0, \"a\", 5);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"sr-only\", !ctx.showNavigationIndicators);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.slides);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.slides);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showNavigationArrows);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showNavigationArrows);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbCarousel.ctorParameters = () => [{\n  type: NgbCarouselConfig\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [PLATFORM_ID]\n  }]\n}, {\n  type: NgZone\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ElementRef\n}];\n\nNgbCarousel.propDecorators = {\n  slides: [{\n    type: ContentChildren,\n    args: [NgbSlide]\n  }],\n  animation: [{\n    type: Input\n  }],\n  activeId: [{\n    type: Input\n  }],\n  interval: [{\n    type: Input\n  }],\n  wrap: [{\n    type: Input\n  }],\n  keyboard: [{\n    type: Input\n  }],\n  pauseOnHover: [{\n    type: Input\n  }],\n  pauseOnFocus: [{\n    type: Input\n  }],\n  showNavigationArrows: [{\n    type: Input\n  }],\n  showNavigationIndicators: [{\n    type: Input\n  }],\n  slide: [{\n    type: Output\n  }],\n  slid: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCarousel, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-carousel',\n      exportAs: 'ngbCarousel',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'carousel slide',\n        '[style.display]': '\"block\"',\n        'tabIndex': '0',\n        '(keydown.arrowLeft)': 'keyboard && arrowLeft()',\n        '(keydown.arrowRight)': 'keyboard && arrowRight()',\n        '(mouseenter)': 'mouseHover = true',\n        '(mouseleave)': 'mouseHover = false',\n        '(focusin)': 'focused = true',\n        '(focusout)': 'focused = false',\n        '[attr.aria-activedescendant]': 'activeId'\n      },\n      template: `\n    <ol class=\"carousel-indicators\" [class.sr-only]=\"!showNavigationIndicators\" role=\"tablist\">\n      <li *ngFor=\"let slide of slides\" [class.active]=\"slide.id === activeId\"\n          role=\"tab\" [attr.aria-labelledby]=\"'slide-' + slide.id\" [attr.aria-controls]=\"'slide-' + slide.id\"\n          [attr.aria-selected]=\"slide.id === activeId\"\n          (click)=\"focus();select(slide.id, NgbSlideEventSource.INDICATOR);\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides; index as i; count as c\" class=\"carousel-item\" [id]=\"'slide-' + slide.id\" role=\"tabpanel\">\n        <span class=\"sr-only\" i18n=\"Currently selected slide number read by screen reader@@ngb.carousel.slide-number\">\n          Slide {{i + 1}} of {{c}}\n        </span>\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"arrowLeft()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"arrowRight()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </a>\n  `\n    }]\n  }], function () {\n    return [{\n      type: NgbCarouselConfig\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    slide: [{\n      type: Output\n    }],\n    slid: [{\n      type: Output\n    }],\n    animation: [{\n      type: Input\n    }],\n    interval: [{\n      type: Input\n    }],\n    wrap: [{\n      type: Input\n    }],\n    keyboard: [{\n      type: Input\n    }],\n    pauseOnHover: [{\n      type: Input\n    }],\n    pauseOnFocus: [{\n      type: Input\n    }],\n    showNavigationArrows: [{\n      type: Input\n    }],\n    showNavigationIndicators: [{\n      type: Input\n    }],\n    activeId: [{\n      type: Input\n    }],\n    slides: [{\n      type: ContentChildren,\n      args: [NgbSlide]\n    }]\n  });\n})();\n\nvar NgbSlideEventSource;\n\n(function (NgbSlideEventSource) {\n  NgbSlideEventSource[\"TIMER\"] = \"timer\";\n  NgbSlideEventSource[\"ARROW_LEFT\"] = \"arrowLeft\";\n  NgbSlideEventSource[\"ARROW_RIGHT\"] = \"arrowRight\";\n  NgbSlideEventSource[\"INDICATOR\"] = \"indicator\";\n})(NgbSlideEventSource || (NgbSlideEventSource = {}));\n\nconst NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n\nclass NgbCarouselModule {}\n\nNgbCarouselModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbCarouselModule\n});\nNgbCarouselModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbCarouselModule_Factory(t) {\n    return new (t || NgbCarouselModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbCarouselModule, {\n    declarations: function () {\n      return [NgbCarousel, NgbSlide];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [NgbCarousel, NgbSlide];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCarouselModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_CAROUSEL_DIRECTIVES,\n      exports: NGB_CAROUSEL_DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [NgbCollapse](#/components/collapse/api#NgbCollapse) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all collapses used in the application.\n */\n\n\nclass NgbCollapseConfig {\n  constructor(ngbConfig) {\n    this.animation = ngbConfig.animation;\n  }\n\n}\n\nNgbCollapseConfig.ɵfac = function NgbCollapseConfig_Factory(t) {\n  return new (t || NgbCollapseConfig)(ɵngcc0.ɵɵinject(NgbConfig));\n};\n\nNgbCollapseConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbCollapseConfig_Factory() {\n    return new NgbCollapseConfig(ɵɵinject(NgbConfig));\n  },\n  token: NgbCollapseConfig,\n  providedIn: \"root\"\n});\n\nNgbCollapseConfig.ctorParameters = () => [{\n  type: NgbConfig\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCollapseConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n/**\n * A directive to provide a simple way of hiding and showing elements on the page.\n */\n\n\nclass NgbCollapse {\n  constructor(_element, config) {\n    this._element = _element;\n    /**\n     * If `true`, collapse will be animated.\n     *\n     * Animation is triggered only when clicked on triggering element\n     * or via the `.toggle()` function\n     *\n     * @since 8.0.0\n     */\n\n    this.animation = false;\n    /**\n     * If `true`, will collapse the element or show it otherwise.\n     */\n\n    this.collapsed = false;\n    this.ngbCollapseChange = new EventEmitter();\n    /**\n     * An event emitted when the collapse element is shown, after the transition. It has no payload.\n     *\n     * @since 8.0.0\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the collapse element is hidden, after the transition. It has no payload.\n     *\n     * @since 8.0.0\n     */\n\n    this.hidden = new EventEmitter();\n    this.animation = config.animation;\n  }\n\n  ngOnInit() {\n    this._element.nativeElement.classList.add('collapse');\n\n    this._runTransition(this.collapsed, false, false);\n  }\n\n  ngOnChanges({\n    collapsed\n  }) {\n    if (!collapsed.firstChange) {\n      this._runTransition(this.collapsed, this.animation);\n    }\n  }\n  /**\n   * Triggers collapsing programmatically.\n   *\n   * If there is a collapsing transition running already, it will be reversed.\n   * If the animations are turned off this happens synchronously.\n   *\n   * @since 8.0.0\n   */\n\n\n  toggle(open = this.collapsed) {\n    this.collapsed = !open;\n    this.ngbCollapseChange.next(this.collapsed);\n\n    this._runTransition(this.collapsed, this.animation);\n  }\n\n  _runTransition(collapsed, animation, emitEvent = true) {\n    ngbRunTransition(this._element.nativeElement, ngbCollapsingTransition, {\n      animation,\n      runningTransition: 'stop',\n      context: {\n        direction: collapsed ? 'hide' : 'show'\n      }\n    }).subscribe(() => {\n      if (emitEvent) {\n        if (collapsed) {\n          this.hidden.emit();\n        } else {\n          this.shown.emit();\n        }\n      }\n    });\n  }\n\n}\n\nNgbCollapse.ɵfac = function NgbCollapse_Factory(t) {\n  return new (t || NgbCollapse)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NgbCollapseConfig));\n};\n\nNgbCollapse.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbCollapse,\n  selectors: [[\"\", \"ngbCollapse\", \"\"]],\n  inputs: {\n    animation: \"animation\",\n    collapsed: [\"ngbCollapse\", \"collapsed\"]\n  },\n  outputs: {\n    ngbCollapseChange: \"ngbCollapseChange\",\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbCollapse\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNgbCollapse.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgbCollapseConfig\n}];\n\nNgbCollapse.propDecorators = {\n  animation: [{\n    type: Input\n  }],\n  collapsed: [{\n    type: Input,\n    args: ['ngbCollapse']\n  }],\n  ngbCollapseChange: [{\n    type: Output\n  }],\n  shown: [{\n    type: Output\n  }],\n  hidden: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCollapse, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbCollapse]',\n      exportAs: 'ngbCollapse'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: NgbCollapseConfig\n    }];\n  }, {\n    animation: [{\n      type: Input\n    }],\n    collapsed: [{\n      type: Input,\n      args: ['ngbCollapse']\n    }],\n    ngbCollapseChange: [{\n      type: Output\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }]\n  });\n})();\n\nclass NgbCollapseModule {}\n\nNgbCollapseModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbCollapseModule\n});\nNgbCollapseModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbCollapseModule_Factory(t) {\n    return new (t || NgbCollapseModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbCollapseModule, {\n    declarations: [NgbCollapse],\n    exports: [NgbCollapse]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCollapseModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbCollapse],\n      exports: [NgbCollapse]\n    }]\n  }], null, null);\n})();\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\n\n\nclass NgbDate {\n  constructor(year, month, day) {\n    this.year = isInteger(year) ? year : null;\n    this.month = isInteger(month) ? month : null;\n    this.day = isInteger(day) ? day : null;\n  }\n  /**\n   * A **static method** that creates a new date object from the `NgbDateStruct`,\n   *\n   * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n   *\n   * If the `date` is already of `NgbDate` type, the method will return the same object.\n   */\n\n\n  static from(date) {\n    if (date instanceof NgbDate) {\n      return date;\n    }\n\n    return date ? new NgbDate(date.year, date.month, date.day) : null;\n  }\n  /**\n   * Checks if the current date is equal to another date.\n   */\n\n\n  equals(other) {\n    return other != null && this.year === other.year && this.month === other.month && this.day === other.day;\n  }\n  /**\n   * Checks if the current date is before another date.\n   */\n\n\n  before(other) {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day < other.day;\n      } else {\n        return this.month < other.month;\n      }\n    } else {\n      return this.year < other.year;\n    }\n  }\n  /**\n   * Checks if the current date is after another date.\n   */\n\n\n  after(other) {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day > other.day;\n      } else {\n        return this.month > other.month;\n      }\n    } else {\n      return this.year > other.year;\n    }\n  }\n\n}\n\nfunction fromJSDate(jsDate) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\n\nfunction toJSDate(date) {\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12); // this is done avoid 30 -> 1930 conversion\n\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n\n  return jsDate;\n}\n\nfunction NGB_DATEPICKER_CALENDAR_FACTORY() {\n  return new NgbCalendarGregorian();\n}\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n */\n\n\nclass NgbCalendar {}\n\nNgbCalendar.ɵfac = function NgbCalendar_Factory(t) {\n  return new (t || NgbCalendar)();\n};\n\nNgbCalendar.ɵprov = ɵɵdefineInjectable({\n  factory: NGB_DATEPICKER_CALENDAR_FACTORY,\n  token: NgbCalendar,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCalendar, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_CALENDAR_FACTORY\n    }]\n  }], null, null);\n})();\n\nclass NgbCalendarGregorian extends NgbCalendar {\n  getDaysPerWeek() {\n    return 7;\n  }\n\n  getMonths() {\n    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  }\n\n  getWeeksPerMonth() {\n    return 6;\n  }\n\n  getNext(date, period = 'd', number = 1) {\n    let jsDate = toJSDate(date);\n    let checkMonth = true;\n    let expectedMonth = jsDate.getMonth();\n\n    switch (period) {\n      case 'y':\n        jsDate.setFullYear(jsDate.getFullYear() + number);\n        break;\n\n      case 'm':\n        expectedMonth += number;\n        jsDate.setMonth(expectedMonth);\n        expectedMonth = expectedMonth % 12;\n\n        if (expectedMonth < 0) {\n          expectedMonth = expectedMonth + 12;\n        }\n\n        break;\n\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        checkMonth = false;\n        break;\n\n      default:\n        return date;\n    }\n\n    if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n      // this means the destination month has less days than the initial month\n      // let's go back to the end of the previous month:\n      jsDate.setDate(0);\n    }\n\n    return fromJSDate(jsDate);\n  }\n\n  getPrev(date, period = 'd', number = 1) {\n    return this.getNext(date, period, -number);\n  }\n\n  getWeekday(date) {\n    let jsDate = toJSDate(date);\n    let day = jsDate.getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week, firstDayOfWeek) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    let date = week[thursdayIndex];\n    const jsDate = toJSDate(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\n    const time = jsDate.getTime();\n    jsDate.setMonth(0); // Compare with Jan 1\n\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday() {\n    return fromJSDate(new Date());\n  }\n\n  isValid(date) {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    } // year 0 doesn't exist in Gregorian calendar\n\n\n    if (date.year === 0) {\n      return false;\n    }\n\n    const jsDate = toJSDate(date);\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month && jsDate.getDate() === date.day;\n  }\n\n}\n\nNgbCalendarGregorian.ɵfac = function NgbCalendarGregorian_Factory(t) {\n  return ɵNgbCalendarGregorian_BaseFactory(t || NgbCalendarGregorian);\n};\n\nNgbCalendarGregorian.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarGregorian,\n  factory: NgbCalendarGregorian.ɵfac\n});\nconst ɵNgbCalendarGregorian_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarGregorian);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCalendarGregorian, [{\n    type: Injectable\n  }], null, null);\n})();\n\nfunction isChangedDate(prev, next) {\n  return !dateComparator(prev, next);\n}\n\nfunction isChangedMonth(prev, next) {\n  return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\n\nfunction dateComparator(prev, next) {\n  return !prev && !next || !!prev && !!next && prev.equals(next);\n}\n\nfunction checkMinBeforeMax(minDate, maxDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n  }\n}\n\nfunction checkDateInRange(date, minDate, maxDate) {\n  if (date && minDate && date.before(minDate)) {\n    return minDate;\n  }\n\n  if (date && maxDate && date.after(maxDate)) {\n    return maxDate;\n  }\n\n  return date || null;\n}\n\nfunction isDateSelectable(date, state) {\n  const {\n    minDate,\n    maxDate,\n    disabled,\n    markDisabled\n  } = state; // clang-format off\n\n  return !(date === null || date === undefined || disabled || markDisabled && markDisabled(date, {\n    year: date.year,\n    month: date.month\n  }) || minDate && date.before(minDate) || maxDate && date.after(maxDate)); // clang-format on\n}\n\nfunction generateSelectBoxMonths(calendar, date, minDate, maxDate) {\n  if (!date) {\n    return [];\n  }\n\n  let months = calendar.getMonths(date.year);\n\n  if (minDate && date.year === minDate.year) {\n    const index = months.findIndex(month => month === minDate.month);\n    months = months.slice(index);\n  }\n\n  if (maxDate && date.year === maxDate.year) {\n    const index = months.findIndex(month => month === maxDate.month);\n    months = months.slice(0, index + 1);\n  }\n\n  return months;\n}\n\nfunction generateSelectBoxYears(date, minDate, maxDate) {\n  if (!date) {\n    return [];\n  }\n\n  const start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n  const end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n  const length = end - start + 1;\n  const numbers = Array(length);\n\n  for (let i = 0; i < length; i++) {\n    numbers[i] = start + i;\n  }\n\n  return numbers;\n}\n\nfunction nextMonthDisabled(calendar, date, maxDate) {\n  const nextDate = Object.assign(calendar.getNext(date, 'm'), {\n    day: 1\n  });\n  return maxDate != null && nextDate.after(maxDate);\n}\n\nfunction prevMonthDisabled(calendar, date, minDate) {\n  const prevDate = Object.assign(calendar.getPrev(date, 'm'), {\n    day: 1\n  });\n  return minDate != null && (prevDate.year === minDate.year && prevDate.month < minDate.month || prevDate.year < minDate.year && minDate.month === 1);\n}\n\nfunction buildMonths(calendar, date, state, i18n, force) {\n  const {\n    displayMonths,\n    months\n  } = state; // move old months to a temporary array\n\n  const monthsToReuse = months.splice(0, months.length); // generate new first dates, nullify or reuse months\n\n  const firstDates = Array.from({\n    length: displayMonths\n  }, (_, i) => {\n    const firstDate = Object.assign(calendar.getNext(date, 'm', i), {\n      day: 1\n    });\n    months[i] = null;\n\n    if (!force) {\n      const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate)); // move reused month back to months\n\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n\n    return firstDate;\n  }); // rebuild nullified months\n\n  firstDates.forEach((firstDate, i) => {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {});\n    }\n  });\n  return months;\n}\n\nfunction buildMonth(calendar, date, state, i18n, month = {}) {\n  const {\n    dayTemplateData,\n    minDate,\n    maxDate,\n    firstDayOfWeek,\n    markDisabled,\n    outsideDays\n  } = state;\n  const calendarToday = calendar.getToday();\n  month.firstDate = null;\n  month.lastDate = null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n  date = getFirstViewDate(calendar, date, firstDayOfWeek); // month has weeks\n\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    let weekObject = month.weeks[week];\n\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {\n        number: 0,\n        days: [],\n        collapsed: true\n      };\n    }\n\n    const days = weekObject.days; // week has days\n\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0) {\n        month.weekdays[day] = calendar.getWeekday(date);\n      }\n\n      const newDate = new NgbDate(date.year, date.month, date.day);\n      const nextDate = calendar.getNext(newDate);\n      const ariaLabel = i18n.getDayAriaLabel(newDate); // marking date as disabled\n\n      let disabled = !!(minDate && newDate.before(minDate) || maxDate && newDate.after(maxDate));\n\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {\n          month: month.number,\n          year: month.year\n        });\n      } // today\n\n\n      let today = newDate.equals(calendarToday); // adding user-provided data to the context\n\n      let contextUserData = dayTemplateData ? dayTemplateData(newDate, {\n        month: month.number,\n        year: month.year\n      }) : undefined; // saving first date of the month\n\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      } // saving last date of the month\n\n\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n\n      let dayObject = days[day];\n\n      if (!dayObject) {\n        dayObject = days[day] = {};\n      }\n\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(dayObject.context || {}, {\n        $implicit: newDate,\n        date: newDate,\n        data: contextUserData,\n        currentMonth: month.number,\n        currentYear: month.year,\n        disabled,\n        focused: false,\n        selected: false,\n        today\n      });\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n      date = nextDate;\n    }\n\n    weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek); // marking week as collapsed\n\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number && days[days.length - 1].date.month !== month.number;\n  }\n\n  return month;\n}\n\nfunction getFirstViewDate(calendar, date, firstDayOfWeek) {\n  const daysPerWeek = calendar.getDaysPerWeek();\n  const firstMonthDate = new NgbDate(date.year, date.month, 1);\n  const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n\nfunction NGB_DATEPICKER_18N_FACTORY(locale) {\n  return new NgbDatepickerI18nDefault(locale);\n}\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\n\n\nclass NgbDatepickerI18n {\n  /**\n   * Returns the textual representation of a day that is rendered in a day cell.\n   *\n   * @since 3.0.0\n   */\n  getDayNumerals(date) {\n    return `${date.day}`;\n  }\n  /**\n   * Returns the textual representation of a week number rendered by datepicker.\n   *\n   * @since 3.0.0\n   */\n\n\n  getWeekNumerals(weekNumber) {\n    return `${weekNumber}`;\n  }\n  /**\n   * Returns the textual representation of a year that is rendered in the datepicker year select box.\n   *\n   * @since 3.0.0\n   */\n\n\n  getYearNumerals(year) {\n    return `${year}`;\n  }\n\n}\n\nNgbDatepickerI18n.ɵfac = function NgbDatepickerI18n_Factory(t) {\n  return new (t || NgbDatepickerI18n)();\n};\n\nNgbDatepickerI18n.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbDatepickerI18n_Factory() {\n    return NGB_DATEPICKER_18N_FACTORY(ɵɵinject(LOCALE_ID));\n  },\n  token: NgbDatepickerI18n,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerI18n, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_18N_FACTORY,\n      deps: [LOCALE_ID]\n    }]\n  }], null, null);\n})();\n\nclass NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n  constructor(_locale) {\n    super();\n    this._locale = _locale;\n    const weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n    this._weekdaysShort = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n    this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n  }\n\n  getWeekdayShortName(weekday) {\n    return this._weekdaysShort[weekday - 1] || '';\n  }\n\n  getMonthShortName(month) {\n    return this._monthsShort[month - 1] || '';\n  }\n\n  getMonthFullName(month) {\n    return this._monthsFull[month - 1] || '';\n  }\n\n  getDayAriaLabel(date) {\n    const jsDate = new Date(date.year, date.month - 1, date.day);\n    return formatDate(jsDate, 'fullDate', this._locale);\n  }\n\n}\n\nNgbDatepickerI18nDefault.ɵfac = function NgbDatepickerI18nDefault_Factory(t) {\n  return new (t || NgbDatepickerI18nDefault)(ɵngcc0.ɵɵinject(LOCALE_ID));\n};\n\nNgbDatepickerI18nDefault.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDatepickerI18nDefault,\n  factory: NgbDatepickerI18nDefault.ɵfac\n});\n\nNgbDatepickerI18nDefault.ctorParameters = () => [{\n  type: String,\n  decorators: [{\n    type: Inject,\n    args: [LOCALE_ID]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerI18nDefault, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, null);\n})();\n\nclass NgbDatepickerService {\n  constructor(_calendar, _i18n) {\n    this._calendar = _calendar;\n    this._i18n = _i18n;\n    this._VALIDATORS = {\n      dayTemplateData: dayTemplateData => {\n        if (this._state.dayTemplateData !== dayTemplateData) {\n          return {\n            dayTemplateData\n          };\n        }\n      },\n      displayMonths: displayMonths => {\n        displayMonths = toInteger(displayMonths);\n\n        if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n          return {\n            displayMonths\n          };\n        }\n      },\n      disabled: disabled => {\n        if (this._state.disabled !== disabled) {\n          return {\n            disabled\n          };\n        }\n      },\n      firstDayOfWeek: firstDayOfWeek => {\n        firstDayOfWeek = toInteger(firstDayOfWeek);\n\n        if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n          return {\n            firstDayOfWeek\n          };\n        }\n      },\n      focusVisible: focusVisible => {\n        if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n          return {\n            focusVisible\n          };\n        }\n      },\n      markDisabled: markDisabled => {\n        if (this._state.markDisabled !== markDisabled) {\n          return {\n            markDisabled\n          };\n        }\n      },\n      maxDate: date => {\n        const maxDate = this.toValidDate(date, null);\n\n        if (isChangedDate(this._state.maxDate, maxDate)) {\n          return {\n            maxDate\n          };\n        }\n      },\n      minDate: date => {\n        const minDate = this.toValidDate(date, null);\n\n        if (isChangedDate(this._state.minDate, minDate)) {\n          return {\n            minDate\n          };\n        }\n      },\n      navigation: navigation => {\n        if (this._state.navigation !== navigation) {\n          return {\n            navigation\n          };\n        }\n      },\n      outsideDays: outsideDays => {\n        if (this._state.outsideDays !== outsideDays) {\n          return {\n            outsideDays\n          };\n        }\n      }\n    };\n    this._model$ = new Subject();\n    this._dateSelect$ = new Subject();\n    this._state = {\n      dayTemplateData: null,\n      markDisabled: null,\n      maxDate: null,\n      minDate: null,\n      disabled: false,\n      displayMonths: 1,\n      firstDate: null,\n      firstDayOfWeek: 1,\n      lastDate: null,\n      focusDate: null,\n      focusVisible: false,\n      months: [],\n      navigation: 'select',\n      outsideDays: 'visible',\n      prevDisabled: false,\n      nextDisabled: false,\n      selectedDate: null,\n      selectBoxes: {\n        years: [],\n        months: []\n      }\n    };\n  }\n\n  get model$() {\n    return this._model$.pipe(filter(model => model.months.length > 0));\n  }\n\n  get dateSelect$() {\n    return this._dateSelect$.pipe(filter(date => date !== null));\n  }\n\n  set(options) {\n    let patch = Object.keys(options).map(key => this._VALIDATORS[key](options[key])).reduce((obj, part) => Object.assign(Object.assign({}, obj), part), {});\n\n    if (Object.keys(patch).length > 0) {\n      this._nextState(patch);\n    }\n  }\n\n  focus(date) {\n    const focusedDate = this.toValidDate(date, null);\n\n    if (focusedDate != null && !this._state.disabled && isChangedDate(this._state.focusDate, focusedDate)) {\n      this._nextState({\n        focusDate: date\n      });\n    }\n  }\n\n  focusSelect() {\n    if (isDateSelectable(this._state.focusDate, this._state)) {\n      this.select(this._state.focusDate, {\n        emitEvent: true\n      });\n    }\n  }\n\n  open(date) {\n    const firstDate = this.toValidDate(date, this._calendar.getToday());\n\n    if (firstDate != null && !this._state.disabled && (!this._state.firstDate || isChangedMonth(this._state.firstDate, firstDate))) {\n      this._nextState({\n        firstDate\n      });\n    }\n  }\n\n  select(date, options = {}) {\n    const selectedDate = this.toValidDate(date, null);\n\n    if (selectedDate != null && !this._state.disabled) {\n      if (isChangedDate(this._state.selectedDate, selectedDate)) {\n        this._nextState({\n          selectedDate\n        });\n      }\n\n      if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n        this._dateSelect$.next(selectedDate);\n      }\n    }\n  }\n\n  toValidDate(date, defaultValue) {\n    const ngbDate = NgbDate.from(date);\n\n    if (defaultValue === undefined) {\n      defaultValue = this._calendar.getToday();\n    }\n\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n  }\n\n  getMonth(struct) {\n    for (let month of this._state.months) {\n      if (struct.month === month.number && struct.year === month.year) {\n        return month;\n      }\n    }\n\n    throw new Error(`month ${struct.month} of year ${struct.year} not found`);\n  }\n\n  _nextState(patch) {\n    const newState = this._updateState(patch);\n\n    this._patchContexts(newState);\n\n    this._state = newState;\n\n    this._model$.next(this._state);\n  }\n\n  _patchContexts(state) {\n    const {\n      months,\n      displayMonths,\n      selectedDate,\n      focusDate,\n      focusVisible,\n      disabled,\n      outsideDays\n    } = state;\n    state.months.forEach(month => {\n      month.weeks.forEach(week => {\n        week.days.forEach(day => {\n          // patch focus flag\n          if (focusDate) {\n            day.context.focused = focusDate.equals(day.date) && focusVisible;\n          } // calculating tabindex\n\n\n          day.tabindex = !disabled && focusDate && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1; // override context disabled\n\n          if (disabled === true) {\n            day.context.disabled = true;\n          } // patch selection flag\n\n\n          if (selectedDate !== undefined) {\n            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n          } // visibility\n\n\n          if (month.number !== day.date.month) {\n            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' || displayMonths > 1 && day.date.after(months[0].firstDate) && day.date.before(months[displayMonths - 1].lastDate);\n          }\n        });\n      });\n    });\n  }\n\n  _updateState(patch) {\n    // patching fields\n    const state = Object.assign({}, this._state, patch);\n    let startDate = state.firstDate; // min/max dates changed\n\n    if ('minDate' in patch || 'maxDate' in patch) {\n      checkMinBeforeMax(state.minDate, state.maxDate);\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n    } // disabled\n\n\n    if ('disabled' in patch) {\n      state.focusVisible = false;\n    } // initial rebuild via 'select()'\n\n\n    if ('selectedDate' in patch && this._state.months.length === 0) {\n      startDate = state.selectedDate;\n    } // terminate early if only focus visibility was changed\n\n\n    if ('focusVisible' in patch) {\n      return state;\n    } // focus date changed\n\n\n    if ('focusDate' in patch) {\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      startDate = state.focusDate; // nothing to rebuild if only focus changed and it is still visible\n\n      if (state.months.length !== 0 && state.focusDate && !state.focusDate.before(state.firstDate) && !state.focusDate.after(state.lastDate)) {\n        return state;\n      }\n    } // first date changed\n\n\n    if ('firstDate' in patch) {\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.firstDate;\n    } // rebuilding months\n\n\n    if (startDate) {\n      const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n      const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild); // updating months and boundary dates\n\n      state.months = months;\n      state.firstDate = months[0].firstDate;\n      state.lastDate = months[months.length - 1].lastDate; // reset selected date if 'markDisabled' returns true\n\n      if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n        state.selectedDate = null;\n      } // adjusting focus after months were built\n\n\n      if ('firstDate' in patch) {\n        if (!state.focusDate || state.focusDate.before(state.firstDate) || state.focusDate.after(state.lastDate)) {\n          state.focusDate = startDate;\n        }\n      } // adjusting months/years for the select box navigation\n\n\n      const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n      const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n\n      if (state.navigation === 'select') {\n        // years ->  boundaries (min/max were changed)\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n          state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n        } // months -> when current year or boundaries change\n\n\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n          state.selectBoxes.months = generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n        }\n      } else {\n        state.selectBoxes = {\n          years: [],\n          months: []\n        };\n      } // updating navigation arrows -> boundaries change (min/max) or month/year changes\n\n\n      if ((state.navigation === 'arrows' || state.navigation === 'select') && (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n        state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n        state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n      }\n    }\n\n    return state;\n  }\n\n}\n\nNgbDatepickerService.ɵfac = function NgbDatepickerService_Factory(t) {\n  return new (t || NgbDatepickerService)(ɵngcc0.ɵɵinject(NgbCalendar), ɵngcc0.ɵɵinject(NgbDatepickerI18n));\n};\n\nNgbDatepickerService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDatepickerService,\n  factory: NgbDatepickerService.ɵfac\n});\n\nNgbDatepickerService.ctorParameters = () => [{\n  type: NgbCalendar\n}, {\n  type: NgbDatepickerI18n\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NgbCalendar\n    }, {\n      type: NgbDatepickerI18n\n    }];\n  }, null);\n})(); // clang-format on\n\n\nvar NavigationEvent;\n\n(function (NavigationEvent) {\n  NavigationEvent[NavigationEvent[\"PREV\"] = 0] = \"PREV\";\n  NavigationEvent[NavigationEvent[\"NEXT\"] = 1] = \"NEXT\";\n})(NavigationEvent || (NavigationEvent = {}));\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\n\n\nclass NgbDatepickerConfig {\n  constructor() {\n    this.displayMonths = 1;\n    this.firstDayOfWeek = 1;\n    this.navigation = 'select';\n    this.outsideDays = 'visible';\n    this.showWeekdays = true;\n    this.showWeekNumbers = false;\n  }\n\n}\n\nNgbDatepickerConfig.ɵfac = function NgbDatepickerConfig_Factory(t) {\n  return new (t || NgbDatepickerConfig)();\n};\n\nNgbDatepickerConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbDatepickerConfig_Factory() {\n    return new NgbDatepickerConfig();\n  },\n  token: NgbDatepickerConfig,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nfunction NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n  return new NgbDateStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n */\n\n\nclass NgbDateAdapter {}\n\nNgbDateAdapter.ɵfac = function NgbDateAdapter_Factory(t) {\n  return new (t || NgbDateAdapter)();\n};\n\nNgbDateAdapter.ɵprov = ɵɵdefineInjectable({\n  factory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY,\n  token: NgbDateAdapter,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDateAdapter, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY\n    }]\n  }], null, null);\n})();\n\nclass NgbDateStructAdapter extends NgbDateAdapter {\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  fromModel(date) {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? {\n      year: date.year,\n      month: date.month,\n      day: date.day\n    } : null;\n  }\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n\n\n  toModel(date) {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? {\n      year: date.year,\n      month: date.month,\n      day: date.day\n    } : null;\n  }\n\n}\n\nNgbDateStructAdapter.ɵfac = function NgbDateStructAdapter_Factory(t) {\n  return ɵNgbDateStructAdapter_BaseFactory(t || NgbDateStructAdapter);\n};\n\nNgbDateStructAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDateStructAdapter,\n  factory: NgbDateStructAdapter.ɵfac\n});\nconst ɵNgbDateStructAdapter_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbDateStructAdapter);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDateStructAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbDatepicker),\n  multi: true\n};\n/**\n * A directive that marks the content template that customizes the way datepicker months are displayed\n *\n * @since 5.3.0\n */\n\nclass NgbDatepickerContent {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbDatepickerContent.ɵfac = function NgbDatepickerContent_Factory(t) {\n  return new (t || NgbDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbDatepickerContent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDatepickerContent,\n  selectors: [[\"ng-template\", \"ngbDatepickerContent\", \"\"]]\n});\n\nNgbDatepickerContent.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbDatepickerContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\n\n\nclass NgbDatepicker {\n  constructor(_service, _calendar, i18n, config, cd, _elementRef, _ngbDateAdapter, _ngZone) {\n    this._service = _service;\n    this._calendar = _calendar;\n    this.i18n = i18n;\n    this._elementRef = _elementRef;\n    this._ngbDateAdapter = _ngbDateAdapter;\n    this._ngZone = _ngZone;\n    this._controlValue = null;\n    this._destroyed$ = new Subject();\n    this._publicState = {};\n    /**\n     * An event emitted right before the navigation happens and displayed month changes.\n     *\n     * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n     */\n\n    this.navigate = new EventEmitter();\n    /**\n     * An event emitted when user selects a date using keyboard or mouse.\n     *\n     * The payload of the event is currently selected `NgbDate`.\n     *\n     * @since 5.2.0\n     */\n\n    this.dateSelect = new EventEmitter();\n\n    this.onChange = _ => {};\n\n    this.onTouched = () => {};\n\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate', 'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate'].forEach(input => this[input] = config[input]);\n\n    _service.dateSelect$.pipe(takeUntil(this._destroyed$)).subscribe(date => {\n      this.dateSelect.emit(date);\n    });\n\n    _service.model$.pipe(takeUntil(this._destroyed$)).subscribe(model => {\n      const newDate = model.firstDate;\n      const oldDate = this.model ? this.model.firstDate : null; // update public state\n\n      this._publicState = {\n        maxDate: model.maxDate,\n        minDate: model.minDate,\n        firstDate: model.firstDate,\n        lastDate: model.lastDate,\n        focusedDate: model.focusDate,\n        months: model.months.map(viewModel => viewModel.firstDate)\n      };\n      let navigationPrevented = false; // emitting navigation event if the first month changes\n\n      if (!newDate.equals(oldDate)) {\n        this.navigate.emit({\n          current: oldDate ? {\n            year: oldDate.year,\n            month: oldDate.month\n          } : null,\n          next: {\n            year: newDate.year,\n            month: newDate.month\n          },\n          preventDefault: () => navigationPrevented = true\n        }); // can't prevent the very first navigation\n\n        if (navigationPrevented && oldDate !== null) {\n          this._service.open(oldDate);\n\n          return;\n        }\n      }\n\n      const newSelectedDate = model.selectedDate;\n      const newFocusedDate = model.focusDate;\n      const oldFocusedDate = this.model ? this.model.focusDate : null;\n      this.model = model; // handling selection change\n\n      if (isChangedDate(newSelectedDate, this._controlValue)) {\n        this._controlValue = newSelectedDate;\n        this.onTouched();\n        this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n      } // handling focus change\n\n\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n        this.focus();\n      }\n\n      cd.markForCheck();\n    });\n  }\n  /**\n   *  Returns the readonly public state of the datepicker\n   *\n   * @since 5.2.0\n   */\n\n\n  get state() {\n    return this._publicState;\n  }\n  /**\n   *  Returns the calendar service used in the specific datepicker instance.\n   *\n   *  @since 5.3.0\n   */\n\n\n  get calendar() {\n    return this._calendar;\n  }\n  /**\n   *  Focuses on given date.\n   */\n\n\n  focusDate(date) {\n    this._service.focus(NgbDate.from(date));\n  }\n  /**\n   *  Selects focused date.\n   */\n\n\n  focusSelect() {\n    this._service.focusSelect();\n  }\n\n  focus() {\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      const elementToFocus = this._elementRef.nativeElement.querySelector('div.ngb-dp-day[tabindex=\"0\"]');\n\n      if (elementToFocus) {\n        elementToFocus.focus();\n      }\n    });\n  }\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n\n\n  navigateTo(date) {\n    this._service.open(NgbDate.from(date ? date.day ? date : Object.assign(Object.assign({}, date), {\n      day: 1\n    }) : null));\n  }\n\n  ngAfterViewInit() {\n    this._ngZone.runOutsideAngular(() => {\n      const focusIns$ = fromEvent(this._contentEl.nativeElement, 'focusin');\n      const focusOuts$ = fromEvent(this._contentEl.nativeElement, 'focusout');\n      const {\n        nativeElement\n      } = this._elementRef; // we're changing 'focusVisible' only when entering or leaving months view\n      // and ignoring all focus events where both 'target' and 'related' target are day cells\n\n      merge(focusIns$, focusOuts$).pipe(filter(({\n        target,\n        relatedTarget\n      }) => !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day') && nativeElement.contains(target) && nativeElement.contains(relatedTarget))), takeUntil(this._destroyed$)).subscribe(({\n        type\n      }) => this._ngZone.run(() => this._service.set({\n        focusVisible: type === 'focusin'\n      })));\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroyed$.next();\n  }\n\n  ngOnInit() {\n    if (this.model === undefined) {\n      const inputs = {};\n      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays'].forEach(name => inputs[name] = this[name]);\n\n      this._service.set(inputs);\n\n      this.navigateTo(this.startDate);\n    }\n\n    if (!this.dayTemplate) {\n      this.dayTemplate = this._defaultDayTemplate;\n    }\n  }\n\n  ngOnChanges(changes) {\n    const inputs = {};\n    ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays'].filter(name => name in changes).forEach(name => inputs[name] = this[name]);\n\n    this._service.set(inputs);\n\n    if ('startDate' in changes) {\n      const {\n        currentValue,\n        previousValue\n      } = changes.startDate;\n\n      if (isChangedMonth(previousValue, currentValue)) {\n        this.navigateTo(this.startDate);\n      }\n    }\n  }\n\n  onDateSelect(date) {\n    this._service.focus(date);\n\n    this._service.select(date, {\n      emitEvent: true\n    });\n  }\n\n  onNavigateDateSelect(date) {\n    this._service.open(date);\n  }\n\n  onNavigateEvent(event) {\n    switch (event) {\n      case NavigationEvent.PREV:\n        this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n\n        break;\n\n      case NavigationEvent.NEXT:\n        this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n\n        break;\n    }\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled) {\n    this._service.set({\n      disabled\n    });\n  }\n\n  writeValue(value) {\n    this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n\n    this._service.select(this._controlValue);\n  }\n\n}\n\nNgbDatepicker.ɵfac = function NgbDatepicker_Factory(t) {\n  return new (t || NgbDatepicker)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerService), ɵngcc0.ɵɵdirectiveInject(NgbCalendar), ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n), ɵngcc0.ɵɵdirectiveInject(NgbDatepickerConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NgbDateAdapter), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nNgbDatepicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbDatepicker,\n  selectors: [[\"ngb-datepicker\"]],\n  contentQueries: function NgbDatepicker_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbDatepickerContent, 3);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n    }\n  },\n  viewQuery: function NgbDatepicker_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c10, 3);\n      ɵngcc0.ɵɵviewQuery(_c11, 3);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._defaultDayTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentEl = _t.first);\n    }\n  },\n  inputs: {\n    dayTemplate: \"dayTemplate\",\n    dayTemplateData: \"dayTemplateData\",\n    displayMonths: \"displayMonths\",\n    firstDayOfWeek: \"firstDayOfWeek\",\n    footerTemplate: \"footerTemplate\",\n    markDisabled: \"markDisabled\",\n    maxDate: \"maxDate\",\n    minDate: \"minDate\",\n    navigation: \"navigation\",\n    outsideDays: \"outsideDays\",\n    showWeekdays: \"showWeekdays\",\n    showWeekNumbers: \"showWeekNumbers\",\n    startDate: \"startDate\"\n  },\n  outputs: {\n    navigate: \"navigate\",\n    dateSelect: \"dateSelect\"\n  },\n  exportAs: [\"ngbDatepicker\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 10,\n  vars: 5,\n  consts: [[\"defaultDayTemplate\", \"\"], [\"defaultContentTemplate\", \"\"], [1, \"ngb-dp-header\"], [3, \"date\", \"months\", \"disabled\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\", \"navigate\", \"select\", 4, \"ngIf\"], [1, \"ngb-dp-content\"], [\"content\", \"\"], [3, \"ngTemplateOutlet\"], [\"ngbDatepickerDayView\", \"\", 3, \"date\", \"currentMonth\", \"selected\", \"disabled\", \"focused\"], [\"class\", \"ngb-dp-month\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-month\"], [\"class\", \"ngb-dp-month-name\", 4, \"ngIf\"], [3, \"month\"], [1, \"ngb-dp-month-name\"], [3, \"date\", \"months\", \"disabled\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\", \"navigate\", \"select\"]],\n  template: function NgbDatepicker_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbDatepicker_ng_template_0_Template, 1, 5, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbDatepicker_ng_template_2_Template, 1, 1, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵelementStart(4, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(5, NgbDatepicker_ngb_datepicker_navigation_5_Template, 1, 7, \"ngb-datepicker-navigation\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(6, \"div\", 4, 5);\n      ɵngcc0.ɵɵtemplate(8, NgbDatepicker_ng_template_8_Template, 0, 0, \"ng-template\", 6);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(9, NgbDatepicker_ng_template_9_Template, 0, 0, \"ng-template\", 6);\n    }\n\n    if (rf & 2) {\n      const _r2 = ɵngcc0.ɵɵreference(3);\n\n      ɵngcc0.ɵɵadvance(5);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.navigation !== \"none\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"ngb-dp-months\", !ctx.contentTemplate);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx.contentTemplate == null ? null : ctx.contentTemplate.templateRef) || _r2);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.footerTemplate);\n    }\n  },\n  directives: function () {\n    return [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, NgbDatepickerDayView, ɵngcc1.NgForOf, NgbDatepickerMonth, NgbDatepickerNavigation];\n  },\n  styles: [\"ngb-datepicker{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}.ngb-dp-body{z-index:1050}.ngb-dp-header{background-color:#f8f9fa;background-color:var(--light);border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem}.ngb-dp-months{display:-ms-flexbox;display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{background-color:#f8f9fa;background-color:var(--light);font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbDatepicker.ctorParameters = () => [{\n  type: NgbDatepickerService\n}, {\n  type: NgbCalendar\n}, {\n  type: NgbDatepickerI18n\n}, {\n  type: NgbDatepickerConfig\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ElementRef\n}, {\n  type: NgbDateAdapter\n}, {\n  type: NgZone\n}];\n\nNgbDatepicker.propDecorators = {\n  _defaultDayTemplate: [{\n    type: ViewChild,\n    args: ['defaultDayTemplate', {\n      static: true\n    }]\n  }],\n  _contentEl: [{\n    type: ViewChild,\n    args: ['content', {\n      static: true\n    }]\n  }],\n  contentTemplate: [{\n    type: ContentChild,\n    args: [NgbDatepickerContent, {\n      static: true\n    }]\n  }],\n  dayTemplate: [{\n    type: Input\n  }],\n  dayTemplateData: [{\n    type: Input\n  }],\n  displayMonths: [{\n    type: Input\n  }],\n  firstDayOfWeek: [{\n    type: Input\n  }],\n  footerTemplate: [{\n    type: Input\n  }],\n  markDisabled: [{\n    type: Input\n  }],\n  maxDate: [{\n    type: Input\n  }],\n  minDate: [{\n    type: Input\n  }],\n  navigation: [{\n    type: Input\n  }],\n  outsideDays: [{\n    type: Input\n  }],\n  showWeekdays: [{\n    type: Input\n  }],\n  showWeekNumbers: [{\n    type: Input\n  }],\n  startDate: [{\n    type: Input\n  }],\n  navigate: [{\n    type: Output\n  }],\n  dateSelect: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepicker, [{\n    type: Component,\n    args: [{\n      exportAs: 'ngbDatepicker',\n      selector: 'ngb-datepicker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <ng-template #defaultDayTemplate let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\"\n                 let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <ng-template #defaultContentTemplate>\n      <div *ngFor=\"let month of model.months; let i = index;\" class=\"ngb-dp-month\">\n        <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\" class=\"ngb-dp-month-name\">\n          {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n        </div>\n        <ngb-datepicker-month [month]=\"month.firstDate\"></ngb-datepicker-month>\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate!\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div class=\"ngb-dp-content\" [class.ngb-dp-months]=\"!contentTemplate\" #content>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate?.templateRef || defaultContentTemplate\"></ng-template>\n    </div>\n\n    <ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n  `,\n      providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService],\n      styles: [\"ngb-datepicker{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}.ngb-dp-body{z-index:1050}.ngb-dp-header{background-color:#f8f9fa;background-color:var(--light);border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem}.ngb-dp-months{display:-ms-flexbox;display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{background-color:#f8f9fa;background-color:var(--light);font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerService\n    }, {\n      type: NgbCalendar\n    }, {\n      type: NgbDatepickerI18n\n    }, {\n      type: NgbDatepickerConfig\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: NgbDateAdapter\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    navigate: [{\n      type: Output\n    }],\n    dateSelect: [{\n      type: Output\n    }],\n    dayTemplate: [{\n      type: Input\n    }],\n    _defaultDayTemplate: [{\n      type: ViewChild,\n      args: ['defaultDayTemplate', {\n        static: true\n      }]\n    }],\n    _contentEl: [{\n      type: ViewChild,\n      args: ['content', {\n        static: true\n      }]\n    }],\n    contentTemplate: [{\n      type: ContentChild,\n      args: [NgbDatepickerContent, {\n        static: true\n      }]\n    }],\n    dayTemplateData: [{\n      type: Input\n    }],\n    displayMonths: [{\n      type: Input\n    }],\n    firstDayOfWeek: [{\n      type: Input\n    }],\n    footerTemplate: [{\n      type: Input\n    }],\n    markDisabled: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    navigation: [{\n      type: Input\n    }],\n    outsideDays: [{\n      type: Input\n    }],\n    showWeekdays: [{\n      type: Input\n    }],\n    showWeekNumbers: [{\n      type: Input\n    }],\n    startDate: [{\n      type: Input\n    }]\n  });\n})();\n\nvar Key;\n\n(function (Key) {\n  Key[Key[\"Tab\"] = 9] = \"Tab\";\n  Key[Key[\"Enter\"] = 13] = \"Enter\";\n  Key[Key[\"Escape\"] = 27] = \"Escape\";\n  Key[Key[\"Space\"] = 32] = \"Space\";\n  Key[Key[\"PageUp\"] = 33] = \"PageUp\";\n  Key[Key[\"PageDown\"] = 34] = \"PageDown\";\n  Key[Key[\"End\"] = 35] = \"End\";\n  Key[Key[\"Home\"] = 36] = \"Home\";\n  Key[Key[\"ArrowLeft\"] = 37] = \"ArrowLeft\";\n  Key[Key[\"ArrowUp\"] = 38] = \"ArrowUp\";\n  Key[Key[\"ArrowRight\"] = 39] = \"ArrowRight\";\n  Key[Key[\"ArrowDown\"] = 40] = \"ArrowDown\";\n})(Key || (Key = {}));\n/**\n * A service that represents the keyboard navigation.\n *\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\n *\n * @since 5.2.0\n */\n\n\nclass NgbDatepickerKeyboardService {\n  /**\n   * Processes a keyboard event.\n   */\n  processKey(event, datepicker) {\n    const {\n      state,\n      calendar\n    } = datepicker; // tslint:disable-next-line:deprecation\n\n    switch (event.which) {\n      case Key.PageUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n\n      case Key.PageDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n\n      case Key.End:\n        datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n        break;\n\n      case Key.Home:\n        datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n        break;\n\n      case Key.ArrowLeft:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n        break;\n\n      case Key.ArrowUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n\n      case Key.ArrowRight:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n        break;\n\n      case Key.ArrowDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n\n      case Key.Enter:\n      case Key.Space:\n        datepicker.focusSelect();\n        break;\n\n      default:\n        return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n}\n\nNgbDatepickerKeyboardService.ɵfac = function NgbDatepickerKeyboardService_Factory(t) {\n  return new (t || NgbDatepickerKeyboardService)();\n};\n\nNgbDatepickerKeyboardService.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbDatepickerKeyboardService_Factory() {\n    return new NgbDatepickerKeyboardService();\n  },\n  token: NgbDatepickerKeyboardService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerKeyboardService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\n *\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\n *\n * @since 5.3.0\n */\n\n\nclass NgbDatepickerMonth {\n  constructor(i18n, datepicker, _keyboardService, _service) {\n    this.i18n = i18n;\n    this.datepicker = datepicker;\n    this._keyboardService = _keyboardService;\n    this._service = _service;\n  }\n  /**\n   * The first date of month to be rendered.\n   *\n   * This month must one of the months present in the\n   * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\n   */\n\n\n  set month(month) {\n    this.viewModel = this._service.getMonth(month);\n  }\n\n  onKeyDown(event) {\n    this._keyboardService.processKey(event, this.datepicker);\n  }\n\n  doSelect(day) {\n    if (!day.context.disabled && !day.hidden) {\n      this.datepicker.onDateSelect(day.date);\n    }\n  }\n\n}\n\nNgbDatepickerMonth.ɵfac = function NgbDatepickerMonth_Factory(t) {\n  return new (t || NgbDatepickerMonth)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n), ɵngcc0.ɵɵdirectiveInject(NgbDatepicker), ɵngcc0.ɵɵdirectiveInject(NgbDatepickerKeyboardService), ɵngcc0.ɵɵdirectiveInject(NgbDatepickerService));\n};\n\nNgbDatepickerMonth.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbDatepickerMonth,\n  selectors: [[\"ngb-datepicker-month\"]],\n  hostAttrs: [\"role\", \"grid\"],\n  hostBindings: function NgbDatepickerMonth_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keydown\", function NgbDatepickerMonth_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      });\n    }\n  },\n  inputs: {\n    month: \"month\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"ngb-dp-week ngb-dp-weekdays\", \"role\", \"row\", 4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"role\", \"row\", 1, \"ngb-dp-week\", \"ngb-dp-weekdays\"], [\"class\", \"ngb-dp-weekday ngb-dp-showweek\", 4, \"ngIf\"], [\"class\", \"ngb-dp-weekday small\", \"role\", \"columnheader\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-weekday\", \"ngb-dp-showweek\"], [\"role\", \"columnheader\", 1, \"ngb-dp-weekday\", \"small\"], [\"class\", \"ngb-dp-week\", \"role\", \"row\", 4, \"ngIf\"], [\"role\", \"row\", 1, \"ngb-dp-week\"], [\"class\", \"ngb-dp-week-number small text-muted\", 4, \"ngIf\"], [\"class\", \"ngb-dp-day\", \"role\", \"gridcell\", 3, \"disabled\", \"tabindex\", \"hidden\", \"ngb-dp-today\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-week-number\", \"small\", \"text-muted\"], [\"role\", \"gridcell\", 1, \"ngb-dp-day\", 3, \"tabindex\", \"click\"], [3, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbDatepickerMonth_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbDatepickerMonth_div_0_Template, 3, 2, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, NgbDatepickerMonth_ng_template_1_Template, 1, 1, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.datepicker.showWeekdays);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.viewModel.weeks);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet],\n  styles: [\"ngb-datepicker-month{display:block}.ngb-dp-week-number,.ngb-dp-weekday{font-style:italic;line-height:2rem;text-align:center}.ngb-dp-weekday{color:#5bc0de;color:var(--info)}.ngb-dp-week{border-radius:.25rem;display:-ms-flexbox;display:flex}.ngb-dp-weekdays{background-color:#f8f9fa;background-color:var(--light);border-bottom:1px solid rgba(0,0,0,.125);border-radius:0}.ngb-dp-day,.ngb-dp-week-number,.ngb-dp-weekday{height:2rem;width:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default;pointer-events:none}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\"],\n  encapsulation: 2\n});\n\nNgbDatepickerMonth.ctorParameters = () => [{\n  type: NgbDatepickerI18n\n}, {\n  type: NgbDatepicker\n}, {\n  type: NgbDatepickerKeyboardService\n}, {\n  type: NgbDatepickerService\n}];\n\nNgbDatepickerMonth.propDecorators = {\n  month: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerMonth, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-datepicker-month',\n      host: {\n        'role': 'grid',\n        '(keydown)': 'onKeyDown($event)'\n      },\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <div *ngIf=\"datepicker.showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays\" role=\"row\">\n      <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\n      <div *ngFor=\"let w of viewModel.weekdays\" class=\"ngb-dp-weekday small\" role=\"columnheader\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"viewModel.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day); $event.preventDefault()\" class=\"ngb-dp-day\" role=\"gridcell\"\n          [class.disabled]=\"day.context.disabled\"\n          [tabindex]=\"day.tabindex\"\n          [class.hidden]=\"day.hidden\"\n          [class.ngb-dp-today]=\"day.context.today\"\n          [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"datepicker.dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `,\n      styles: [\"ngb-datepicker-month{display:block}.ngb-dp-week-number,.ngb-dp-weekday{font-style:italic;line-height:2rem;text-align:center}.ngb-dp-weekday{color:#5bc0de;color:var(--info)}.ngb-dp-week{border-radius:.25rem;display:-ms-flexbox;display:flex}.ngb-dp-weekdays{background-color:#f8f9fa;background-color:var(--light);border-bottom:1px solid rgba(0,0,0,.125);border-radius:0}.ngb-dp-day,.ngb-dp-week-number,.ngb-dp-weekday{height:2rem;width:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default;pointer-events:none}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }, {\n      type: NgbDatepicker\n    }, {\n      type: NgbDatepickerKeyboardService\n    }, {\n      type: NgbDatepickerService\n    }];\n  }, {\n    month: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgbDatepickerNavigation {\n  constructor(i18n) {\n    this.i18n = i18n;\n    this.navigation = NavigationEvent;\n    this.months = [];\n    this.navigate = new EventEmitter();\n    this.select = new EventEmitter();\n  }\n\n  onClickPrev(event) {\n    event.currentTarget.focus();\n    this.navigate.emit(this.navigation.PREV);\n  }\n\n  onClickNext(event) {\n    event.currentTarget.focus();\n    this.navigate.emit(this.navigation.NEXT);\n  }\n\n}\n\nNgbDatepickerNavigation.ɵfac = function NgbDatepickerNavigation_Factory(t) {\n  return new (t || NgbDatepickerNavigation)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n));\n};\n\nNgbDatepickerNavigation.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbDatepickerNavigation,\n  selectors: [[\"ngb-datepicker-navigation\"]],\n  inputs: {\n    months: \"months\",\n    date: \"date\",\n    disabled: \"disabled\",\n    showSelect: \"showSelect\",\n    prevDisabled: \"prevDisabled\",\n    nextDisabled: \"nextDisabled\",\n    selectBoxes: \"selectBoxes\"\n  },\n  outputs: {\n    navigate: \"navigate\",\n    select: \"select\"\n  },\n  decls: 8,\n  vars: 4,\n  consts: function () {\n    let i18n_12;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_13 = goog.getMsg(\"Previous month\");\n      i18n_12 = MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_13;\n    } else {\n      i18n_12 = $localize`:@@ngb.datepicker.previous-month␟c3b08b07b5ab98e7cdcf18df39355690ab7d3884␟8586908745456864217:Previous month`;\n    }\n\n    let i18n_14;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_15 = goog.getMsg(\"Previous month\");\n      i18n_14 = MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_15;\n    } else {\n      i18n_14 = $localize`:@@ngb.datepicker.previous-month␟c3b08b07b5ab98e7cdcf18df39355690ab7d3884␟8586908745456864217:Previous month`;\n    }\n\n    let i18n_16;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_17 = goog.getMsg(\"Next month\");\n      i18n_16 = MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_17;\n    } else {\n      i18n_16 = $localize`:@@ngb.datepicker.next-month␟4bd046985cfe13040d5ef0cd881edce0968a111a␟3628374603023447227:Next month`;\n    }\n\n    let i18n_18;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_19 = goog.getMsg(\"Next month\");\n      i18n_18 = MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_19;\n    } else {\n      i18n_18 = $localize`:@@ngb.datepicker.next-month␟4bd046985cfe13040d5ef0cd881edce0968a111a␟3628374603023447227:Next month`;\n    }\n\n    return [[1, \"ngb-dp-arrow\"], [\"type\", \"button\", \"aria-label\", i18n_12, \"title\", i18n_14, 1, \"btn\", \"btn-link\", \"ngb-dp-arrow-btn\", 3, \"disabled\", \"click\"], [1, \"ngb-dp-navigation-chevron\"], [\"class\", \"ngb-dp-navigation-select\", 3, \"date\", \"disabled\", \"months\", \"years\", \"select\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"ngb-dp-arrow\", \"right\"], [\"type\", \"button\", \"aria-label\", i18n_16, \"title\", i18n_18, 1, \"btn\", \"btn-link\", \"ngb-dp-arrow-btn\", 3, \"disabled\", \"click\"], [1, \"ngb-dp-navigation-select\", 3, \"date\", \"disabled\", \"months\", \"years\", \"select\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"ngb-dp-arrow\", 4, \"ngIf\"], [1, \"ngb-dp-month-name\"]];\n  },\n  template: function NgbDatepickerNavigation_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"button\", 1);\n      ɵngcc0.ɵɵlistener(\"click\", function NgbDatepickerNavigation_Template_button_click_1_listener($event) {\n        return ctx.onClickPrev($event);\n      });\n      ɵngcc0.ɵɵelement(2, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(3, NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template, 1, 4, \"ngb-datepicker-navigation-select\", 3);\n      ɵngcc0.ɵɵtemplate(4, NgbDatepickerNavigation_4_Template, 1, 1, undefined, 4);\n      ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n      ɵngcc0.ɵɵelementStart(6, \"button\", 6);\n      ɵngcc0.ɵɵlistener(\"click\", function NgbDatepickerNavigation_Template_button_click_6_listener($event) {\n        return ctx.onClickNext($event);\n      });\n      ɵngcc0.ɵɵelement(7, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.prevDisabled);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showSelect);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.showSelect);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.nextDisabled);\n    }\n  },\n  directives: function () {\n    return [ɵngcc1.NgIf, NgbDatepickerNavigationSelect, ɵngcc1.NgForOf];\n  },\n  styles: [\"ngb-datepicker-navigation{-ms-flex-align:center;align-items:center;display:-ms-flexbox;display:flex}.ngb-dp-navigation-chevron{-webkit-transform:rotate(-135deg);border-style:solid;border-width:.2em .2em 0 0;display:inline-block;height:.75em;margin-left:.25em;margin-right:.15em;transform:rotate(-135deg);width:.75em}.right .ngb-dp-navigation-chevron{-webkit-transform:rotate(45deg);margin-left:.15em;margin-right:.25em;transform:rotate(45deg)}.ngb-dp-arrow{-ms-flex:1 1 auto;display:-ms-flexbox;display:flex;flex:1 1 auto;height:2rem;margin:0;padding-left:0;padding-right:0;width:2rem}.ngb-dp-arrow.right{-ms-flex-pack:end;justify-content:flex-end}.ngb-dp-arrow-btn{background-color:transparent;border:none;margin:0 .5rem;padding:0 .25rem;z-index:1}.ngb-dp-arrow-btn:focus{outline-style:auto;outline-width:1px}@media (-ms-high-contrast:active),(-ms-high-contrast:none){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{-ms-flex:1 1 9rem;display:-ms-flexbox;display:flex;flex:1 1 9rem}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbDatepickerNavigation.ctorParameters = () => [{\n  type: NgbDatepickerI18n\n}];\n\nNgbDatepickerNavigation.propDecorators = {\n  date: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  months: [{\n    type: Input\n  }],\n  showSelect: [{\n    type: Input\n  }],\n  prevDisabled: [{\n    type: Input\n  }],\n  nextDisabled: [{\n    type: Input\n  }],\n  selectBoxes: [{\n    type: Input\n  }],\n  navigate: [{\n    type: Output\n  }],\n  select: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerNavigation, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-datepicker-navigation',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickPrev($event)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickNext($event)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    `,\n      styles: [\"ngb-datepicker-navigation{-ms-flex-align:center;align-items:center;display:-ms-flexbox;display:flex}.ngb-dp-navigation-chevron{-webkit-transform:rotate(-135deg);border-style:solid;border-width:.2em .2em 0 0;display:inline-block;height:.75em;margin-left:.25em;margin-right:.15em;transform:rotate(-135deg);width:.75em}.right .ngb-dp-navigation-chevron{-webkit-transform:rotate(45deg);margin-left:.15em;margin-right:.25em;transform:rotate(45deg)}.ngb-dp-arrow{-ms-flex:1 1 auto;display:-ms-flexbox;display:flex;flex:1 1 auto;height:2rem;margin:0;padding-left:0;padding-right:0;width:2rem}.ngb-dp-arrow.right{-ms-flex-pack:end;justify-content:flex-end}.ngb-dp-arrow-btn{background-color:transparent;border:none;margin:0 .5rem;padding:0 .25rem;z-index:1}.ngb-dp-arrow-btn:focus{outline-style:auto;outline-width:1px}@media (-ms-high-contrast:active),(-ms-high-contrast:none){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{-ms-flex:1 1 9rem;display:-ms-flexbox;display:flex;flex:1 1 9rem}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }];\n  }, {\n    months: [{\n      type: Input\n    }],\n    navigate: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }],\n    date: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    showSelect: [{\n      type: Input\n    }],\n    prevDisabled: [{\n      type: Input\n    }],\n    nextDisabled: [{\n      type: Input\n    }],\n    selectBoxes: [{\n      type: Input\n    }]\n  });\n})();\n\nconst isContainedIn = (element, array) => array ? array.some(item => item.contains(element)) : false;\n\nconst ɵ0$2 = isContainedIn;\n\nconst matchesSelectorIfAny = (element, selector) => !selector || closest(element, selector) != null;\n\nconst ɵ1$1 = matchesSelectorIfAny;\n\nconst ɵ2$1 = () => {\n  const isIOS = () => /iPad|iPhone|iPod/.test(navigator.userAgent) || /Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2;\n\n  const isAndroid = () => /Android/.test(navigator.userAgent);\n\n  return typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\n}; // we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\n\n\nconst isMobile = ɵ2$1(); // setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\n\nconst wrapAsyncForMobile = fn => isMobile ? () => setTimeout(() => fn(), 100) : fn;\n\nconst ɵ3 = wrapAsyncForMobile;\n\nfunction ngbAutoClose(zone, document, type, close, closed$, insideElements, ignoreElements, insideSelector) {\n  // closing on ESC and outside clicks\n  if (type) {\n    zone.runOutsideAngular(wrapAsyncForMobile(() => {\n      const shouldCloseOnClick = event => {\n        const element = event.target;\n\n        if (event.button === 2 || isContainedIn(element, ignoreElements)) {\n          return false;\n        }\n\n        if (type === 'inside') {\n          return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n        } else if (type === 'outside') {\n          return !isContainedIn(element, insideElements);\n        } else\n          /* if (type === true) */\n          {\n            return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n          }\n      };\n\n      const escapes$ = fromEvent(document, 'keydown').pipe(takeUntil(closed$), // tslint:disable-next-line:deprecation\n      filter(e => e.which === Key.Escape), tap(e => e.preventDefault())); // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n      // because on 'mouseup' DOM nodes might be detached\n\n      const mouseDowns$ = fromEvent(document, 'mousedown').pipe(map(shouldCloseOnClick), takeUntil(closed$));\n      const closeableClicks$ = fromEvent(document, 'mouseup').pipe(withLatestFrom(mouseDowns$), filter(([_, shouldClose]) => shouldClose), delay(0), takeUntil(closed$));\n      race([escapes$.pipe(map(_ => 0\n      /* ESCAPE */\n      )), closeableClicks$.pipe(map(_ => 1\n      /* CLICK */\n      ))]).subscribe(source => zone.run(() => close(source)));\n    }));\n  }\n}\n\nconst FOCUSABLE_ELEMENTS_SELECTOR = ['a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])', 'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'].join(', ');\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\n\nfunction getFocusableBoundaryElements(element) {\n  const list = Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR)).filter(el => el.tabIndex !== -1);\n  return [list[0], list[list.length - 1]];\n}\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param zone Angular zone\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\n\n\nconst ngbFocusTrap = (zone, element, stopFocusTrap$, refocusOnClick = false) => {\n  zone.runOutsideAngular(() => {\n    // last focused element\n    const lastFocusedElement$ = fromEvent(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target)); // 'tab' / 'shift+tab' stream\n\n    fromEvent(element, 'keydown').pipe(takeUntil(stopFocusTrap$), // tslint:disable:deprecation\n    filter(e => e.which === Key.Tab), // tslint:enable:deprecation\n    withLatestFrom(lastFocusedElement$)).subscribe(([tabEvent, focusedElement]) => {\n      const [first, last] = getFocusableBoundaryElements(element);\n\n      if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n        last.focus();\n        tabEvent.preventDefault();\n      }\n\n      if (focusedElement === last && !tabEvent.shiftKey) {\n        first.focus();\n        tabEvent.preventDefault();\n      }\n    }); // inside click\n\n    if (refocusOnClick) {\n      fromEvent(element, 'click').pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1])).subscribe(lastFocusedElement => lastFocusedElement.focus());\n    }\n  });\n}; // previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\n\n\nclass Positioning {\n  getAllStyles(element) {\n    return window.getComputedStyle(element);\n  }\n\n  getStyle(element, prop) {\n    return this.getAllStyles(element)[prop];\n  }\n\n  isStaticPositioned(element) {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  offsetParent(element) {\n    let offsetParentEl = element.offsetParent || document.documentElement;\n\n    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n      offsetParentEl = offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n\n  position(element, round = true) {\n    let elPosition;\n    let parentOffset = {\n      width: 0,\n      height: 0,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    };\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      elPosition = element.getBoundingClientRect();\n      elPosition = {\n        top: elPosition.top,\n        bottom: elPosition.bottom,\n        left: elPosition.left,\n        right: elPosition.right,\n        height: elPosition.height,\n        width: elPosition.width\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  offset(element, round = true) {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n  /*\n    Return false if the element to position is outside the viewport\n  */\n\n\n  positionElements(hostElement, targetElement, placement, appendToBody) {\n    const [placementPrimary = 'top', placementSecondary = 'center'] = placement.split('-');\n    const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n    const marginTop = parseFloat(targetElStyles.marginTop);\n    const marginBottom = parseFloat(targetElStyles.marginBottom);\n    const marginLeft = parseFloat(targetElStyles.marginLeft);\n    const marginRight = parseFloat(targetElStyles.marginRight);\n    let topPosition = 0;\n    let leftPosition = 0;\n\n    switch (placementPrimary) {\n      case 'top':\n        topPosition = hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom);\n        break;\n\n      case 'bottom':\n        topPosition = hostElPosition.top + hostElPosition.height;\n        break;\n\n      case 'left':\n        leftPosition = hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight);\n        break;\n\n      case 'right':\n        leftPosition = hostElPosition.left + hostElPosition.width;\n        break;\n    }\n\n    switch (placementSecondary) {\n      case 'top':\n        topPosition = hostElPosition.top;\n        break;\n\n      case 'bottom':\n        topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n        break;\n\n      case 'left':\n        leftPosition = hostElPosition.left;\n        break;\n\n      case 'right':\n        leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n        break;\n\n      case 'center':\n        if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n          leftPosition = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;\n        } else {\n          topPosition = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;\n        }\n\n        break;\n    } /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\n    // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;\n\n\n    targetElement.style.transform = `translate(${Math.round(leftPosition)}px, ${Math.round(topPosition)}px)`; // Check if the targetElement is inside the viewport\n\n    const targetElBCR = targetElement.getBoundingClientRect();\n    const html = document.documentElement;\n    const windowHeight = window.innerHeight || html.clientHeight;\n    const windowWidth = window.innerWidth || html.clientWidth;\n    return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth && targetElBCR.bottom <= windowHeight;\n  }\n\n}\n\nconst placementSeparator = /\\s+/;\nconst positionService = new Positioning();\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\n\nfunction positionElements(hostElement, targetElement, placement, appendToBody, baseClass) {\n  let placementVals = Array.isArray(placement) ? placement : placement.split(placementSeparator);\n  const allowedPlacements = ['top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom', 'right-top', 'right-bottom'];\n  const classList = targetElement.classList;\n\n  const addClassesToTarget = targetPlacement => {\n    const [primary, secondary] = targetPlacement.split('-');\n    const classes = [];\n\n    if (baseClass) {\n      classes.push(`${baseClass}-${primary}`);\n\n      if (secondary) {\n        classes.push(`${baseClass}-${primary}-${secondary}`);\n      }\n\n      classes.forEach(classname => {\n        classList.add(classname);\n      });\n    }\n\n    return classes;\n  }; // Remove old placement classes to avoid issues\n\n\n  if (baseClass) {\n    allowedPlacements.forEach(placementToRemove => {\n      classList.remove(`${baseClass}-${placementToRemove}`);\n    });\n  } // replace auto placement with other placements\n\n\n  let hasAuto = placementVals.findIndex(val => val === 'auto');\n\n  if (hasAuto >= 0) {\n    allowedPlacements.forEach(function (obj) {\n      if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n        placementVals.splice(hasAuto++, 1, obj);\n      }\n    });\n  } // coordinates where to position\n  // Required for transform:\n\n\n  const style = targetElement.style;\n  style.position = 'absolute';\n  style.top = '0';\n  style.left = '0';\n  style['will-change'] = 'transform';\n  let testPlacement = null;\n  let isInViewport = false;\n\n  for (testPlacement of placementVals) {\n    let addedClasses = addClassesToTarget(testPlacement);\n\n    if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {\n      isInViewport = true;\n      break;\n    } // Remove the baseClasses for further calculation\n\n\n    if (baseClass) {\n      addedClasses.forEach(classname => {\n        classList.remove(classname);\n      });\n    }\n  }\n\n  if (!isInViewport) {\n    // If nothing match, the first placement is the default one\n    testPlacement = placementVals[0];\n    addClassesToTarget(testPlacement);\n    positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);\n  }\n\n  return testPlacement;\n}\n\nfunction NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n  return new NgbDateISOParserFormatter();\n}\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n */\n\n\nclass NgbDateParserFormatter {}\n\nNgbDateParserFormatter.ɵfac = function NgbDateParserFormatter_Factory(t) {\n  return new (t || NgbDateParserFormatter)();\n};\n\nNgbDateParserFormatter.ɵprov = ɵɵdefineInjectable({\n  factory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY,\n  token: NgbDateParserFormatter,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDateParserFormatter, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY\n    }]\n  }], null, null);\n})();\n\nclass NgbDateISOParserFormatter extends NgbDateParserFormatter {\n  parse(value) {\n    if (value != null) {\n      const dateParts = value.trim().split('-');\n\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {\n          year: toInteger(dateParts[0]),\n          month: null,\n          day: null\n        };\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {\n          year: toInteger(dateParts[0]),\n          month: toInteger(dateParts[1]),\n          day: null\n        };\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {\n          year: toInteger(dateParts[0]),\n          month: toInteger(dateParts[1]),\n          day: toInteger(dateParts[2])\n        };\n      }\n    }\n\n    return null;\n  }\n\n  format(date) {\n    return date ? `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` : '';\n  }\n\n}\n\nNgbDateISOParserFormatter.ɵfac = function NgbDateISOParserFormatter_Factory(t) {\n  return ɵNgbDateISOParserFormatter_BaseFactory(t || NgbDateISOParserFormatter);\n};\n\nNgbDateISOParserFormatter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDateISOParserFormatter,\n  factory: NgbDateISOParserFormatter.ɵfac\n});\nconst ɵNgbDateISOParserFormatter_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbDateISOParserFormatter);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDateISOParserFormatter, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepicker inputs used in the application.\n *\n * @since 5.2.0\n */\n\n\nclass NgbInputDatepickerConfig extends NgbDatepickerConfig {\n  constructor() {\n    super(...arguments);\n    this.autoClose = true;\n    this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n    this.restoreFocus = true;\n  }\n\n}\n\nNgbInputDatepickerConfig.ɵfac = function NgbInputDatepickerConfig_Factory(t) {\n  return ɵNgbInputDatepickerConfig_BaseFactory(t || NgbInputDatepickerConfig);\n};\n\nNgbInputDatepickerConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbInputDatepickerConfig_Factory() {\n    return new NgbInputDatepickerConfig();\n  },\n  token: NgbInputDatepickerConfig,\n  providedIn: \"root\"\n});\nconst ɵNgbInputDatepickerConfig_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbInputDatepickerConfig);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbInputDatepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR$1 = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\nconst NGB_DATEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\n\nclass NgbInputDatepicker {\n  constructor(_parserFormatter, _elRef, _vcRef, _renderer, _cfr, _ngZone, _calendar, _dateAdapter, _document, _changeDetector, config) {\n    this._parserFormatter = _parserFormatter;\n    this._elRef = _elRef;\n    this._vcRef = _vcRef;\n    this._renderer = _renderer;\n    this._cfr = _cfr;\n    this._ngZone = _ngZone;\n    this._calendar = _calendar;\n    this._dateAdapter = _dateAdapter;\n    this._document = _document;\n    this._changeDetector = _changeDetector;\n    this._cRef = null;\n    this._disabled = false;\n    this._elWithFocus = null;\n    this._model = null;\n    /**\n     * An event emitted when user selects a date using keyboard or mouse.\n     *\n     * The payload of the event is currently selected `NgbDate`.\n     *\n     * @since 1.1.1\n     */\n\n    this.dateSelect = new EventEmitter();\n    /**\n     * Event emitted right after the navigation happens and displayed month changes.\n     *\n     * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n     */\n\n    this.navigate = new EventEmitter();\n    /**\n     * An event fired after closing datepicker window.\n     *\n     * @since 4.2.0\n     */\n\n    this.closed = new EventEmitter();\n\n    this._onChange = _ => {};\n\n    this._onTouched = () => {};\n\n    this._validatorChange = () => {};\n\n    ['autoClose', 'container', 'positionTarget', 'placement'].forEach(input => this[input] = config[input]);\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => this._updatePopupPosition());\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = value === '' || value && value !== 'false';\n\n    if (this.isOpen()) {\n      this._cRef.instance.setDisabledState(this._disabled);\n    }\n  }\n\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n\n  registerOnValidatorChange(fn) {\n    this._validatorChange = fn;\n  }\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n  validate(c) {\n    const {\n      value\n    } = c;\n\n    if (value != null) {\n      const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n      if (!ngbDate) {\n        return {\n          'ngbDate': {\n            invalid: value\n          }\n        };\n      }\n\n      if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n        return {\n          'ngbDate': {\n            minDate: {\n              minDate: this.minDate,\n              actual: value\n            }\n          }\n        };\n      }\n\n      if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n        return {\n          'ngbDate': {\n            maxDate: {\n              maxDate: this.maxDate,\n              actual: value\n            }\n          }\n        };\n      }\n    }\n\n    return null;\n  }\n\n  writeValue(value) {\n    this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n    this._writeModelValue(this._model);\n  }\n\n  manualDateChange(value, updateView = false) {\n    const inputValueChanged = value !== this._inputValue;\n\n    if (inputValueChanged) {\n      this._inputValue = value;\n      this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n    }\n\n    if (inputValueChanged || !updateView) {\n      this._onChange(this._model ? this._dateAdapter.toModel(this._model) : value === '' ? null : value);\n    }\n\n    if (updateView && this._model) {\n      this._writeModelValue(this._model);\n    }\n  }\n\n  isOpen() {\n    return !!this._cRef;\n  }\n  /**\n   * Opens the datepicker popup.\n   *\n   * If the related form control contains a valid date, the corresponding month will be opened.\n   */\n\n\n  open() {\n    if (!this.isOpen()) {\n      const cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n\n      this._cRef = this._vcRef.createComponent(cf);\n\n      this._applyPopupStyling(this._cRef.location.nativeElement);\n\n      this._applyDatepickerInputs(this._cRef.instance);\n\n      this._subscribeForDatepickerOutputs(this._cRef.instance);\n\n      this._cRef.instance.ngOnInit();\n\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model)); // date selection event handling\n\n\n      this._cRef.instance.registerOnChange(selectedDate => {\n        this.writeValue(selectedDate);\n\n        this._onChange(selectedDate);\n\n        this._onTouched();\n      });\n\n      this._cRef.changeDetectorRef.detectChanges();\n\n      this._cRef.instance.setDisabledState(this.disabled);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n      } // focus handling\n\n\n      this._elWithFocus = this._document.activeElement;\n      ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n\n      this._cRef.instance.focus();\n\n      ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.closed, [], [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n    }\n  }\n  /**\n   * Closes the datepicker popup.\n   */\n\n\n  close() {\n    if (this.isOpen()) {\n      this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n\n      this._cRef = null;\n      this.closed.emit();\n\n      this._changeDetector.markForCheck(); // restore focus\n\n\n      let elementToFocus = this._elWithFocus;\n\n      if (isString(this.restoreFocus)) {\n        elementToFocus = this._document.querySelector(this.restoreFocus);\n      } else if (this.restoreFocus !== undefined) {\n        elementToFocus = this.restoreFocus;\n      } // in IE document.activeElement can contain an object without 'focus()' sometimes\n\n\n      if (elementToFocus && elementToFocus['focus']) {\n        elementToFocus.focus();\n      } else {\n        this._document.body.focus();\n      }\n    }\n  }\n  /**\n   * Toggles the datepicker popup.\n   */\n\n\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n\n\n  navigateTo(date) {\n    if (this.isOpen()) {\n      this._cRef.instance.navigateTo(date);\n    }\n  }\n\n  onBlur() {\n    this._onTouched();\n  }\n\n  onFocus() {\n    this._elWithFocus = this._elRef.nativeElement;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['minDate'] || changes['maxDate']) {\n      this._validatorChange();\n\n      if (this.isOpen()) {\n        if (changes['minDate']) {\n          this._cRef.instance.minDate = this.minDate;\n        }\n\n        if (changes['maxDate']) {\n          this._cRef.instance.maxDate = this.maxDate;\n        }\n\n        this._cRef.instance.ngOnChanges(changes);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n\n    this._zoneSubscription.unsubscribe();\n  }\n\n  _applyDatepickerInputs(datepickerInstance) {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate', 'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers'].forEach(optionName => {\n      if (this[optionName] !== undefined) {\n        datepickerInstance[optionName] = this[optionName];\n      }\n    });\n    datepickerInstance.startDate = this.startDate || this._model;\n  }\n\n  _applyPopupStyling(nativeElement) {\n    this._renderer.addClass(nativeElement, 'dropdown-menu');\n\n    this._renderer.addClass(nativeElement, 'show');\n\n    if (this.container === 'body') {\n      this._renderer.addClass(nativeElement, 'ngb-dp-body');\n    }\n  }\n\n  _subscribeForDatepickerOutputs(datepickerInstance) {\n    datepickerInstance.navigate.subscribe(navigateEvent => this.navigate.emit(navigateEvent));\n    datepickerInstance.dateSelect.subscribe(date => {\n      this.dateSelect.emit(date);\n\n      if (this.autoClose === true || this.autoClose === 'inside') {\n        this.close();\n      }\n    });\n  }\n\n  _writeModelValue(model) {\n    const value = this._parserFormatter.format(model);\n\n    this._inputValue = value;\n\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n\n    if (this.isOpen()) {\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n\n      this._onTouched();\n    }\n  }\n\n  _fromDateStruct(date) {\n    const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n    return this._calendar.isValid(ngbDate) ? ngbDate : null;\n  }\n\n  _updatePopupPosition() {\n    if (!this._cRef) {\n      return;\n    }\n\n    let hostElement;\n\n    if (isString(this.positionTarget)) {\n      hostElement = this._document.querySelector(this.positionTarget);\n    } else if (this.positionTarget instanceof HTMLElement) {\n      hostElement = this.positionTarget;\n    } else {\n      hostElement = this._elRef.nativeElement;\n    }\n\n    if (this.positionTarget && !hostElement) {\n      throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n    }\n\n    positionElements(hostElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n  }\n\n}\n\nNgbInputDatepicker.ɵfac = function NgbInputDatepicker_Factory(t) {\n  return new (t || NgbInputDatepicker)(ɵngcc0.ɵɵdirectiveInject(NgbDateParserFormatter), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(NgbCalendar), ɵngcc0.ɵɵdirectiveInject(NgbDateAdapter), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NgbInputDatepickerConfig));\n};\n\nNgbInputDatepicker.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbInputDatepicker,\n  selectors: [[\"input\", \"ngbDatepicker\", \"\"]],\n  hostVars: 1,\n  hostBindings: function NgbInputDatepicker_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"input\", function NgbInputDatepicker_input_HostBindingHandler($event) {\n        return ctx.manualDateChange($event.target.value);\n      })(\"change\", function NgbInputDatepicker_change_HostBindingHandler($event) {\n        return ctx.manualDateChange($event.target.value, true);\n      })(\"focus\", function NgbInputDatepicker_focus_HostBindingHandler() {\n        return ctx.onFocus();\n      })(\"blur\", function NgbInputDatepicker_blur_HostBindingHandler() {\n        return ctx.onBlur();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    autoClose: \"autoClose\",\n    dayTemplate: \"dayTemplate\",\n    dayTemplateData: \"dayTemplateData\",\n    displayMonths: \"displayMonths\",\n    firstDayOfWeek: \"firstDayOfWeek\",\n    footerTemplate: \"footerTemplate\",\n    markDisabled: \"markDisabled\",\n    minDate: \"minDate\",\n    maxDate: \"maxDate\",\n    navigation: \"navigation\",\n    outsideDays: \"outsideDays\",\n    placement: \"placement\",\n    restoreFocus: \"restoreFocus\",\n    showWeekdays: \"showWeekdays\",\n    showWeekNumbers: \"showWeekNumbers\",\n    startDate: \"startDate\",\n    container: \"container\",\n    positionTarget: \"positionTarget\"\n  },\n  outputs: {\n    dateSelect: \"dateSelect\",\n    navigate: \"navigate\",\n    closed: \"closed\"\n  },\n  exportAs: [\"ngbDatepicker\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([NGB_DATEPICKER_VALUE_ACCESSOR$1, NGB_DATEPICKER_VALIDATOR, {\n    provide: NgbDatepickerConfig,\n    useExisting: NgbInputDatepickerConfig\n  }]), ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNgbInputDatepicker.ctorParameters = () => [{\n  type: NgbDateParserFormatter\n}, {\n  type: ElementRef\n}, {\n  type: ViewContainerRef\n}, {\n  type: Renderer2\n}, {\n  type: ComponentFactoryResolver\n}, {\n  type: NgZone\n}, {\n  type: NgbCalendar\n}, {\n  type: NgbDateAdapter\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: NgbInputDatepickerConfig\n}];\n\nNgbInputDatepicker.propDecorators = {\n  autoClose: [{\n    type: Input\n  }],\n  dayTemplate: [{\n    type: Input\n  }],\n  dayTemplateData: [{\n    type: Input\n  }],\n  displayMonths: [{\n    type: Input\n  }],\n  firstDayOfWeek: [{\n    type: Input\n  }],\n  footerTemplate: [{\n    type: Input\n  }],\n  markDisabled: [{\n    type: Input\n  }],\n  minDate: [{\n    type: Input\n  }],\n  maxDate: [{\n    type: Input\n  }],\n  navigation: [{\n    type: Input\n  }],\n  outsideDays: [{\n    type: Input\n  }],\n  placement: [{\n    type: Input\n  }],\n  restoreFocus: [{\n    type: Input\n  }],\n  showWeekdays: [{\n    type: Input\n  }],\n  showWeekNumbers: [{\n    type: Input\n  }],\n  startDate: [{\n    type: Input\n  }],\n  container: [{\n    type: Input\n  }],\n  positionTarget: [{\n    type: Input\n  }],\n  dateSelect: [{\n    type: Output\n  }],\n  navigate: [{\n    type: Output\n  }],\n  closed: [{\n    type: Output\n  }],\n  disabled: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbInputDatepicker, [{\n    type: Directive,\n    args: [{\n      selector: 'input[ngbDatepicker]',\n      exportAs: 'ngbDatepicker',\n      host: {\n        '(input)': 'manualDateChange($event.target.value)',\n        '(change)': 'manualDateChange($event.target.value, true)',\n        '(focus)': 'onFocus()',\n        '(blur)': 'onBlur()',\n        '[disabled]': 'disabled'\n      },\n      providers: [NGB_DATEPICKER_VALUE_ACCESSOR$1, NGB_DATEPICKER_VALIDATOR, {\n        provide: NgbDatepickerConfig,\n        useExisting: NgbInputDatepickerConfig\n      }]\n    }]\n  }], function () {\n    return [{\n      type: NgbDateParserFormatter\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: NgbCalendar\n    }, {\n      type: NgbDateAdapter\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: NgbInputDatepickerConfig\n    }];\n  }, {\n    dateSelect: [{\n      type: Output\n    }],\n    navigate: [{\n      type: Output\n    }],\n    closed: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    dayTemplate: [{\n      type: Input\n    }],\n    dayTemplateData: [{\n      type: Input\n    }],\n    displayMonths: [{\n      type: Input\n    }],\n    firstDayOfWeek: [{\n      type: Input\n    }],\n    footerTemplate: [{\n      type: Input\n    }],\n    markDisabled: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    navigation: [{\n      type: Input\n    }],\n    outsideDays: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    restoreFocus: [{\n      type: Input\n    }],\n    showWeekdays: [{\n      type: Input\n    }],\n    showWeekNumbers: [{\n      type: Input\n    }],\n    startDate: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    positionTarget: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgbDatepickerDayView {\n  constructor(i18n) {\n    this.i18n = i18n;\n  }\n\n  isMuted() {\n    return !this.selected && (this.date.month !== this.currentMonth || this.disabled);\n  }\n\n}\n\nNgbDatepickerDayView.ɵfac = function NgbDatepickerDayView_Factory(t) {\n  return new (t || NgbDatepickerDayView)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n));\n};\n\nNgbDatepickerDayView.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbDatepickerDayView,\n  selectors: [[\"\", \"ngbDatepickerDayView\", \"\"]],\n  hostAttrs: [1, \"btn-light\"],\n  hostVars: 10,\n  hostBindings: function NgbDatepickerDayView_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"bg-primary\", ctx.selected)(\"text-white\", ctx.selected)(\"text-muted\", ctx.isMuted())(\"outside\", ctx.isMuted())(\"active\", ctx.focused);\n    }\n  },\n  inputs: {\n    currentMonth: \"currentMonth\",\n    date: \"date\",\n    disabled: \"disabled\",\n    focused: \"focused\",\n    selected: \"selected\"\n  },\n  attrs: _c20,\n  decls: 1,\n  vars: 1,\n  template: function NgbDatepickerDayView_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtext(0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵtextInterpolate(ctx.i18n.getDayNumerals(ctx.date));\n    }\n  },\n  styles: [\"[ngbDatepickerDayView]{background:transparent;border-radius:.25rem;height:2rem;line-height:2rem;text-align:center;width:2rem}[ngbDatepickerDayView].outside{opacity:.5}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbDatepickerDayView.ctorParameters = () => [{\n  type: NgbDatepickerI18n\n}];\n\nNgbDatepickerDayView.propDecorators = {\n  currentMonth: [{\n    type: Input\n  }],\n  date: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  focused: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerDayView, [{\n    type: Component,\n    args: [{\n      selector: '[ngbDatepickerDayView]',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'btn-light',\n        '[class.bg-primary]': 'selected',\n        '[class.text-white]': 'selected',\n        '[class.text-muted]': 'isMuted()',\n        '[class.outside]': 'isMuted()',\n        '[class.active]': 'focused'\n      },\n      template: `{{ i18n.getDayNumerals(date) }}`,\n      styles: [\"[ngbDatepickerDayView]{background:transparent;border-radius:.25rem;height:2rem;line-height:2rem;text-align:center;width:2rem}[ngbDatepickerDayView].outside{opacity:.5}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }];\n  }, {\n    currentMonth: [{\n      type: Input\n    }],\n    date: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    focused: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgbDatepickerNavigationSelect {\n  constructor(i18n, _renderer) {\n    this.i18n = i18n;\n    this._renderer = _renderer;\n    this.select = new EventEmitter();\n    this._month = -1;\n    this._year = -1;\n  }\n\n  changeMonth(month) {\n    this.select.emit(new NgbDate(this.date.year, toInteger(month), 1));\n  }\n\n  changeYear(year) {\n    this.select.emit(new NgbDate(toInteger(year), this.date.month, 1));\n  }\n\n  ngAfterViewChecked() {\n    if (this.date) {\n      if (this.date.month !== this._month) {\n        this._month = this.date.month;\n\n        this._renderer.setProperty(this.monthSelect.nativeElement, 'value', this._month);\n      }\n\n      if (this.date.year !== this._year) {\n        this._year = this.date.year;\n\n        this._renderer.setProperty(this.yearSelect.nativeElement, 'value', this._year);\n      }\n    }\n  }\n\n}\n\nNgbDatepickerNavigationSelect.ɵfac = function NgbDatepickerNavigationSelect_Factory(t) {\n  return new (t || NgbDatepickerNavigationSelect)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nNgbDatepickerNavigationSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbDatepickerNavigationSelect,\n  selectors: [[\"ngb-datepicker-navigation-select\"]],\n  viewQuery: function NgbDatepickerNavigationSelect_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c21, 3, ElementRef);\n      ɵngcc0.ɵɵviewQuery(_c22, 3, ElementRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthSelect = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearSelect = _t.first);\n    }\n  },\n  inputs: {\n    date: \"date\",\n    disabled: \"disabled\",\n    months: \"months\",\n    years: \"years\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  decls: 6,\n  vars: 4,\n  consts: function () {\n    let i18n_23;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_24 = goog.getMsg(\"Select month\");\n      i18n_23 = MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_24;\n    } else {\n      i18n_23 = $localize`:@@ngb.datepicker.select-month␟1dbc84807f35518112f62e5775d1daebd3d8462b␟2253869508135064750:Select month`;\n    }\n\n    let i18n_25;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_26 = goog.getMsg(\"Select month\");\n      i18n_25 = MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_26;\n    } else {\n      i18n_25 = $localize`:@@ngb.datepicker.select-month␟1dbc84807f35518112f62e5775d1daebd3d8462b␟2253869508135064750:Select month`;\n    }\n\n    let i18n_27;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_28 = goog.getMsg(\"Select year\");\n      i18n_27 = MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_28;\n    } else {\n      i18n_27 = $localize`:@@ngb.datepicker.select-year␟8ceb09d002bf0c5d1cac171dfbffe1805d2b3962␟8852264961585484321:Select year`;\n    }\n\n    let i18n_29;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_30 = goog.getMsg(\"Select year\");\n      i18n_29 = MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_30;\n    } else {\n      i18n_29 = $localize`:@@ngb.datepicker.select-year␟8ceb09d002bf0c5d1cac171dfbffe1805d2b3962␟8852264961585484321:Select year`;\n    }\n\n    return [[\"aria-label\", i18n_23, \"title\", i18n_25, 1, \"custom-select\", 3, \"disabled\", \"change\"], [\"month\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"aria-label\", i18n_27, \"title\", i18n_29, 1, \"custom-select\", 3, \"disabled\", \"change\"], [\"year\", \"\"], [3, \"value\"]];\n  },\n  template: function NgbDatepickerNavigationSelect_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"select\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"change\", function NgbDatepickerNavigationSelect_Template_select_change_0_listener($event) {\n        return ctx.changeMonth($event.target.value);\n      });\n      ɵngcc0.ɵɵtemplate(2, NgbDatepickerNavigationSelect_option_2_Template, 2, 3, \"option\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(3, \"select\", 3, 4);\n      ɵngcc0.ɵɵlistener(\"change\", function NgbDatepickerNavigationSelect_Template_select_change_3_listener($event) {\n        return ctx.changeYear($event.target.value);\n      });\n      ɵngcc0.ɵɵtemplate(5, NgbDatepickerNavigationSelect_option_5_Template, 2, 2, \"option\", 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.months);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.years);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, ɵngcc2.NgSelectOption, ɵngcc2.ɵangular_packages_forms_forms_x],\n  styles: [\"ngb-datepicker-navigation-select>.custom-select{-ms-flex:1 1 auto;flex:1 1 auto;font-size:.875rem;height:1.85rem;padding:0 .5rem}ngb-datepicker-navigation-select>.custom-select:focus{z-index:1}ngb-datepicker-navigation-select>.custom-select::-ms-value{background-color:transparent!important}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbDatepickerNavigationSelect.ctorParameters = () => [{\n  type: NgbDatepickerI18n\n}, {\n  type: Renderer2\n}];\n\nNgbDatepickerNavigationSelect.propDecorators = {\n  date: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  months: [{\n    type: Input\n  }],\n  years: [{\n    type: Input\n  }],\n  select: [{\n    type: Output\n  }],\n  monthSelect: [{\n    type: ViewChild,\n    args: ['month', {\n      static: true,\n      read: ElementRef\n    }]\n  }],\n  yearSelect: [{\n    type: ViewChild,\n    args: ['year', {\n      static: true,\n      read: ElementRef\n    }]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerNavigationSelect, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-datepicker-navigation-select',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <select #month\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\n      (change)=\"changeMonth($any($event).target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\n    </select><select #year\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\n      (change)=\"changeYear($any($event).target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n    </select>\n  `,\n      styles: [\"ngb-datepicker-navigation-select>.custom-select{-ms-flex:1 1 auto;flex:1 1 auto;font-size:.875rem;height:1.85rem;padding:0 .5rem}ngb-datepicker-navigation-select>.custom-select:focus{z-index:1}ngb-datepicker-navigation-select>.custom-select::-ms-value{background-color:transparent!important}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    select: [{\n      type: Output\n    }],\n    date: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    months: [{\n      type: Input\n    }],\n    years: [{\n      type: Input\n    }],\n    monthSelect: [{\n      type: ViewChild,\n      args: ['month', {\n        static: true,\n        read: ElementRef\n      }]\n    }],\n    yearSelect: [{\n      type: ViewChild,\n      args: ['year', {\n        static: true,\n        read: ElementRef\n      }]\n    }]\n  });\n})();\n\nclass NgbCalendarHijri extends NgbCalendar {\n  getDaysPerWeek() {\n    return 7;\n  }\n\n  getMonths() {\n    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  }\n\n  getWeeksPerMonth() {\n    return 6;\n  }\n\n  getNext(date, period = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = this._setYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n\n      case 'm':\n        date = this._setMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n\n      case 'd':\n        return this._setDay(date, date.day + number);\n\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date, period = 'd', number = 1) {\n    return this.getNext(date, period, -number);\n  }\n\n  getWeekday(date) {\n    const day = this.toGregorian(date).getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week, firstDayOfWeek) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n    const jsDate = this.toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\n    const time = jsDate.getTime();\n    const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1)); // Compare with Muharram 1\n\n    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday() {\n    return this.fromGregorian(new Date());\n  }\n\n  isValid(date) {\n    return date != null && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) && !isNaN(this.toGregorian(date).getTime());\n  }\n\n  _setDay(date, day) {\n    day = +day;\n    let mDays = this.getDaysPerMonth(date.month, date.year);\n\n    if (day <= 0) {\n      while (day <= 0) {\n        date = this._setMonth(date, date.month - 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n        day += mDays;\n      }\n    } else if (day > mDays) {\n      while (day > mDays) {\n        day -= mDays;\n        date = this._setMonth(date, date.month + 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n      }\n    }\n\n    date.day = day;\n    return date;\n  }\n\n  _setMonth(date, month) {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n  }\n\n  _setYear(date, year) {\n    date.year = +year;\n    return date;\n  }\n\n}\n\nNgbCalendarHijri.ɵfac = function NgbCalendarHijri_Factory(t) {\n  return ɵNgbCalendarHijri_BaseFactory(t || NgbCalendarHijri);\n};\n\nNgbCalendarHijri.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarHijri,\n  factory: NgbCalendarHijri.ɵfac\n});\nconst ɵNgbCalendarHijri_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarHijri);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCalendarHijri, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Checks if islamic year is a leap year\n */\n\n\nfunction isIslamicLeapYear(hYear) {\n  return (14 + 11 * hYear) % 30 < 11;\n}\n/**\n * Checks if gregorian years is a leap year\n */\n\n\nfunction isGregorianLeapYear(gDate) {\n  const year = gDate.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\n\n\nfunction getIslamicMonthStart(hYear, hMonth) {\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\n\n\nfunction getIslamicYearStart(year) {\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n\nfunction mod(a, b) {\n  return a - b * Math.floor(a / b);\n}\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\n\n\nconst GREGORIAN_EPOCH = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\n\nclass NgbCalendarIslamicCivil extends NgbCalendarHijri {\n  /**\n   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n   * `gDate` is a JS Date to be converted to Hijri.\n   */\n  fromGregorian(gDate) {\n    const gYear = gDate.getFullYear(),\n          gMonth = gDate.getMonth(),\n          gDay = gDate.getDate();\n    let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) + -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) + Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay) + 0.5;\n    const days = julianDay - ISLAMIC_EPOCH;\n    const hYear = Math.floor((30 * days + 10646) / 10631.0);\n    let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n    hMonth = Math.min(hMonth, 11);\n    const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n    return new NgbDate(hYear, hMonth + 1, hDay);\n  }\n  /**\n   * Returns the equivalent JS date value for a give input islamic(civil) date.\n   * `hDate` is an islamic(civil) date to be converted to Gregorian.\n   */\n\n\n  toGregorian(hDate) {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    const julianDay = hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n    const wjd = Math.floor(julianDay - 0.5) + 0.5,\n          depoch = wjd - GREGORIAN_EPOCH,\n          quadricent = Math.floor(depoch / 146097),\n          dqc = mod(depoch, 146097),\n          cent = Math.floor(dqc / 36524),\n          dcent = mod(dqc, 36524),\n          quad = Math.floor(dcent / 1461),\n          dquad = mod(dcent, 1461),\n          yindex = Math.floor(dquad / 365);\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n\n    if (!(cent === 4 || yindex === 4)) {\n      year++;\n    }\n\n    const gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400);\n    const yearday = wjd - gYearStart;\n    const tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n    const leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n    const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n    const tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400) + Math.floor((367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) + 1);\n    const day = wjd - tjd2 + 1;\n    return new Date(year, month - 1, day);\n  }\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n\n\n  getDaysPerMonth(month, year) {\n    year = year + Math.floor(month / 13);\n    month = (month - 1) % 12 + 1;\n    let length = 29 + month % 2;\n\n    if (month === 12 && isIslamicLeapYear(year)) {\n      length++;\n    }\n\n    return length;\n  }\n\n}\n\nNgbCalendarIslamicCivil.ɵfac = function NgbCalendarIslamicCivil_Factory(t) {\n  return ɵNgbCalendarIslamicCivil_BaseFactory(t || NgbCalendarIslamicCivil);\n};\n\nNgbCalendarIslamicCivil.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarIslamicCivil,\n  factory: NgbCalendarIslamicCivil.ɵfac\n});\nconst ɵNgbCalendarIslamicCivil_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarIslamicCivil);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCalendarIslamicCivil, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\n\n\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\nconst MONTH_LENGTH = [// 1300-1304\n'101010101010', '110101010100', '111011001001', '011011010100', '011011101010', // 1305-1309\n'001101101100', '101010101101', '010101010101', '011010101001', '011110010010', // 1310-1314\n'101110101001', '010111010100', '101011011010', '010101011100', '110100101101', // 1315-1319\n'011010010101', '011101001010', '101101010100', '101101101010', '010110101101', // 1320-1324\n'010010101110', '101001001111', '010100010111', '011010001011', '011010100101', // 1325-1329\n'101011010101', '001011010110', '100101011011', '010010011101', '101001001101', // 1330-1334\n'110100100110', '110110010101', '010110101100', '100110110110', '001010111010', // 1335-1339\n'101001011011', '010100101011', '101010010101', '011011001010', '101011101001', // 1340-1344\n'001011110100', '100101110110', '001010110110', '100101010110', '101011001010', // 1345-1349\n'101110100100', '101111010010', '010111011001', '001011011100', '100101101101', // 1350-1354\n'010101001101', '101010100101', '101101010010', '101110100101', '010110110100', // 1355-1359\n'100110110110', '010101010111', '001010010111', '010101001011', '011010100011', // 1360-1364\n'011101010010', '101101100101', '010101101010', '101010101011', '010100101011', // 1365-1369\n'110010010101', '110101001010', '110110100101', '010111001010', '101011010110', // 1370-1374\n'100101010111', '010010101011', '100101001011', '101010100101', '101101010010', // 1375-1379\n'101101101010', '010101110101', '001001110110', '100010110111', '010001011011', // 1380-1384\n'010101010101', '010110101001', '010110110100', '100111011010', '010011011101', // 1385-1389\n'001001101110', '100100110110', '101010101010', '110101010100', '110110110010', // 1390-1394\n'010111010101', '001011011010', '100101011011', '010010101011', '101001010101', // 1395-1399\n'101101001001', '101101100100', '101101110001', '010110110100', '101010110101', // 1400-1404\n'101001010101', '110100100101', '111010010010', '111011001001', '011011010100', // 1405-1409\n'101011101001', '100101101011', '010010101011', '101010010011', '110101001001', // 1410-1414\n'110110100100', '110110110010', '101010111001', '010010111010', '101001011011', // 1415-1419\n'010100101011', '101010010101', '101100101010', '101101010101', '010101011100', // 1420-1424\n'010010111101', '001000111101', '100100011101', '101010010101', '101101001010', // 1425-1429\n'101101011010', '010101101101', '001010110110', '100100111011', '010010011011', // 1430-1434\n'011001010101', '011010101001', '011101010100', '101101101010', '010101101100', // 1435-1439\n'101010101101', '010101010101', '101100101001', '101110010010', '101110101001', // 1440-1444\n'010111010100', '101011011010', '010101011010', '101010101011', '010110010101', // 1445-1449\n'011101001001', '011101100100', '101110101010', '010110110101', '001010110110', // 1450-1454\n'101001010110', '111001001101', '101100100101', '101101010010', '101101101010', // 1455-1459\n'010110101101', '001010101110', '100100101111', '010010010111', '011001001011', // 1460-1464\n'011010100101', '011010101100', '101011010110', '010101011101', '010010011101', // 1465-1469\n'101001001101', '110100010110', '110110010101', '010110101010', '010110110101', // 1470-1474\n'001011011010', '100101011011', '010010101101', '010110010101', '011011001010', // 1475-1479\n'011011100100', '101011101010', '010011110101', '001010110110', '100101010110', // 1480-1484\n'101010101010', '101101010100', '101111010010', '010111011001', '001011101010', // 1485-1489\n'100101101101', '010010101101', '101010010101', '101101001010', '101110100101', // 1490-1494\n'010110110010', '100110110101', '010011010110', '101010010111', '010101000111', // 1495-1499\n'011010010011', '011101001001', '101101010101', '010101101010', '101001101011', // 1500-1504\n'010100101011', '101010001011', '110101000110', '110110100011', '010111001010', // 1505-1509\n'101011010110', '010011011011', '001001101011', '100101001011', '101010100101', // 1510-1514\n'101101010010', '101101101001', '010101110101', '000101110110', '100010110111', // 1515-1519\n'001001011011', '010100101011', '010101100101', '010110110100', '100111011010', // 1520-1524\n'010011101101', '000101101101', '100010110110', '101010100110', '110101010010', // 1525-1529\n'110110101001', '010111010100', '101011011010', '100101011011', '010010101011', // 1530-1534\n'011001010011', '011100101001', '011101100010', '101110101001', '010110110010', // 1535-1539\n'101010110101', '010101010101', '101100100101', '110110010010', '111011001001', // 1540-1544\n'011011010010', '101011101001', '010101101011', '010010101011', '101001010101', // 1545-1549\n'110100101001', '110101010100', '110110101010', '100110110101', '010010111010', // 1550-1554\n'101000111011', '010010011011', '101001001101', '101010101010', '101011010101', // 1555-1559\n'001011011010', '100101011101', '010001011110', '101000101110', '110010011010', // 1560-1564\n'110101010101', '011010110010', '011010111001', '010010111010', '101001011101', // 1565-1569\n'010100101101', '101010010101', '101101010010', '101110101000', '101110110100', // 1570-1574\n'010110111001', '001011011010', '100101011010', '101101001010', '110110100100', // 1575-1579\n'111011010001', '011011101000', '101101101010', '010101101101', '010100110101', // 1580-1584\n'011010010101', '110101001010', '110110101000', '110111010100', '011011011010', // 1585-1589\n'010101011011', '001010011101', '011000101011', '101100010101', '101101001010', // 1590-1594\n'101110010101', '010110101010', '101010101110', '100100101110', '110010001111', // 1595-1599\n'010100100111', '011010010101', '011010101010', '101011010110', '010101011101', // 1600\n'001010011101'];\n\nfunction getDaysDiff(date1, date2) {\n  // Ignores the time part in date1 and date2:\n  const time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n  const time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n  const diff = Math.abs(time1 - time2);\n  return Math.round(diff / ONE_DAY);\n}\n\nclass NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n  /**\n  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n  * `gdate` is s JS Date to be converted to Hijri.\n  */\n  fromGregorian(gDate) {\n    let hDay = 1,\n        hMonth = 0,\n        hYear = 1300;\n    let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n\n    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n      let year = 1300;\n\n      for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n        for (let j = 0; j < 12; j++) {\n          let numOfDays = +MONTH_LENGTH[i][j] + 29;\n\n          if (daysDiff <= numOfDays) {\n            hDay = daysDiff + 1;\n\n            if (hDay > numOfDays) {\n              hDay = 1;\n              j++;\n            }\n\n            if (j > 11) {\n              j = 0;\n              year++;\n            }\n\n            hMonth = j;\n            hYear = year;\n            return new NgbDate(hYear, hMonth + 1, hDay);\n          }\n\n          daysDiff = daysDiff - numOfDays;\n        }\n      }\n\n      return null;\n    } else {\n      return super.fromGregorian(gDate);\n    }\n  }\n  /**\n  * Converts the current Hijri date to Gregorian.\n  */\n\n\n  toGregorian(hDate) {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    let gDate = new Date(GREGORIAN_FIRST_DATE);\n    let dayDiff = hDay - 1;\n\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n        for (let m = 0; m < 12; m++) {\n          dayDiff += +MONTH_LENGTH[y][m] + 29;\n        }\n      }\n\n      for (let m = 0; m < hMonth; m++) {\n        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n      }\n\n      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n    } else {\n      gDate = super.toGregorian(hDate);\n    }\n\n    return gDate;\n  }\n  /**\n  * Returns the number of days in a specific Hijri hMonth.\n  * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n  * `hYear` is any Hijri hYear.\n  */\n\n\n  getDaysPerMonth(hMonth, hYear) {\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      const pos = hYear - HIJRI_BEGIN;\n      return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n    }\n\n    return super.getDaysPerMonth(hMonth, hYear);\n  }\n\n}\n\nNgbCalendarIslamicUmalqura.ɵfac = function NgbCalendarIslamicUmalqura_Factory(t) {\n  return ɵNgbCalendarIslamicUmalqura_BaseFactory(t || NgbCalendarIslamicUmalqura);\n};\n\nNgbCalendarIslamicUmalqura.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarIslamicUmalqura,\n  factory: NgbCalendarIslamicUmalqura.ɵfac\n});\nconst ɵNgbCalendarIslamicUmalqura_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarIslamicUmalqura);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCalendarIslamicUmalqura, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\n\n\nfunction toGregorian(jalaliDate) {\n  let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n  let date = julianToGregorian(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\n\n\nfunction fromGregorian(gdate) {\n  let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return julianToJalali(g2d);\n}\n\nfunction setJalaliYear(date, yearValue) {\n  date.year = +yearValue;\n  return date;\n}\n\nfunction setJalaliMonth(date, month) {\n  month = +month;\n  date.year = date.year + Math.floor((month - 1) / 12);\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n  return date;\n}\n\nfunction setJalaliDay(date, day) {\n  let mDays = getDaysPerMonth(date.month, date.year);\n\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setJalaliMonth(date, date.month - 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setJalaliMonth(date, date.month + 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n    }\n  }\n\n  date.day = day;\n  return date;\n}\n\nfunction mod$1(a, b) {\n  return a - b * Math.floor(a / b);\n}\n\nfunction div(a, b) {\n  return Math.trunc(a / b);\n}\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\n\n\nfunction jalCal(jalaliYear) {\n  // Jalali years starting the 33-year rule.\n  let breaks = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n  const breaksLength = breaks.length;\n  const gYear = jalaliYear + 621;\n  let leapJ = -14;\n  let jp = breaks[0];\n\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n    throw new Error('Invalid Jalali year ' + jalaliYear);\n  } // Find the limiting years for the Jalali year jalaliYear.\n\n\n  let jump;\n\n  for (let i = 1; i < breaksLength; i += 1) {\n    const jm = breaks[i];\n    jump = jm - jp;\n\n    if (jalaliYear < jm) {\n      break;\n    }\n\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod$1(jump, 33), 4);\n    jp = jm;\n  }\n\n  let n = jalaliYear - jp; // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalali year in the Persian calendar.\n\n  leapJ = leapJ + div(n, 33) * 8 + div(mod$1(n, 33) + 3, 4);\n\n  if (mod$1(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  } // And the same in the Gregorian calendar (until the year gYear).\n\n\n  const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150; // Determine the Gregorian date of Farvardin the 1st.\n\n  const march = 20 + leapJ - leapG; // Find how many years have passed since the last leap year.\n\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n\n  let leap = mod$1(mod$1(n + 1, 33) - 1, 4);\n\n  if (leap === -1) {\n    leap = 4;\n  }\n\n  return {\n    leap: leap,\n    gy: gYear,\n    march: march\n  };\n}\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\n\n\nfunction julianToGregorian(julianDayNumber) {\n  let j = 4 * julianDayNumber + 139361631;\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n  const i = div(mod$1(j, 1461), 4) * 5 + 308;\n  const gDay = div(mod$1(i, 153), 5) + 1;\n  const gMonth = mod$1(div(i, 153), 12) + 1;\n  const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n  return new Date(gYear, gMonth - 1, gDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\n\n\nfunction gregorianToJulian(gy, gm, gd) {\n  let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod$1(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\n\n\nfunction julianToJalali(julianDayNumber) {\n  let gy = julianToGregorian(julianDayNumber).getFullYear() // Calculate Gregorian year (gy).\n  ,\n      jalaliYear = gy - 621,\n      r = jalCal(jalaliYear),\n      gregorianDay = gregorianToJulian(gy, 3, r.march),\n      jalaliDay,\n      jalaliMonth,\n      numberOfDays; // Find number of days that passed since 1 Farvardin.\n\n  numberOfDays = julianDayNumber - gregorianDay;\n\n  if (numberOfDays >= 0) {\n    if (numberOfDays <= 185) {\n      // The first 6 months.\n      jalaliMonth = 1 + div(numberOfDays, 31);\n      jalaliDay = mod$1(numberOfDays, 31) + 1;\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n    } else {\n      // The remaining months.\n      numberOfDays -= 186;\n    }\n  } else {\n    // Previous Jalali year.\n    jalaliYear -= 1;\n    numberOfDays += 179;\n\n    if (r.leap === 1) {\n      numberOfDays += 1;\n    }\n  }\n\n  jalaliMonth = 7 + div(numberOfDays, 30);\n  jalaliDay = mod$1(numberOfDays, 30) + 1;\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\n\n\nfunction jalaliToJulian(jYear, jMonth, jDay) {\n  let r = jalCal(jYear);\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n/**\n * Returns the number of days in a specific jalali month.\n */\n\n\nfunction getDaysPerMonth(month, year) {\n  if (month <= 6) {\n    return 31;\n  }\n\n  if (month <= 11) {\n    return 30;\n  }\n\n  if (jalCal(year).leap === 0) {\n    return 30;\n  }\n\n  return 29;\n}\n\nclass NgbCalendarPersian extends NgbCalendar {\n  getDaysPerWeek() {\n    return 7;\n  }\n\n  getMonths() {\n    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  }\n\n  getWeeksPerMonth() {\n    return 6;\n  }\n\n  getNext(date, period = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = setJalaliYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n\n      case 'm':\n        date = setJalaliMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n\n      case 'd':\n        return setJalaliDay(date, date.day + number);\n\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date, period = 'd', number = 1) {\n    return this.getNext(date, period, -number);\n  }\n\n  getWeekday(date) {\n    const day = toGregorian(date).getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week, firstDayOfWeek) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n    const jsDate = toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\n    const time = jsDate.getTime();\n    const startDate = toGregorian(new NgbDate(date.year, 1, 1));\n    return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday() {\n    return fromGregorian(new Date());\n  }\n\n  isValid(date) {\n    return date != null && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) && !isNaN(toGregorian(date).getTime());\n  }\n\n}\n\nNgbCalendarPersian.ɵfac = function NgbCalendarPersian_Factory(t) {\n  return ɵNgbCalendarPersian_BaseFactory(t || NgbCalendarPersian);\n};\n\nNgbCalendarPersian.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarPersian,\n  factory: NgbCalendarPersian.ɵfac\n});\nconst ɵNgbCalendarPersian_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarPersian);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCalendarPersian, [{\n    type: Injectable\n  }], null, null);\n})();\n\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH$1 = 1721425.5;\n\nfunction isGregorianLeapYear$1(year) {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\nfunction numberOfFirstDayInYear(year) {\n  let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n  let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n  let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n  let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n  let dayOfWeek = dayNumber % 7; // 0 == Monday\n\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n    dayNumber++;\n    dayOfWeek = dayNumber % 7;\n  }\n\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n    dayNumber += 2;\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n    dayNumber++;\n  }\n\n  return dayNumber;\n}\n\nfunction getDaysInGregorianMonth(month, year) {\n  let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  if (isGregorianLeapYear$1(year)) {\n    days[1]++;\n  }\n\n  return days[month - 1];\n}\n\nfunction getHebrewMonths(year) {\n  return isHebrewLeapYear(year) ? 13 : 12;\n}\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\n\n\nfunction getDaysInHebrewYear(year) {\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n\nfunction isHebrewLeapYear(year) {\n  if (year != null) {\n    let b = (year * 12 + 17) % 19;\n    return b >= (b < 0 ? -7 : 12);\n  }\n\n  return false;\n}\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\n\n\nfunction getDaysInHebrewMonth(month, year) {\n  let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n  let yearType = (yearLength <= 380 ? yearLength : yearLength - 30) - 353;\n  let leapYear = isHebrewLeapYear(year);\n  let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] : [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n\n  if (yearType > 0) {\n    daysInMonth[2]++; // Kislev gets an extra day in normal or complete years.\n  }\n\n  if (yearType > 1) {\n    daysInMonth[1]++; // Heshvan gets an extra day in complete years only.\n  }\n\n  return daysInMonth[month - 1];\n}\n\nfunction getDayNumberInHebrewYear(date) {\n  let numberOfDay = 0;\n\n  for (let i = 1; i < date.month; i++) {\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\n  }\n\n  return numberOfDay + date.day;\n}\n\nfunction setHebrewMonth(date, val) {\n  let after = val >= 0;\n\n  if (!after) {\n    val = -val;\n  }\n\n  while (val > 0) {\n    if (after) {\n      if (val > getHebrewMonths(date.year) - date.month) {\n        val -= getHebrewMonths(date.year) - date.month + 1;\n        date.year++;\n        date.month = 1;\n      } else {\n        date.month += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.month) {\n        date.year--;\n        val -= date.month;\n        date.month = getHebrewMonths(date.year);\n      } else {\n        date.month -= val;\n        val = 0;\n      }\n    }\n  }\n\n  return date;\n}\n\nfunction setHebrewDay(date, val) {\n  let after = val >= 0;\n\n  if (!after) {\n    val = -val;\n  }\n\n  while (val > 0) {\n    if (after) {\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n        date.year++;\n        date.month = 1;\n        date.day = 1;\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n        date.month++;\n        date.day = 1;\n      } else {\n        date.day += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.day) {\n        val -= date.day;\n        date.month--;\n\n        if (date.month === 0) {\n          date.year--;\n          date.month = getHebrewMonths(date.year);\n        }\n\n        date.day = getDaysInHebrewMonth(date.month, date.year);\n      } else {\n        date.day -= val;\n        val = 0;\n      }\n    }\n  }\n\n  return date;\n}\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\n\n\nfunction fromGregorian$1(gdate) {\n  const date = new Date(gdate);\n  const gYear = date.getFullYear(),\n        gMonth = date.getMonth(),\n        gDay = date.getDate();\n  let julianDay = GREGORIAN_EPOCH$1 - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) - Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) + Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear$1(gYear) ? -1 : -2) + gDay);\n  julianDay = Math.floor(julianDay + 0.5);\n  let daysSinceHebEpoch = julianDay - 347997;\n  let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n  let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n  let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n  let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n\n  while (dayOfYear < 1) {\n    hYear--;\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  }\n\n  let hMonth = 1;\n  let hDay = dayOfYear;\n\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\n    hMonth++;\n  }\n\n  return new NgbDate(hYear, hMonth, hDay);\n}\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\n\n\nfunction toGregorian$1(hebrewDate) {\n  const hYear = hebrewDate.year;\n  const hMonth = hebrewDate.month;\n  const hDay = hebrewDate.day;\n  let days = numberOfFirstDayInYear(hYear);\n\n  for (let i = 1; i < hMonth; i++) {\n    days += getDaysInHebrewMonth(i, hYear);\n  }\n\n  days += hDay;\n  let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n  let after = diffDays >= 0;\n\n  if (!after) {\n    diffDays = -diffDays;\n  }\n\n  let gYear = 1970;\n  let gMonth = 1;\n  let gDay = 1;\n\n  while (diffDays > 0) {\n    if (after) {\n      if (diffDays >= (isGregorianLeapYear$1(gYear) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear$1(gYear) ? 366 : 365;\n        gYear++;\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        gMonth++;\n      } else {\n        gDay += diffDays;\n        diffDays = 0;\n      }\n    } else {\n      if (diffDays >= (isGregorianLeapYear$1(gYear - 1) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear$1(gYear - 1) ? 366 : 365;\n        gYear--;\n      } else {\n        if (gMonth > 1) {\n          gMonth--;\n        } else {\n          gMonth = 12;\n          gYear--;\n        }\n\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        } else {\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n          diffDays = 0;\n        }\n      }\n    }\n  }\n\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\nfunction hebrewNumerals(numerals) {\n  if (!numerals) {\n    return '';\n  }\n\n  const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n  const hArray10_19 = ['\\u05d9', '\\u05d9\\u05d0', '\\u05d9\\u05d1', '\\u05d9\\u05d2', '\\u05d9\\u05d3', '\\u05d8\\u05d5', '\\u05d8\\u05d6', '\\u05d9\\u05d6', '\\u05d9\\u05d7', '\\u05d9\\u05d8'];\n  const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n  const hArray100_900 = ['', '\\u05e7', '\\u05e8', '\\u05e9', '\\u05ea', '\\u05ea\\u05e7', '\\u05ea\\u05e8', '\\u05ea\\u05e9', '\\u05ea\\u05ea', '\\u05ea\\u05ea\\u05e7'];\n  const hArray1000_9000 = ['', '\\u05d0', '\\u05d1', '\\u05d1\\u05d0', '\\u05d1\\u05d1', '\\u05d4', '\\u05d4\\u05d0', '\\u05d4\\u05d1', '\\u05d4\\u05d1\\u05d0', '\\u05d4\\u05d1\\u05d1'];\n  const geresh = '\\u05f3',\n        gershaim = '\\u05f4';\n  let mem = 0;\n  let result = [];\n  let step = 0;\n\n  while (numerals > 0) {\n    let m = numerals % 10;\n\n    if (step === 0) {\n      mem = m;\n    } else if (step === 1) {\n      if (m !== 1) {\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\n      } else {\n        result.unshift(hArray10_19[mem]);\n      }\n    } else if (step === 2) {\n      result.unshift(hArray100_900[m]);\n    } else {\n      if (m !== 5) {\n        result.unshift(hArray1000_9000[m], geresh, ' ');\n      }\n\n      break;\n    }\n\n    numerals = Math.floor(numerals / 10);\n\n    if (step === 0 && numerals === 0) {\n      result.unshift(hArray0_9[m]);\n    }\n\n    step++;\n  }\n\n  result = result.join('').split('');\n\n  if (result.length === 1) {\n    result.push(geresh);\n  } else if (result.length > 1) {\n    result.splice(result.length - 1, 0, gershaim);\n  }\n\n  return result.join('');\n}\n/**\n * @since 3.2.0\n */\n\n\nclass NgbCalendarHebrew extends NgbCalendar {\n  getDaysPerWeek() {\n    return 7;\n  }\n\n  getMonths(year) {\n    if (year && isHebrewLeapYear(year)) {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    } else {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }\n\n  getWeeksPerMonth() {\n    return 6;\n  }\n\n  isValid(date) {\n    if (date != null) {\n      let b = isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n      b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n      b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n      return b && !isNaN(toGregorian$1(date).getTime());\n    }\n\n    return false;\n  }\n\n  getNext(date, period = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date.year += number;\n        date.month = 1;\n        date.day = 1;\n        return date;\n\n      case 'm':\n        date = setHebrewMonth(date, number);\n        date.day = 1;\n        return date;\n\n      case 'd':\n        return setHebrewDay(date, number);\n\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date, period = 'd', number = 1) {\n    return this.getNext(date, period, -number);\n  }\n\n  getWeekday(date) {\n    const day = toGregorian$1(date).getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week, firstDayOfWeek) {\n    const date = week[week.length - 1];\n    return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n  }\n\n  getToday() {\n    return fromGregorian$1(new Date());\n  }\n  /**\n   * @since 3.4.0\n   */\n\n\n  toGregorian(date) {\n    return fromJSDate(toGregorian$1(date));\n  }\n  /**\n   * @since 3.4.0\n   */\n\n\n  fromGregorian(date) {\n    return fromGregorian$1(toJSDate(date));\n  }\n\n}\n\nNgbCalendarHebrew.ɵfac = function NgbCalendarHebrew_Factory(t) {\n  return ɵNgbCalendarHebrew_BaseFactory(t || NgbCalendarHebrew);\n};\n\nNgbCalendarHebrew.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarHebrew,\n  factory: NgbCalendarHebrew.ɵfac\n});\nconst ɵNgbCalendarHebrew_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarHebrew);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCalendarHebrew, [{\n    type: Injectable\n  }], null, null);\n})();\n\nconst WEEKDAYS = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];\nconst MONTHS = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\nconst MONTHS_LEAP = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר א׳', 'אדר ב׳', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\n/**\n * @since 3.2.0\n */\n\nclass NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n  getMonthShortName(month, year) {\n    return this.getMonthFullName(month, year);\n  }\n\n  getMonthFullName(month, year) {\n    return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] || '' : MONTHS[month - 1] || '';\n  }\n\n  getWeekdayShortName(weekday) {\n    return WEEKDAYS[weekday - 1] || '';\n  }\n\n  getDayAriaLabel(date) {\n    return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n  }\n\n  getDayNumerals(date) {\n    return hebrewNumerals(date.day);\n  }\n\n  getWeekNumerals(weekNumber) {\n    return hebrewNumerals(weekNumber);\n  }\n\n  getYearNumerals(year) {\n    return hebrewNumerals(year);\n  }\n\n}\n\nNgbDatepickerI18nHebrew.ɵfac = function NgbDatepickerI18nHebrew_Factory(t) {\n  return ɵNgbDatepickerI18nHebrew_BaseFactory(t || NgbDatepickerI18nHebrew);\n};\n\nNgbDatepickerI18nHebrew.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDatepickerI18nHebrew,\n  factory: NgbDatepickerI18nHebrew.ɵfac\n});\nconst ɵNgbDatepickerI18nHebrew_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbDatepickerI18nHebrew);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerI18nHebrew, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\n\n\nclass NgbDateNativeAdapter extends NgbDateAdapter {\n  /**\n   * Converts a native `Date` to a `NgbDateStruct`.\n   */\n  fromModel(date) {\n    return date instanceof Date && !isNaN(date.getTime()) ? this._fromNativeDate(date) : null;\n  }\n  /**\n   * Converts a `NgbDateStruct` to a native `Date`.\n   */\n\n\n  toModel(date) {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) : null;\n  }\n\n  _fromNativeDate(date) {\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate()\n    };\n  }\n\n  _toNativeDate(date) {\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12); // avoid 30 -> 1930 conversion\n\n    jsDate.setFullYear(date.year);\n    return jsDate;\n  }\n\n}\n\nNgbDateNativeAdapter.ɵfac = function NgbDateNativeAdapter_Factory(t) {\n  return ɵNgbDateNativeAdapter_BaseFactory(t || NgbDateNativeAdapter);\n};\n\nNgbDateNativeAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDateNativeAdapter,\n  factory: NgbDateNativeAdapter.ɵfac\n});\nconst ɵNgbDateNativeAdapter_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbDateNativeAdapter);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDateNativeAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * @since 3.2.0\n */\n\n\nclass NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n  _fromNativeDate(date) {\n    return {\n      year: date.getUTCFullYear(),\n      month: date.getUTCMonth() + 1,\n      day: date.getUTCDate()\n    };\n  }\n\n  _toNativeDate(date) {\n    const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day)); // avoid 30 -> 1930 conversion\n\n    jsDate.setUTCFullYear(date.year);\n    return jsDate;\n  }\n\n}\n\nNgbDateNativeUTCAdapter.ɵfac = function NgbDateNativeUTCAdapter_Factory(t) {\n  return ɵNgbDateNativeUTCAdapter_BaseFactory(t || NgbDateNativeUTCAdapter);\n};\n\nNgbDateNativeUTCAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDateNativeUTCAdapter,\n  factory: NgbDateNativeUTCAdapter.ɵfac\n});\nconst ɵNgbDateNativeUTCAdapter_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbDateNativeUTCAdapter);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDateNativeUTCAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n\nclass NgbDatepickerModule {}\n\nNgbDatepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbDatepickerModule\n});\nNgbDatepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbDatepickerModule_Factory(t) {\n    return new (t || NgbDatepickerModule)();\n  },\n  imports: [[CommonModule, FormsModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbDatepickerModule, {\n    declarations: function () {\n      return [NgbDatepicker, NgbDatepickerContent, NgbDatepickerMonth, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView, NgbInputDatepicker];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule];\n    },\n    exports: function () {\n      return [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbDatepicker, NgbDatepickerContent, NgbDatepickerMonth, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView, NgbInputDatepicker],\n      exports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth],\n      imports: [CommonModule, FormsModule],\n      entryComponents: [NgbDatepicker]\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\n\n\nclass NgbDropdownConfig {\n  constructor() {\n    this.autoClose = true;\n    this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n  }\n\n}\n\nNgbDropdownConfig.ɵfac = function NgbDropdownConfig_Factory(t) {\n  return new (t || NgbDropdownConfig)();\n};\n\nNgbDropdownConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbDropdownConfig_Factory() {\n    return new NgbDropdownConfig();\n  },\n  token: NgbDropdownConfig,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDropdownConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass NgbNavbar {}\n\nNgbNavbar.ɵfac = function NgbNavbar_Factory(t) {\n  return new (t || NgbNavbar)();\n};\n\nNgbNavbar.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNavbar,\n  selectors: [[\"\", 8, \"navbar\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbNavbar, [{\n    type: Directive,\n    args: [{\n      selector: '.navbar'\n    }]\n  }], null, null);\n})();\n/**\n * A directive you should put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\n\n\nclass NgbDropdownItem {\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n    this._disabled = false;\n  }\n\n  set disabled(value) {\n    this._disabled = value === '' || value === true; // accept an empty attribute as true\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n}\n\nNgbDropdownItem.ɵfac = function NgbDropdownItem_Factory(t) {\n  return new (t || NgbDropdownItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbDropdownItem.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDropdownItem,\n  selectors: [[\"\", \"ngbDropdownItem\", \"\"]],\n  hostAttrs: [1, \"dropdown-item\"],\n  hostVars: 2,\n  hostBindings: function NgbDropdownItem_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\"\n  }\n});\n\nNgbDropdownItem.ctorParameters = () => [{\n  type: ElementRef\n}];\n\nNgbDropdownItem.propDecorators = {\n  disabled: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDropdownItem, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownItem]',\n      host: {\n        'class': 'dropdown-item',\n        '[class.disabled]': 'disabled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\n\n\nclass NgbDropdownMenu {\n  constructor(dropdown, _elementRef) {\n    this.dropdown = dropdown;\n    this.placement = 'bottom';\n    this.isOpen = false;\n    this.nativeElement = _elementRef.nativeElement;\n  }\n\n}\n\nNgbDropdownMenu.ɵfac = function NgbDropdownMenu_Factory(t) {\n  return new (t || NgbDropdownMenu)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgbDropdown)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbDropdownMenu.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDropdownMenu,\n  selectors: [[\"\", \"ngbDropdownMenu\", \"\"]],\n  contentQueries: function NgbDropdownMenu_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbDropdownItem, 0);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.menuItems = _t);\n    }\n  },\n  hostVars: 5,\n  hostBindings: function NgbDropdownMenu_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keydown.ArrowUp\", function NgbDropdownMenu_keydown_ArrowUp_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.ArrowDown\", function NgbDropdownMenu_keydown_ArrowDown_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Home\", function NgbDropdownMenu_keydown_Home_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.End\", function NgbDropdownMenu_keydown_End_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Enter\", function NgbDropdownMenu_keydown_Enter_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Space\", function NgbDropdownMenu_keydown_Space_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Tab\", function NgbDropdownMenu_keydown_Tab_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Shift.Tab\", function NgbDropdownMenu_keydown_Shift_Tab_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"x-placement\", ctx.placement);\n      ɵngcc0.ɵɵclassProp(\"dropdown-menu\", true)(\"show\", ctx.dropdown.isOpen());\n    }\n  }\n});\n\nNgbDropdownMenu.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [forwardRef(() => NgbDropdown)]\n  }]\n}, {\n  type: ElementRef\n}];\n\nNgbDropdownMenu.propDecorators = {\n  menuItems: [{\n    type: ContentChildren,\n    args: [NgbDropdownItem]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDropdownMenu, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownMenu]',\n      host: {\n        '[class.dropdown-menu]': 'true',\n        '[class.show]': 'dropdown.isOpen()',\n        '[attr.x-placement]': 'placement',\n        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n        '(keydown.End)': 'dropdown.onKeyDown($event)',\n        '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n        '(keydown.Space)': 'dropdown.onKeyDown($event)',\n        '(keydown.Tab)': 'dropdown.onKeyDown($event)',\n        '(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => NgbDropdown)]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    menuItems: [{\n      type: ContentChildren,\n      args: [NgbDropdownItem]\n    }]\n  });\n})();\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\n\n\nclass NgbDropdownAnchor {\n  constructor(dropdown, _elementRef) {\n    this.dropdown = dropdown;\n    this.nativeElement = _elementRef.nativeElement;\n  }\n\n}\n\nNgbDropdownAnchor.ɵfac = function NgbDropdownAnchor_Factory(t) {\n  return new (t || NgbDropdownAnchor)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgbDropdown)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbDropdownAnchor.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDropdownAnchor,\n  selectors: [[\"\", \"ngbDropdownAnchor\", \"\"]],\n  hostAttrs: [1, \"dropdown-toggle\"],\n  hostVars: 1,\n  hostBindings: function NgbDropdownAnchor_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.dropdown.isOpen());\n    }\n  }\n});\n\nNgbDropdownAnchor.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [forwardRef(() => NgbDropdown)]\n  }]\n}, {\n  type: ElementRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDropdownAnchor, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownAnchor]',\n      host: {\n        'class': 'dropdown-toggle',\n        '[attr.aria-expanded]': 'dropdown.isOpen()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => NgbDropdown)]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\n\n\nclass NgbDropdownToggle extends NgbDropdownAnchor {\n  constructor(dropdown, elementRef) {\n    super(dropdown, elementRef);\n  }\n\n}\n\nNgbDropdownToggle.ɵfac = function NgbDropdownToggle_Factory(t) {\n  return new (t || NgbDropdownToggle)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgbDropdown)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbDropdownToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDropdownToggle,\n  selectors: [[\"\", \"ngbDropdownToggle\", \"\"]],\n  hostAttrs: [1, \"dropdown-toggle\"],\n  hostVars: 1,\n  hostBindings: function NgbDropdownToggle_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function NgbDropdownToggle_click_HostBindingHandler() {\n        return ctx.dropdown.toggle();\n      })(\"keydown.ArrowUp\", function NgbDropdownToggle_keydown_ArrowUp_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.ArrowDown\", function NgbDropdownToggle_keydown_ArrowDown_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Home\", function NgbDropdownToggle_keydown_Home_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.End\", function NgbDropdownToggle_keydown_End_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Tab\", function NgbDropdownToggle_keydown_Tab_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Shift.Tab\", function NgbDropdownToggle_keydown_Shift_Tab_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.dropdown.isOpen());\n    }\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NgbDropdownAnchor,\n    useExisting: forwardRef(() => NgbDropdownToggle)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\nNgbDropdownToggle.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [forwardRef(() => NgbDropdown)]\n  }]\n}, {\n  type: ElementRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDropdownToggle, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownToggle]',\n      host: {\n        'class': 'dropdown-toggle',\n        '[attr.aria-expanded]': 'dropdown.isOpen()',\n        '(click)': 'dropdown.toggle()',\n        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n        '(keydown.End)': 'dropdown.onKeyDown($event)',\n        '(keydown.Tab)': 'dropdown.onKeyDown($event)',\n        '(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)'\n      },\n      providers: [{\n        provide: NgbDropdownAnchor,\n        useExisting: forwardRef(() => NgbDropdownToggle)\n      }]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => NgbDropdown)]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\n\n\nclass NgbDropdown {\n  constructor(_changeDetector, config, _document, _ngZone, _elementRef, _renderer, ngbNavbar) {\n    this._changeDetector = _changeDetector;\n    this._document = _document;\n    this._ngZone = _ngZone;\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._closed$ = new Subject();\n    this._bodyContainer = null;\n    /**\n     * Defines whether or not the dropdown menu is opened initially.\n     */\n\n    this._open = false;\n    /**\n     * An event fired when the dropdown is opened or closed.\n     *\n     * The event payload is a `boolean`:\n     * * `true` - the dropdown was opened\n     * * `false` - the dropdown was closed\n     */\n\n    this.openChange = new EventEmitter();\n    this.placement = config.placement;\n    this.container = config.container;\n    this.autoClose = config.autoClose;\n    this.display = ngbNavbar ? 'static' : 'dynamic';\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      this._positionMenu();\n    });\n  }\n\n  ngAfterContentInit() {\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this._applyPlacementClasses();\n\n      if (this._open) {\n        this._setCloseHandlers();\n      }\n    });\n  }\n\n  ngOnChanges(changes) {\n    if (changes.container && this._open) {\n      this._applyContainer(this.container);\n    }\n\n    if (changes.placement && !changes.placement.isFirstChange) {\n      this._applyPlacementClasses();\n    }\n  }\n  /**\n   * Checks if the dropdown menu is open.\n   */\n\n\n  isOpen() {\n    return this._open;\n  }\n  /**\n   * Opens the dropdown menu.\n   */\n\n\n  open() {\n    if (!this._open) {\n      this._open = true;\n\n      this._applyContainer(this.container);\n\n      this.openChange.emit(true);\n\n      this._setCloseHandlers();\n\n      if (this._anchor) {\n        this._anchor.nativeElement.focus();\n      }\n    }\n  }\n\n  _setCloseHandlers() {\n    ngbAutoClose(this._ngZone, this._document, this.autoClose, source => {\n      this.close();\n\n      if (source === 0\n      /* ESCAPE */\n      ) {\n          this._anchor.nativeElement.focus();\n        }\n    }, this._closed$, this._menu ? [this._menu.nativeElement] : [], this._anchor ? [this._anchor.nativeElement] : [], '.dropdown-item,.dropdown-divider');\n  }\n  /**\n   * Closes the dropdown menu.\n   */\n\n\n  close() {\n    if (this._open) {\n      this._open = false;\n\n      this._resetContainer();\n\n      this._closed$.next();\n\n      this.openChange.emit(false);\n\n      this._changeDetector.markForCheck();\n    }\n  }\n  /**\n   * Toggles the dropdown menu.\n   */\n\n\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  ngOnDestroy() {\n    this._resetContainer();\n\n    this._closed$.next();\n\n    this._zoneSubscription.unsubscribe();\n  }\n\n  onKeyDown(event) {\n    // tslint:disable-next-line:deprecation\n    const key = event.which;\n\n    const itemElements = this._getMenuElements();\n\n    let position = -1;\n    let itemElement = null;\n\n    const isEventFromToggle = this._isEventFromToggle(event);\n\n    if (!isEventFromToggle && itemElements.length) {\n      itemElements.forEach((item, index) => {\n        if (item.contains(event.target)) {\n          itemElement = item;\n        }\n\n        if (item === this._document.activeElement) {\n          position = index;\n        }\n      });\n    } // closing on Enter / Space\n\n\n    if (key === Key.Space || key === Key.Enter) {\n      if (itemElement && (this.autoClose === true || this.autoClose === 'inside')) {\n        // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n        // So we have to register a one-time click handler that will fire after any user defined click handlers\n        // to close the dropdown\n        fromEvent(itemElement, 'click').pipe(take(1)).subscribe(() => this.close());\n      }\n\n      return;\n    }\n\n    if (key === Key.Tab) {\n      if (event.target && this.isOpen() && this.autoClose) {\n        if (this._anchor.nativeElement === event.target) {\n          if (this.container === 'body' && !event.shiftKey) {\n            /* This case is special: user is using [Tab] from the anchor/toggle.\n               User expects the next focusable element in the dropdown menu to get focus.\n               But the menu is not a sibling to anchor/toggle, it is at the end of the body.\n               Trick is to synchronously focus the menu element, and let the [keydown.Tab] go\n               so that browser will focus the proper element (first one focusable in the menu) */\n            this._renderer.setAttribute(this._menu.nativeElement, 'tabindex', '0');\n\n            this._menu.nativeElement.focus();\n\n            this._renderer.removeAttribute(this._menu.nativeElement, 'tabindex');\n          } else if (event.shiftKey) {\n            this.close();\n          }\n\n          return;\n        } else if (this.container === 'body') {\n          const focusableElements = this._menu.nativeElement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);\n\n          if (event.shiftKey && event.target === focusableElements[0]) {\n            this._anchor.nativeElement.focus();\n\n            event.preventDefault();\n          } else if (!event.shiftKey && event.target === focusableElements[focusableElements.length - 1]) {\n            this._anchor.nativeElement.focus();\n\n            this.close();\n          }\n        } else {\n          fromEvent(event.target, 'focusout').pipe(take(1)).subscribe(({\n            relatedTarget\n          }) => {\n            if (!this._elementRef.nativeElement.contains(relatedTarget)) {\n              this.close();\n            }\n          });\n        }\n      }\n\n      return;\n    } // opening / navigating\n\n\n    if (isEventFromToggle || itemElement) {\n      this.open();\n\n      if (itemElements.length) {\n        switch (key) {\n          case Key.ArrowDown:\n            position = Math.min(position + 1, itemElements.length - 1);\n            break;\n\n          case Key.ArrowUp:\n            if (this._isDropup() && position === -1) {\n              position = itemElements.length - 1;\n              break;\n            }\n\n            position = Math.max(position - 1, 0);\n            break;\n\n          case Key.Home:\n            position = 0;\n            break;\n\n          case Key.End:\n            position = itemElements.length - 1;\n            break;\n        }\n\n        itemElements[position].focus();\n      }\n\n      event.preventDefault();\n    }\n  }\n\n  _isDropup() {\n    return this._elementRef.nativeElement.classList.contains('dropup');\n  }\n\n  _isEventFromToggle(event) {\n    return this._anchor.nativeElement.contains(event.target);\n  }\n\n  _getMenuElements() {\n    const menu = this._menu;\n\n    if (menu == null) {\n      return [];\n    }\n\n    return menu.menuItems.filter(item => !item.disabled).map(item => item.elementRef.nativeElement);\n  }\n\n  _positionMenu() {\n    const menu = this._menu;\n\n    if (this.isOpen() && menu) {\n      this._applyPlacementClasses(this.display === 'dynamic' ? positionElements(this._anchor.nativeElement, this._bodyContainer || this._menu.nativeElement, this.placement, this.container === 'body') : this._getFirstPlacement(this.placement));\n    }\n  }\n\n  _getFirstPlacement(placement) {\n    return Array.isArray(placement) ? placement[0] : placement.split(' ')[0];\n  }\n\n  _resetContainer() {\n    const renderer = this._renderer;\n\n    if (this._menu) {\n      const dropdownElement = this._elementRef.nativeElement;\n      const dropdownMenuElement = this._menu.nativeElement;\n      renderer.appendChild(dropdownElement, dropdownMenuElement);\n      renderer.removeStyle(dropdownMenuElement, 'position');\n      renderer.removeStyle(dropdownMenuElement, 'transform');\n    }\n\n    if (this._bodyContainer) {\n      renderer.removeChild(this._document.body, this._bodyContainer);\n      this._bodyContainer = null;\n    }\n  }\n\n  _applyContainer(container = null) {\n    this._resetContainer();\n\n    if (container === 'body') {\n      const renderer = this._renderer;\n      const dropdownMenuElement = this._menu.nativeElement;\n      const bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div'); // Override some styles to have the positionning working\n\n      renderer.setStyle(bodyContainer, 'position', 'absolute');\n      renderer.setStyle(dropdownMenuElement, 'position', 'static');\n      renderer.setStyle(bodyContainer, 'z-index', '1050');\n      renderer.appendChild(bodyContainer, dropdownMenuElement);\n      renderer.appendChild(this._document.body, bodyContainer);\n    }\n  }\n\n  _applyPlacementClasses(placement) {\n    const menu = this._menu;\n\n    if (menu) {\n      if (!placement) {\n        placement = this._getFirstPlacement(this.placement);\n      }\n\n      const renderer = this._renderer;\n      const dropdownElement = this._elementRef.nativeElement; // remove the current placement classes\n\n      renderer.removeClass(dropdownElement, 'dropup');\n      renderer.removeClass(dropdownElement, 'dropdown');\n      menu.placement = this.display === 'static' ? null : placement;\n      /*\n      * apply the new placement\n      * in case of top use up-arrow or down-arrow otherwise\n      */\n\n      const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n      renderer.addClass(dropdownElement, dropdownClass);\n      const bodyContainer = this._bodyContainer;\n\n      if (bodyContainer) {\n        renderer.removeClass(bodyContainer, 'dropup');\n        renderer.removeClass(bodyContainer, 'dropdown');\n        renderer.addClass(bodyContainer, dropdownClass);\n      }\n    }\n  }\n\n}\n\nNgbDropdown.ɵfac = function NgbDropdown_Factory(t) {\n  return new (t || NgbDropdown)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NgbDropdownConfig), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(NgbNavbar, 8));\n};\n\nNgbDropdown.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDropdown,\n  selectors: [[\"\", \"ngbDropdown\", \"\"]],\n  contentQueries: function NgbDropdown_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbDropdownMenu, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbDropdownAnchor, 1);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._menu = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._anchor = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function NgbDropdown_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"show\", ctx.isOpen());\n    }\n  },\n  inputs: {\n    _open: [\"open\", \"_open\"],\n    placement: \"placement\",\n    container: \"container\",\n    autoClose: \"autoClose\",\n    display: \"display\"\n  },\n  outputs: {\n    openChange: \"openChange\"\n  },\n  exportAs: [\"ngbDropdown\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNgbDropdown.ctorParameters = () => [{\n  type: ChangeDetectorRef\n}, {\n  type: NgbDropdownConfig\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: NgZone\n}, {\n  type: ElementRef\n}, {\n  type: Renderer2\n}, {\n  type: NgbNavbar,\n  decorators: [{\n    type: Optional\n  }]\n}];\n\nNgbDropdown.propDecorators = {\n  _menu: [{\n    type: ContentChild,\n    args: [NgbDropdownMenu, {\n      static: false\n    }]\n  }],\n  _anchor: [{\n    type: ContentChild,\n    args: [NgbDropdownAnchor, {\n      static: false\n    }]\n  }],\n  autoClose: [{\n    type: Input\n  }],\n  _open: [{\n    type: Input,\n    args: ['open']\n  }],\n  placement: [{\n    type: Input\n  }],\n  container: [{\n    type: Input\n  }],\n  display: [{\n    type: Input\n  }],\n  openChange: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDropdown, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdown]',\n      exportAs: 'ngbDropdown',\n      host: {\n        '[class.show]': 'isOpen()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: NgbDropdownConfig\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: NgbNavbar,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    _open: [{\n      type: Input,\n      args: ['open']\n    }],\n    openChange: [{\n      type: Output\n    }],\n    placement: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    display: [{\n      type: Input\n    }],\n    _menu: [{\n      type: ContentChild,\n      args: [NgbDropdownMenu, {\n        static: false\n      }]\n    }],\n    _anchor: [{\n      type: ContentChild,\n      args: [NgbDropdownAnchor, {\n        static: false\n      }]\n    }]\n  });\n})();\n\nconst NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar];\n\nclass NgbDropdownModule {}\n\nNgbDropdownModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbDropdownModule\n});\nNgbDropdownModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbDropdownModule_Factory(t) {\n    return new (t || NgbDropdownModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbDropdownModule, {\n    declarations: [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar],\n    exports: [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDropdownModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_DROPDOWN_DIRECTIVES,\n      exports: NGB_DROPDOWN_DIRECTIVES\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n*\n* @since 3.1.0\n*/\n\n\nclass NgbModalConfig {\n  constructor(ngbConfig) {\n    this.backdrop = true;\n    this.keyboard = true;\n    this.animation = ngbConfig.animation;\n  }\n\n}\n\nNgbModalConfig.ɵfac = function NgbModalConfig_Factory(t) {\n  return new (t || NgbModalConfig)(ɵngcc0.ɵɵinject(NgbConfig));\n};\n\nNgbModalConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbModalConfig_Factory() {\n    return new NgbModalConfig(ɵɵinject(NgbConfig));\n  },\n  token: NgbModalConfig,\n  providedIn: \"root\"\n});\n\nNgbModalConfig.ctorParameters = () => [{\n  type: NgbConfig\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbModalConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nclass ContentRef {\n  constructor(nodes, viewRef, componentRef) {\n    this.nodes = nodes;\n    this.viewRef = viewRef;\n    this.componentRef = componentRef;\n  }\n\n}\n\nclass PopupService {\n  constructor(_type, _injector, _viewContainerRef, _renderer, _ngZone, _componentFactoryResolver, _applicationRef) {\n    this._type = _type;\n    this._injector = _injector;\n    this._viewContainerRef = _viewContainerRef;\n    this._renderer = _renderer;\n    this._ngZone = _ngZone;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._applicationRef = _applicationRef;\n    this._windowRef = null;\n    this._contentRef = null;\n  }\n\n  open(content, context, animation = false) {\n    if (!this._windowRef) {\n      this._contentRef = this._getContentRef(content, context);\n      this._windowRef = this._viewContainerRef.createComponent(this._componentFactoryResolver.resolveComponentFactory(this._type), this._viewContainerRef.length, this._injector, this._contentRef.nodes);\n    }\n\n    const {\n      nativeElement\n    } = this._windowRef.location;\n\n    const onStable$ = this._ngZone.onStable.asObservable().pipe(take(1));\n\n    const transition$ = onStable$.pipe(mergeMap(() => ngbRunTransition(nativeElement, ({\n      classList\n    }) => classList.add('show'), {\n      animation,\n      runningTransition: 'continue'\n    })));\n    return {\n      windowRef: this._windowRef,\n      transition$\n    };\n  }\n\n  close(animation = false) {\n    if (!this._windowRef) {\n      return of(undefined);\n    }\n\n    return ngbRunTransition(this._windowRef.location.nativeElement, ({\n      classList\n    }) => classList.remove('show'), {\n      animation,\n      runningTransition: 'stop'\n    }).pipe(tap(() => {\n      var _a;\n\n      if (this._windowRef) {\n        // this is required because of the container='body' option\n        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n\n        this._windowRef = null;\n      }\n\n      if ((_a = this._contentRef) === null || _a === void 0 ? void 0 : _a.viewRef) {\n        this._applicationRef.detachView(this._contentRef.viewRef);\n\n        this._contentRef.viewRef.destroy();\n\n        this._contentRef = null;\n      }\n    }));\n  }\n\n  _getContentRef(content, context) {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const viewRef = content.createEmbeddedView(context);\n\n      this._applicationRef.attachView(viewRef);\n\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else {\n      return new ContentRef([[this._renderer.createText(`${content}`)]]);\n    }\n  }\n\n}\n\nconst noop = () => {};\n\nconst ɵ0$3 = noop;\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to compensate the lack of a vertical scrollbar by adding an\n * equivalent padding on the right of the body, and to remove this compensation.\n */\n\nclass ScrollBar {\n  constructor(_document) {\n    this._document = _document;\n  }\n  /**\n   * To be called right before a potential vertical scrollbar would be removed:\n   *\n   * - if there was a scrollbar, adds some compensation padding to the body\n   * to keep the same layout as when the scrollbar is there\n   * - if there was none, there is nothing to do\n   *\n   * @return a callback used to revert the compensation (noop if there was none,\n   * otherwise a function removing the padding)\n   */\n\n\n  compensate() {\n    const width = this._getWidth();\n\n    return !this._isPresent(width) ? noop : this._adjustBody(width);\n  }\n  /**\n   * Adds a padding of the given width on the right of the body.\n   *\n   * @return a callback used to revert the padding to its previous value\n   */\n\n\n  _adjustBody(scrollbarWidth) {\n    const body = this._document.body;\n    const userSetPaddingStyle = body.style.paddingRight;\n    const actualPadding = parseFloat(window.getComputedStyle(body)['padding-right']);\n    body.style['padding-right'] = `${actualPadding + scrollbarWidth}px`;\n    return () => body.style['padding-right'] = userSetPaddingStyle;\n  }\n  /**\n   * Tells whether a scrollbar is currently present on the body.\n   *\n   * @return true if scrollbar is present, false otherwise\n   */\n\n\n  _isPresent(scrollbarWidth) {\n    const rect = this._document.body.getBoundingClientRect();\n\n    const bodyToViewportGap = window.innerWidth - (rect.left + rect.right);\n    const uncertainty = 0.1 * scrollbarWidth;\n    return bodyToViewportGap >= scrollbarWidth - uncertainty;\n  }\n  /**\n   * Calculates and returns the width of a scrollbar.\n   *\n   * @return the width of a scrollbar on this page\n   */\n\n\n  _getWidth() {\n    const measurer = this._document.createElement('div');\n\n    measurer.className = 'modal-scrollbar-measure';\n    const body = this._document.body;\n    body.appendChild(measurer);\n    const width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n    body.removeChild(measurer);\n    return width;\n  }\n\n}\n\nScrollBar.ɵfac = function ScrollBar_Factory(t) {\n  return new (t || ScrollBar)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nScrollBar.ɵprov = ɵɵdefineInjectable({\n  factory: function ScrollBar_Factory() {\n    return new ScrollBar(ɵɵinject(DOCUMENT));\n  },\n  token: ScrollBar,\n  providedIn: \"root\"\n});\n\nScrollBar.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollBar, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nclass NgbModalBackdrop {\n  constructor(_el, _zone) {\n    this._el = _el;\n    this._zone = _zone;\n  }\n\n  ngOnInit() {\n    this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      ngbRunTransition(this._el.nativeElement, ({\n        classList\n      }) => classList.add('show'), {\n        animation: this.animation,\n        runningTransition: 'continue'\n      });\n    });\n  }\n\n  hide() {\n    return ngbRunTransition(this._el.nativeElement, ({\n      classList\n    }) => classList.remove('show'), {\n      animation: this.animation,\n      runningTransition: 'stop'\n    });\n  }\n\n}\n\nNgbModalBackdrop.ɵfac = function NgbModalBackdrop_Factory(t) {\n  return new (t || NgbModalBackdrop)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nNgbModalBackdrop.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbModalBackdrop,\n  selectors: [[\"ngb-modal-backdrop\"]],\n  hostAttrs: [2, \"z-index\", \"1050\"],\n  hostVars: 6,\n  hostBindings: function NgbModalBackdrop_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(\"modal-backdrop\" + (ctx.backdropClass ? \" \" + ctx.backdropClass : \"\"));\n      ɵngcc0.ɵɵclassProp(\"show\", !ctx.animation)(\"fade\", ctx.animation);\n    }\n  },\n  inputs: {\n    animation: \"animation\",\n    backdropClass: \"backdropClass\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function NgbModalBackdrop_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\nNgbModalBackdrop.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgZone\n}];\n\nNgbModalBackdrop.propDecorators = {\n  animation: [{\n    type: Input\n  }],\n  backdropClass: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbModalBackdrop, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-modal-backdrop',\n      encapsulation: ViewEncapsulation.None,\n      template: '',\n      host: {\n        '[class]': '\"modal-backdrop\" + (backdropClass ? \" \" + backdropClass : \"\")',\n        '[class.show]': '!animation',\n        '[class.fade]': 'animation',\n        'style': 'z-index: 1050'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    animation: [{\n      type: Input\n    }],\n    backdropClass: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.close()` or `.dismiss()` the modal window from your component.\n */\n\n\nclass NgbActiveModal {\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbModalRef.result` promise will be resolved with the provided value.\n   */\n  close(result) {}\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n\n\n  dismiss(reason) {}\n\n}\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\n\n\nclass NgbModalRef {\n  constructor(_windowCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n    this._windowCmptRef = _windowCmptRef;\n    this._contentRef = _contentRef;\n    this._backdropCmptRef = _backdropCmptRef;\n    this._beforeDismiss = _beforeDismiss;\n    this._closed = new Subject();\n    this._dismissed = new Subject();\n    this._hidden = new Subject();\n\n    _windowCmptRef.instance.dismissEvent.subscribe(reason => {\n      this.dismiss(reason);\n    });\n\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n  /**\n   * The instance of a component used for the modal content.\n   *\n   * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n   */\n\n\n  get componentInstance() {\n    if (this._contentRef && this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n  /**\n   * The observable that emits when the modal is closed via the `.close()` method.\n   *\n   * It will emit the result passed to the `.close()` method.\n   *\n   * @since 8.0.0\n   */\n\n\n  get closed() {\n    return this._closed.asObservable().pipe(takeUntil(this._hidden));\n  }\n  /**\n   * The observable that emits when the modal is dismissed via the `.dismiss()` method.\n   *\n   * It will emit the reason passed to the `.dismissed()` method by the user, or one of the internal\n   * reasons like backdrop click or ESC key press.\n   *\n   * @since 8.0.0\n   */\n\n\n  get dismissed() {\n    return this._dismissed.asObservable().pipe(takeUntil(this._hidden));\n  }\n  /**\n   * The observable that emits when both modal window and backdrop are closed and animations were finished.\n   * At this point modal and backdrop elements will be removed from the DOM tree.\n   *\n   * This observable will be completed after emitting.\n   *\n   * @since 8.0.0\n   */\n\n\n  get hidden() {\n    return this._hidden.asObservable();\n  }\n  /**\n   * The observable that emits when modal is fully visible and animation was finished.\n   * Modal DOM element is always available synchronously after calling 'modal.open()' service.\n   *\n   * This observable will be completed after emitting.\n   * It will not emit, if modal is closed before open animation is finished.\n   *\n   * @since 8.0.0\n   */\n\n\n  get shown() {\n    return this._windowCmptRef.instance.shown.asObservable();\n  }\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n\n\n  close(result) {\n    if (this._windowCmptRef) {\n      this._closed.next(result);\n\n      this._resolve(result);\n\n      this._removeModalElements();\n    }\n  }\n\n  _dismiss(reason) {\n    this._dismissed.next(reason);\n\n    this._reject(reason);\n\n    this._removeModalElements();\n  }\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n\n\n  dismiss(reason) {\n    if (this._windowCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n\n        if (dismiss && dismiss.then) {\n          dismiss.then(result => {\n            if (result !== false) {\n              this._dismiss(reason);\n            }\n          }, () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n\n  _removeModalElements() {\n    const windowTransition$ = this._windowCmptRef.instance.hide();\n\n    const backdropTransition$ = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : of(undefined); // hiding window\n\n    windowTransition$.subscribe(() => {\n      const {\n        nativeElement\n      } = this._windowCmptRef.location;\n      nativeElement.parentNode.removeChild(nativeElement);\n\n      this._windowCmptRef.destroy();\n\n      if (this._contentRef && this._contentRef.viewRef) {\n        this._contentRef.viewRef.destroy();\n      }\n\n      this._windowCmptRef = null;\n      this._contentRef = null;\n    }); // hiding backdrop\n\n    backdropTransition$.subscribe(() => {\n      if (this._backdropCmptRef) {\n        const {\n          nativeElement\n        } = this._backdropCmptRef.location;\n        nativeElement.parentNode.removeChild(nativeElement);\n\n        this._backdropCmptRef.destroy();\n\n        this._backdropCmptRef = null;\n      }\n    }); // all done\n\n    zip(windowTransition$, backdropTransition$).subscribe(() => {\n      this._hidden.next();\n\n      this._hidden.complete();\n    });\n  }\n\n}\n\nvar ModalDismissReasons;\n\n(function (ModalDismissReasons) {\n  ModalDismissReasons[ModalDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n  ModalDismissReasons[ModalDismissReasons[\"ESC\"] = 1] = \"ESC\";\n})(ModalDismissReasons || (ModalDismissReasons = {}));\n\nclass NgbModalWindow {\n  constructor(_document, _elRef, _zone) {\n    this._document = _document;\n    this._elRef = _elRef;\n    this._zone = _zone;\n    this._closed$ = new Subject();\n    this._elWithFocus = null; // element that is focused prior to modal opening\n\n    this.backdrop = true;\n    this.keyboard = true;\n    this.dismissEvent = new EventEmitter();\n    this.shown = new Subject();\n    this.hidden = new Subject();\n  }\n\n  dismiss(reason) {\n    this.dismissEvent.emit(reason);\n  }\n\n  ngOnInit() {\n    this._elWithFocus = this._document.activeElement;\n  }\n\n  ngAfterViewInit() {\n    this._show();\n  }\n\n  ngOnDestroy() {\n    this._disableEventHandling();\n  }\n\n  hide() {\n    const {\n      nativeElement\n    } = this._elRef;\n    const context = {\n      animation: this.animation,\n      runningTransition: 'stop'\n    };\n    const windowTransition$ = ngbRunTransition(nativeElement, () => nativeElement.classList.remove('show'), context);\n    const dialogTransition$ = ngbRunTransition(this._dialogEl.nativeElement, () => {}, context);\n    const transitions$ = zip(windowTransition$, dialogTransition$);\n    transitions$.subscribe(() => {\n      this.hidden.next();\n      this.hidden.complete();\n    });\n\n    this._disableEventHandling();\n\n    this._restoreFocus();\n\n    return transitions$;\n  }\n\n  _show() {\n    const {\n      nativeElement\n    } = this._elRef;\n    const context = {\n      animation: this.animation,\n      runningTransition: 'continue'\n    };\n    const windowTransition$ = ngbRunTransition(nativeElement, () => nativeElement.classList.add('show'), context);\n    const dialogTransition$ = ngbRunTransition(this._dialogEl.nativeElement, () => {}, context);\n    zip(windowTransition$, dialogTransition$).subscribe(() => {\n      this.shown.next();\n      this.shown.complete();\n    });\n\n    this._enableEventHandling();\n\n    this._setFocus();\n  }\n\n  _enableEventHandling() {\n    const {\n      nativeElement\n    } = this._elRef;\n\n    this._zone.runOutsideAngular(() => {\n      fromEvent(nativeElement, 'keydown').pipe(takeUntil(this._closed$), // tslint:disable-next-line:deprecation\n      filter(e => e.which === Key.Escape)).subscribe(event => {\n        if (this.keyboard) {\n          requestAnimationFrame(() => {\n            if (!event.defaultPrevented) {\n              this._zone.run(() => this.dismiss(ModalDismissReasons.ESC));\n            }\n          });\n        } else if (this.backdrop === 'static') {\n          this._bumpBackdrop();\n        }\n      }); // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n      // inside the modal dialog and releasing it outside\n\n      let preventClose = false;\n      fromEvent(this._dialogEl.nativeElement, 'mousedown').pipe(takeUntil(this._closed$), tap(() => preventClose = false), switchMap(() => fromEvent(nativeElement, 'mouseup').pipe(takeUntil(this._closed$), take(1))), filter(({\n        target\n      }) => nativeElement === target)).subscribe(() => {\n        preventClose = true;\n      }); // We're listening to 'click' to dismiss modal on modal window click, except when:\n      // 1. clicking on modal dialog itself\n      // 2. closing was prevented by mousedown/up handlers\n      // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n\n      fromEvent(nativeElement, 'click').pipe(takeUntil(this._closed$)).subscribe(({\n        target\n      }) => {\n        if (nativeElement === target) {\n          if (this.backdrop === 'static') {\n            this._bumpBackdrop();\n          } else if (this.backdrop === true && !preventClose) {\n            this._zone.run(() => this.dismiss(ModalDismissReasons.BACKDROP_CLICK));\n          }\n        }\n\n        preventClose = false;\n      });\n    });\n  }\n\n  _disableEventHandling() {\n    this._closed$.next();\n  }\n\n  _setFocus() {\n    const {\n      nativeElement\n    } = this._elRef;\n\n    if (!nativeElement.contains(document.activeElement)) {\n      const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`);\n      const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n      const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n      elementToFocus.focus();\n    }\n  }\n\n  _restoreFocus() {\n    const body = this._document.body;\n    const elWithFocus = this._elWithFocus;\n    let elementToFocus;\n\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n\n    this._zone.runOutsideAngular(() => {\n      setTimeout(() => elementToFocus.focus());\n      this._elWithFocus = null;\n    });\n  }\n\n  _bumpBackdrop() {\n    if (this.backdrop === 'static') {\n      ngbRunTransition(this._elRef.nativeElement, ({\n        classList\n      }) => {\n        classList.add('modal-static');\n        return () => classList.remove('modal-static');\n      }, {\n        animation: this.animation,\n        runningTransition: 'continue'\n      });\n    }\n  }\n\n}\n\nNgbModalWindow.ɵfac = function NgbModalWindow_Factory(t) {\n  return new (t || NgbModalWindow)(ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nNgbModalWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbModalWindow,\n  selectors: [[\"ngb-modal-window\"]],\n  viewQuery: function NgbModalWindow_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c31, 3);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._dialogEl = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"dialog\", \"tabindex\", \"-1\"],\n  hostVars: 7,\n  hostBindings: function NgbModalWindow_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-modal\", true)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-describedby\", ctx.ariaDescribedBy);\n      ɵngcc0.ɵɵclassMap(\"modal d-block\" + (ctx.windowClass ? \" \" + ctx.windowClass : \"\"));\n      ɵngcc0.ɵɵclassProp(\"fade\", ctx.animation);\n    }\n  },\n  inputs: {\n    backdrop: \"backdrop\",\n    keyboard: \"keyboard\",\n    animation: \"animation\",\n    ariaLabelledBy: \"ariaLabelledBy\",\n    ariaDescribedBy: \"ariaDescribedBy\",\n    centered: \"centered\",\n    scrollable: \"scrollable\",\n    size: \"size\",\n    windowClass: \"windowClass\"\n  },\n  outputs: {\n    dismissEvent: \"dismiss\"\n  },\n  ngContentSelectors: _c3,\n  decls: 4,\n  vars: 2,\n  consts: [[\"role\", \"document\"], [\"dialog\", \"\"], [1, \"modal-content\"]],\n  template: function NgbModalWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵprojection(3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(\"modal-dialog\" + (ctx.size ? \" modal-\" + ctx.size : \"\") + (ctx.centered ? \" modal-dialog-centered\" : \"\") + (ctx.scrollable ? \" modal-dialog-scrollable\" : \"\"));\n    }\n  },\n  styles: [\"ngb-modal-window .component-host-scrollable{-ms-flex-direction:column;display:-ms-flexbox;display:flex;flex-direction:column;overflow:hidden}\"],\n  encapsulation: 2\n});\n\nNgbModalWindow.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: ElementRef\n}, {\n  type: NgZone\n}];\n\nNgbModalWindow.propDecorators = {\n  _dialogEl: [{\n    type: ViewChild,\n    args: ['dialog', {\n      static: true\n    }]\n  }],\n  animation: [{\n    type: Input\n  }],\n  ariaLabelledBy: [{\n    type: Input\n  }],\n  ariaDescribedBy: [{\n    type: Input\n  }],\n  backdrop: [{\n    type: Input\n  }],\n  centered: [{\n    type: Input\n  }],\n  keyboard: [{\n    type: Input\n  }],\n  scrollable: [{\n    type: Input\n  }],\n  size: [{\n    type: Input\n  }],\n  windowClass: [{\n    type: Input\n  }],\n  dismissEvent: [{\n    type: Output,\n    args: ['dismiss']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbModalWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-modal-window',\n      host: {\n        '[class]': '\"modal d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n        '[class.fade]': 'animation',\n        'role': 'dialog',\n        'tabindex': '-1',\n        '[attr.aria-modal]': 'true',\n        '[attr.aria-labelledby]': 'ariaLabelledBy',\n        '[attr.aria-describedby]': 'ariaDescribedBy'\n      },\n      template: `\n    <div #dialog [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '') +\n     (scrollable ? ' modal-dialog-scrollable' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\"ngb-modal-window .component-host-scrollable{-ms-flex-direction:column;display:-ms-flexbox;display:flex;flex-direction:column;overflow:hidden}\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    backdrop: [{\n      type: Input\n    }],\n    keyboard: [{\n      type: Input\n    }],\n    dismissEvent: [{\n      type: Output,\n      args: ['dismiss']\n    }],\n    _dialogEl: [{\n      type: ViewChild,\n      args: ['dialog', {\n        static: true\n      }]\n    }],\n    animation: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    ariaDescribedBy: [{\n      type: Input\n    }],\n    centered: [{\n      type: Input\n    }],\n    scrollable: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    windowClass: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgbModalStack {\n  constructor(_applicationRef, _injector, _document, _scrollBar, _rendererFactory, _ngZone) {\n    this._applicationRef = _applicationRef;\n    this._injector = _injector;\n    this._document = _document;\n    this._scrollBar = _scrollBar;\n    this._rendererFactory = _rendererFactory;\n    this._ngZone = _ngZone;\n    this._activeWindowCmptHasChanged = new Subject();\n    this._ariaHiddenValues = new Map();\n    this._backdropAttributes = ['animation', 'backdropClass'];\n    this._modalRefs = [];\n    this._windowAttributes = ['animation', 'ariaLabelledBy', 'ariaDescribedBy', 'backdrop', 'centered', 'keyboard', 'scrollable', 'size', 'windowClass'];\n    this._windowCmpts = [];\n    this._activeInstances = new EventEmitter(); // Trap focus on active WindowCmpt\n\n    this._activeWindowCmptHasChanged.subscribe(() => {\n      if (this._windowCmpts.length) {\n        const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n        ngbFocusTrap(this._ngZone, activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n\n        this._revertAriaHidden();\n\n        this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n      }\n    });\n  }\n\n  open(moduleCFR, contentInjector, content, options) {\n    const containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n\n    const renderer = this._rendererFactory.createRenderer(null, null);\n\n    const revertPaddingForScrollBar = this._scrollBar.compensate();\n\n    const removeBodyClass = () => {\n      if (!this._modalRefs.length) {\n        renderer.removeClass(this._document.body, 'modal-open');\n\n        this._revertAriaHidden();\n      }\n    };\n\n    if (!containerEl) {\n      throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n    }\n\n    const activeModal = new NgbActiveModal();\n\n    const contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal, options);\n\n    let backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : undefined;\n\n    let windowCmptRef = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n\n    let ngbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n    this._registerModalRef(ngbModalRef);\n\n    this._registerWindowCmpt(windowCmptRef);\n\n    ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n    ngbModalRef.result.then(removeBodyClass, removeBodyClass);\n\n    activeModal.close = result => {\n      ngbModalRef.close(result);\n    };\n\n    activeModal.dismiss = reason => {\n      ngbModalRef.dismiss(reason);\n    };\n\n    this._applyWindowOptions(windowCmptRef.instance, options);\n\n    if (this._modalRefs.length === 1) {\n      renderer.addClass(this._document.body, 'modal-open');\n    }\n\n    if (backdropCmptRef && backdropCmptRef.instance) {\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\n    }\n\n    return ngbModalRef;\n  }\n\n  get activeInstances() {\n    return this._activeInstances;\n  }\n\n  dismissAll(reason) {\n    this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason));\n  }\n\n  hasOpenModals() {\n    return this._modalRefs.length > 0;\n  }\n\n  _attachBackdrop(moduleCFR, containerEl) {\n    let backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n    let backdropCmptRef = backdropFactory.create(this._injector);\n\n    this._applicationRef.attachView(backdropCmptRef.hostView);\n\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    return backdropCmptRef;\n  }\n\n  _attachWindowComponent(moduleCFR, containerEl, contentRef) {\n    let windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n    let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n\n    this._applicationRef.attachView(windowCmptRef.hostView);\n\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\n    return windowCmptRef;\n  }\n\n  _applyWindowOptions(windowInstance, options) {\n    this._windowAttributes.forEach(optionName => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  _applyBackdropOptions(backdropInstance, options) {\n    this._backdropAttributes.forEach(optionName => {\n      if (isDefined(options[optionName])) {\n        backdropInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  _getContentRef(moduleCFR, contentInjector, content, activeModal, options) {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      return this._createFromTemplateRef(content, activeModal);\n    } else if (isString(content)) {\n      return this._createFromString(content);\n    } else {\n      return this._createFromComponent(moduleCFR, contentInjector, content, activeModal, options);\n    }\n  }\n\n  _createFromTemplateRef(content, activeModal) {\n    const context = {\n      $implicit: activeModal,\n\n      close(result) {\n        activeModal.close(result);\n      },\n\n      dismiss(reason) {\n        activeModal.dismiss(reason);\n      }\n\n    };\n    const viewRef = content.createEmbeddedView(context);\n\n    this._applicationRef.attachView(viewRef);\n\n    return new ContentRef([viewRef.rootNodes], viewRef);\n  }\n\n  _createFromString(content) {\n    const component = this._document.createTextNode(`${content}`);\n\n    return new ContentRef([[component]]);\n  }\n\n  _createFromComponent(moduleCFR, contentInjector, content, context, options) {\n    const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n    const modalContentInjector = Injector.create({\n      providers: [{\n        provide: NgbActiveModal,\n        useValue: context\n      }],\n      parent: contentInjector\n    });\n    const componentRef = contentCmptFactory.create(modalContentInjector);\n    const componentNativeEl = componentRef.location.nativeElement;\n\n    if (options.scrollable) {\n      componentNativeEl.classList.add('component-host-scrollable');\n    }\n\n    this._applicationRef.attachView(componentRef.hostView); // FIXME: we should here get rid of the component nativeElement\n    // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n\n\n    return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n  }\n\n  _setAriaHidden(element) {\n    const parent = element.parentElement;\n\n    if (parent && element !== this._document.body) {\n      Array.from(parent.children).forEach(sibling => {\n        if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n          this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      });\n\n      this._setAriaHidden(parent);\n    }\n  }\n\n  _revertAriaHidden() {\n    this._ariaHiddenValues.forEach((value, element) => {\n      if (value) {\n        element.setAttribute('aria-hidden', value);\n      } else {\n        element.removeAttribute('aria-hidden');\n      }\n    });\n\n    this._ariaHiddenValues.clear();\n  }\n\n  _registerModalRef(ngbModalRef) {\n    const unregisterModalRef = () => {\n      const index = this._modalRefs.indexOf(ngbModalRef);\n\n      if (index > -1) {\n        this._modalRefs.splice(index, 1);\n\n        this._activeInstances.emit(this._modalRefs);\n      }\n    };\n\n    this._modalRefs.push(ngbModalRef);\n\n    this._activeInstances.emit(this._modalRefs);\n\n    ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n  }\n\n  _registerWindowCmpt(ngbWindowCmpt) {\n    this._windowCmpts.push(ngbWindowCmpt);\n\n    this._activeWindowCmptHasChanged.next();\n\n    ngbWindowCmpt.onDestroy(() => {\n      const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n\n      if (index > -1) {\n        this._windowCmpts.splice(index, 1);\n\n        this._activeWindowCmptHasChanged.next();\n      }\n    });\n  }\n\n}\n\nNgbModalStack.ɵfac = function NgbModalStack_Factory(t) {\n  return new (t || NgbModalStack)(ɵngcc0.ɵɵinject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ScrollBar), ɵngcc0.ɵɵinject(ɵngcc0.RendererFactory2), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nNgbModalStack.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbModalStack_Factory() {\n    return new NgbModalStack(ɵɵinject(ApplicationRef), ɵɵinject(INJECTOR), ɵɵinject(DOCUMENT), ɵɵinject(ScrollBar), ɵɵinject(RendererFactory2), ɵɵinject(NgZone));\n  },\n  token: NgbModalStack,\n  providedIn: \"root\"\n});\n\nNgbModalStack.ctorParameters = () => [{\n  type: ApplicationRef\n}, {\n  type: Injector\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: ScrollBar\n}, {\n  type: RendererFactory2\n}, {\n  type: NgZone\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbModalStack, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ApplicationRef\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ScrollBar\n    }, {\n      type: ɵngcc0.RendererFactory2\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\n\n\nclass NgbModal {\n  constructor(_moduleCFR, _injector, _modalStack, _config) {\n    this._moduleCFR = _moduleCFR;\n    this._injector = _injector;\n    this._modalStack = _modalStack;\n    this._config = _config;\n  }\n  /**\n   * Opens a new modal window with the specified content and supplied options.\n   *\n   * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n   * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n   * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n   *\n   * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n   */\n\n\n  open(content, options = {}) {\n    const combinedOptions = Object.assign({}, this._config, options);\n    return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n  }\n  /**\n   * Returns an observable that holds the active modal instances.\n   */\n\n\n  get activeInstances() {\n    return this._modalStack.activeInstances;\n  }\n  /**\n   * Dismisses all currently displayed modal windows with the supplied reason.\n   *\n   * @since 3.1.0\n   */\n\n\n  dismissAll(reason) {\n    this._modalStack.dismissAll(reason);\n  }\n  /**\n   * Indicates if there are currently any open modal windows in the application.\n   *\n   * @since 3.3.0\n   */\n\n\n  hasOpenModals() {\n    return this._modalStack.hasOpenModals();\n  }\n\n}\n\nNgbModal.ɵfac = function NgbModal_Factory(t) {\n  return new (t || NgbModal)(ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(NgbModalStack), ɵngcc0.ɵɵinject(NgbModalConfig));\n};\n\nNgbModal.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbModal_Factory() {\n    return new NgbModal(ɵɵinject(ComponentFactoryResolver), ɵɵinject(INJECTOR), ɵɵinject(NgbModalStack), ɵɵinject(NgbModalConfig));\n  },\n  token: NgbModal,\n  providedIn: \"root\"\n});\n\nNgbModal.ctorParameters = () => [{\n  type: ComponentFactoryResolver\n}, {\n  type: Injector\n}, {\n  type: NgbModalStack\n}, {\n  type: NgbModalConfig\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbModal, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: NgbModalStack\n    }, {\n      type: NgbModalConfig\n    }];\n  }, null);\n})();\n\nclass NgbModalModule {}\n\nNgbModalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbModalModule\n});\nNgbModalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbModalModule_Factory(t) {\n    return new (t || NgbModalModule)();\n  },\n  providers: [NgbModal]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbModalModule, {\n    declarations: [NgbModalBackdrop, NgbModalWindow]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbModalModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbModalBackdrop, NgbModalWindow],\n      entryComponents: [NgbModalBackdrop, NgbModalWindow],\n      providers: [NgbModal]\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the navs used in the application.\n *\n * @since 5.2.0\n */\n\n\nclass NgbNavConfig {\n  constructor(ngbConfig) {\n    this.destroyOnHide = true;\n    this.orientation = 'horizontal';\n    this.roles = 'tablist';\n    this.keyboard = false;\n    this.animation = ngbConfig.animation;\n  }\n\n}\n\nNgbNavConfig.ɵfac = function NgbNavConfig_Factory(t) {\n  return new (t || NgbNavConfig)(ɵngcc0.ɵɵinject(NgbConfig));\n};\n\nNgbNavConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbNavConfig_Factory() {\n    return new NgbNavConfig(ɵɵinject(NgbConfig));\n  },\n  token: NgbNavConfig,\n  providedIn: \"root\"\n});\n\nNgbNavConfig.ctorParameters = () => [{\n  type: NgbConfig\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbNavConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nconst isValidNavId = id => isDefined(id) && id !== '';\n\nconst ɵ0$4 = isValidNavId;\nlet navCounter = 0;\n/**\n * This directive must be used to wrap content to be displayed in the nav.\n *\n * @since 5.2.0\n */\n\nclass NgbNavContent {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbNavContent.ɵfac = function NgbNavContent_Factory(t) {\n  return new (t || NgbNavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbNavContent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNavContent,\n  selectors: [[\"ng-template\", \"ngbNavContent\", \"\"]]\n});\n\nNgbNavContent.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbNavContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbNavContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\n *\n * @since 5.2.0\n */\n\n\nclass NgbNavItem {\n  constructor(nav, elementRef) {\n    this.elementRef = elementRef;\n    /**\n     * If `true`, the current nav item is disabled and can't be toggled by user.\n     *\n     * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\n     */\n\n    this.disabled = false;\n    /**\n     * An event emitted when the fade in transition is finished on the related nav content\n     *\n     * @since 8.0.0\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the fade out transition is finished on the related nav content\n     *\n     * @since 8.0.0\n     */\n\n    this.hidden = new EventEmitter(); // TODO: cf https://github.com/angular/angular/issues/30106\n\n    this._nav = nav;\n  }\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.contentTpl = this.contentTpls.first;\n  }\n\n  ngOnInit() {\n    if (!isDefined(this.domId)) {\n      this.domId = `ngb-nav-${navCounter++}`;\n    }\n  }\n\n  get active() {\n    return this._nav.activeId === this.id;\n  }\n\n  get id() {\n    return isValidNavId(this._id) ? this._id : this.domId;\n  }\n\n  get panelDomId() {\n    return `${this.domId}-panel`;\n  }\n\n  isPanelInDom() {\n    return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n  }\n\n}\n\nNgbNavItem.ɵfac = function NgbNavItem_Factory(t) {\n  return new (t || NgbNavItem)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgbNav)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbNavItem.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNavItem,\n  selectors: [[\"\", \"ngbNavItem\", \"\"]],\n  contentQueries: function NgbNavItem_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbNavContent, 0);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTpls = _t);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function NgbNavItem_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"nav-item\", true);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    domId: \"domId\",\n    destroyOnHide: \"destroyOnHide\",\n    _id: [\"ngbNavItem\", \"_id\"]\n  },\n  outputs: {\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbNavItem\"]\n});\n\nNgbNavItem.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [forwardRef(() => NgbNav)]\n  }]\n}, {\n  type: ElementRef\n}];\n\nNgbNavItem.propDecorators = {\n  destroyOnHide: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  domId: [{\n    type: Input\n  }],\n  _id: [{\n    type: Input,\n    args: ['ngbNavItem']\n  }],\n  shown: [{\n    type: Output\n  }],\n  hidden: [{\n    type: Output\n  }],\n  contentTpls: [{\n    type: ContentChildren,\n    args: [NgbNavContent, {\n      descendants: false\n    }]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbNavItem, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbNavItem]',\n      exportAs: 'ngbNavItem',\n      host: {\n        '[class.nav-item]': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => NgbNav)]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    domId: [{\n      type: Input\n    }],\n    destroyOnHide: [{\n      type: Input\n    }],\n    _id: [{\n      type: Input,\n      args: ['ngbNavItem']\n    }],\n    contentTpls: [{\n      type: ContentChildren,\n      args: [NgbNavContent, {\n        descendants: false\n      }]\n    }]\n  });\n})();\n/**\n * A nav directive that helps with implementing tabbed navigation components.\n *\n * @since 5.2.0\n */\n\n\nclass NgbNav {\n  constructor(role, config, _cd, _document) {\n    this.role = role;\n    this._cd = _cd;\n    this._document = _document;\n    /**\n     * The event emitted after the active nav changes\n     * The payload of the event is the newly active nav id\n     *\n     * If you want to prevent nav change, you should use `(navChange)` event\n     */\n\n    this.activeIdChange = new EventEmitter();\n    /**\n     * An event emitted when the fade in transition is finished for one of the items.\n     *\n     * Payload of the event is the nav id that was just shown.\n     *\n     * @since 8.0.0\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the fade out transition is finished for one of the items.\n     *\n     * Payload of the event is the nav id that was just hidden.\n     *\n     * @since 8.0.0\n     */\n\n    this.hidden = new EventEmitter();\n    this.navItemChange$ = new Subject();\n    /**\n     * The nav change event emitted right before the nav change happens on user click.\n     *\n     * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n     *\n     * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\n     */\n\n    this.navChange = new EventEmitter();\n    this.animation = config.animation;\n    this.destroyOnHide = config.destroyOnHide;\n    this.orientation = config.orientation;\n    this.roles = config.roles;\n    this.keyboard = config.keyboard;\n  }\n\n  click(item) {\n    if (!item.disabled) {\n      this._updateActiveId(item.id);\n    }\n  }\n\n  onKeyDown(event) {\n    if (this.roles !== 'tablist' || !this.keyboard) {\n      return;\n    } // tslint:disable-next-line: deprecation\n\n\n    const key = event.which;\n    const enabledLinks = this.links.filter(link => !link.navItem.disabled);\n    const {\n      length\n    } = enabledLinks;\n    let position = -1;\n    enabledLinks.forEach((link, index) => {\n      if (link.elRef.nativeElement === this._document.activeElement) {\n        position = index;\n      }\n    });\n\n    if (length) {\n      switch (key) {\n        case Key.ArrowLeft:\n          if (this.orientation === 'vertical') {\n            return;\n          }\n\n          position = (position - 1 + length) % length;\n          break;\n\n        case Key.ArrowRight:\n          if (this.orientation === 'vertical') {\n            return;\n          }\n\n          position = (position + 1) % length;\n          break;\n\n        case Key.ArrowDown:\n          if (this.orientation === 'horizontal') {\n            return;\n          }\n\n          position = (position + 1) % length;\n          break;\n\n        case Key.ArrowUp:\n          if (this.orientation === 'horizontal') {\n            return;\n          }\n\n          position = (position - 1 + length) % length;\n          break;\n\n        case Key.Home:\n          position = 0;\n          break;\n\n        case Key.End:\n          position = length - 1;\n          break;\n      }\n\n      if (this.keyboard === 'changeWithArrows') {\n        this.select(enabledLinks[position].navItem.id);\n      }\n\n      enabledLinks[position].elRef.nativeElement.focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * Selects the nav with the given id and shows its associated pane.\n   * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n   */\n\n\n  select(id) {\n    this._updateActiveId(id, false);\n  }\n\n  ngAfterContentInit() {\n    if (!isDefined(this.activeId)) {\n      const nextId = this.items.first ? this.items.first.id : null;\n\n      if (isValidNavId(nextId)) {\n        this._updateActiveId(nextId, false);\n\n        this._cd.detectChanges();\n      }\n    }\n  }\n\n  ngOnChanges({\n    activeId\n  }) {\n    if (activeId && !activeId.firstChange) {\n      this._notifyItemChanged(activeId.currentValue);\n    }\n  }\n\n  _updateActiveId(nextId, emitNavChange = true) {\n    if (this.activeId !== nextId) {\n      let defaultPrevented = false;\n\n      if (emitNavChange) {\n        this.navChange.emit({\n          activeId: this.activeId,\n          nextId,\n          preventDefault: () => {\n            defaultPrevented = true;\n          }\n        });\n      }\n\n      if (!defaultPrevented) {\n        this.activeId = nextId;\n        this.activeIdChange.emit(nextId);\n\n        this._notifyItemChanged(nextId);\n      }\n    }\n  }\n\n  _notifyItemChanged(nextItemId) {\n    this.navItemChange$.next(this._getItemById(nextItemId));\n  }\n\n  _getItemById(itemId) {\n    return this.items && this.items.find(item => item.id === itemId) || null;\n  }\n\n}\n\nNgbNav.ɵfac = function NgbNav_Factory(t) {\n  return new (t || NgbNav)(ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(NgbNavConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nNgbNav.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNav,\n  selectors: [[\"\", \"ngbNav\", \"\"]],\n  contentQueries: function NgbNav_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbNavItem, 0);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbNavLink, 1);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.links = _t);\n    }\n  },\n  hostVars: 6,\n  hostBindings: function NgbNav_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keydown.arrowLeft\", function NgbNav_keydown_arrowLeft_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      })(\"keydown.arrowRight\", function NgbNav_keydown_arrowRight_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      })(\"keydown.arrowDown\", function NgbNav_keydown_arrowDown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      })(\"keydown.arrowUp\", function NgbNav_keydown_arrowUp_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      })(\"keydown.Home\", function NgbNav_keydown_Home_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      })(\"keydown.End\", function NgbNav_keydown_End_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.orientation === \"vertical\" && ctx.roles === \"tablist\" ? \"vertical\" : undefined)(\"role\", ctx.role ? ctx.role : ctx.roles ? \"tablist\" : undefined);\n      ɵngcc0.ɵɵclassProp(\"nav\", true)(\"flex-column\", ctx.orientation === \"vertical\");\n    }\n  },\n  inputs: {\n    animation: \"animation\",\n    destroyOnHide: \"destroyOnHide\",\n    orientation: \"orientation\",\n    roles: \"roles\",\n    keyboard: \"keyboard\",\n    activeId: \"activeId\"\n  },\n  outputs: {\n    activeIdChange: \"activeIdChange\",\n    shown: \"shown\",\n    hidden: \"hidden\",\n    navChange: \"navChange\"\n  },\n  exportAs: [\"ngbNav\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNgbNav.ctorParameters = () => [{\n  type: String,\n  decorators: [{\n    type: Attribute,\n    args: ['role']\n  }]\n}, {\n  type: NgbNavConfig\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n\nNgbNav.propDecorators = {\n  activeId: [{\n    type: Input\n  }],\n  activeIdChange: [{\n    type: Output\n  }],\n  animation: [{\n    type: Input\n  }],\n  destroyOnHide: [{\n    type: Input\n  }],\n  orientation: [{\n    type: Input\n  }],\n  roles: [{\n    type: Input\n  }],\n  keyboard: [{\n    type: Input\n  }],\n  shown: [{\n    type: Output\n  }],\n  hidden: [{\n    type: Output\n  }],\n  items: [{\n    type: ContentChildren,\n    args: [NgbNavItem]\n  }],\n  links: [{\n    type: ContentChildren,\n    args: [forwardRef(() => NgbNavLink), {\n      descendants: true\n    }]\n  }],\n  navChange: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbNav, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbNav]',\n      exportAs: 'ngbNav',\n      host: {\n        '[class.nav]': 'true',\n        '[class.flex-column]': `orientation === 'vertical'`,\n        '[attr.aria-orientation]': `orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined`,\n        '[attr.role]': `role ? role : roles ? 'tablist' : undefined`,\n        '(keydown.arrowLeft)': 'onKeyDown($event)',\n        '(keydown.arrowRight)': 'onKeyDown($event)',\n        '(keydown.arrowDown)': 'onKeyDown($event)',\n        '(keydown.arrowUp)': 'onKeyDown($event)',\n        '(keydown.Home)': 'onKeyDown($event)',\n        '(keydown.End)': 'onKeyDown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['role']\n      }]\n    }, {\n      type: NgbNavConfig\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    activeIdChange: [{\n      type: Output\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    navChange: [{\n      type: Output\n    }],\n    animation: [{\n      type: Input\n    }],\n    destroyOnHide: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    roles: [{\n      type: Input\n    }],\n    keyboard: [{\n      type: Input\n    }],\n    activeId: [{\n      type: Input\n    }],\n    items: [{\n      type: ContentChildren,\n      args: [NgbNavItem]\n    }],\n    links: [{\n      type: ContentChildren,\n      args: [forwardRef(() => NgbNavLink), {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * A directive to put on the nav link.\n *\n * @since 5.2.0\n */\n\n\nclass NgbNavLink {\n  constructor(role, navItem, nav, elRef) {\n    this.role = role;\n    this.navItem = navItem;\n    this.nav = nav;\n    this.elRef = elRef;\n  }\n\n  hasNavItemClass() {\n    // with alternative markup we have to add `.nav-item` class, because `ngbNavItem` is on the ng-container\n    return this.navItem.elementRef.nativeElement.nodeType === Node.COMMENT_NODE;\n  }\n\n}\n\nNgbNavLink.ɵfac = function NgbNavLink_Factory(t) {\n  return new (t || NgbNavLink)(ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(NgbNavItem), ɵngcc0.ɵɵdirectiveInject(NgbNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbNavLink.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNavLink,\n  selectors: [[\"a\", \"ngbNavLink\", \"\"]],\n  hostAttrs: [\"href\", \"\"],\n  hostVars: 14,\n  hostBindings: function NgbNavLink_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function NgbNavLink_click_HostBindingHandler($event) {\n        ctx.nav.click(ctx.navItem);\n        return $event.preventDefault();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.navItem.domId);\n      ɵngcc0.ɵɵattribute(\"role\", ctx.role ? ctx.role : ctx.nav.roles ? \"tab\" : undefined)(\"tabindex\", ctx.navItem.disabled ? -1 : undefined)(\"aria-controls\", ctx.navItem.isPanelInDom() ? ctx.navItem.panelDomId : null)(\"aria-selected\", ctx.navItem.active)(\"aria-disabled\", ctx.navItem.disabled);\n      ɵngcc0.ɵɵclassProp(\"nav-link\", true)(\"nav-item\", ctx.hasNavItemClass())(\"active\", ctx.navItem.active)(\"disabled\", ctx.navItem.disabled);\n    }\n  }\n});\n\nNgbNavLink.ctorParameters = () => [{\n  type: String,\n  decorators: [{\n    type: Attribute,\n    args: ['role']\n  }]\n}, {\n  type: NgbNavItem\n}, {\n  type: NgbNav\n}, {\n  type: ElementRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbNavLink, [{\n    type: Directive,\n    args: [{\n      selector: 'a[ngbNavLink]',\n      host: {\n        '[id]': 'navItem.domId',\n        '[class.nav-link]': 'true',\n        '[class.nav-item]': 'hasNavItemClass()',\n        '[attr.role]': `role ? role : nav.roles ? 'tab' : undefined`,\n        'href': '',\n        '[class.active]': 'navItem.active',\n        '[class.disabled]': 'navItem.disabled',\n        '[attr.tabindex]': 'navItem.disabled ? -1 : undefined',\n        '[attr.aria-controls]': 'navItem.isPanelInDom() ? navItem.panelDomId : null',\n        '[attr.aria-selected]': 'navItem.active',\n        '[attr.aria-disabled]': 'navItem.disabled',\n        '(click)': 'nav.click(navItem); $event.preventDefault()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['role']\n      }]\n    }, {\n      type: NgbNavItem\n    }, {\n      type: NgbNav\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n\nconst ngbNavFadeOutTransition = ({\n  classList\n}) => {\n  classList.remove('show');\n  return () => classList.remove('active');\n};\n\nconst ngbNavFadeInTransition = element => {\n  element.classList.add('active');\n  reflow(element);\n  element.classList.add('show');\n};\n\nconst ngbNavFadeInNoReflowTransition = element => {\n  element.classList.add('active');\n  element.classList.add('show');\n};\n\nclass NgbNavPane {\n  constructor(elRef) {\n    this.elRef = elRef;\n  }\n\n}\n\nNgbNavPane.ɵfac = function NgbNavPane_Factory(t) {\n  return new (t || NgbNavPane)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbNavPane.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNavPane,\n  selectors: [[\"\", \"ngbNavPane\", \"\"]],\n  hostAttrs: [1, \"tab-pane\"],\n  hostVars: 5,\n  hostBindings: function NgbNavPane_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.item.panelDomId);\n      ɵngcc0.ɵɵattribute(\"role\", ctx.role ? ctx.role : ctx.nav.roles ? \"tabpanel\" : undefined)(\"aria-labelledby\", ctx.item.domId);\n      ɵngcc0.ɵɵclassProp(\"fade\", ctx.nav.animation);\n    }\n  },\n  inputs: {\n    item: \"item\",\n    nav: \"nav\",\n    role: \"role\"\n  }\n});\n\nNgbNavPane.ctorParameters = () => [{\n  type: ElementRef\n}];\n\nNgbNavPane.propDecorators = {\n  item: [{\n    type: Input\n  }],\n  nav: [{\n    type: Input\n  }],\n  role: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbNavPane, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbNavPane]',\n      host: {\n        '[id]': 'item.panelDomId',\n        'class': 'tab-pane',\n        '[class.fade]': 'nav.animation',\n        '[attr.role]': 'role ? role : nav.roles ? \"tabpanel\" : undefined',\n        '[attr.aria-labelledby]': 'item.domId'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    item: [{\n      type: Input\n    }],\n    nav: [{\n      type: Input\n    }],\n    role: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * The outlet where currently active nav content will be displayed.\n *\n * @since 5.2.0\n */\n\n\nclass NgbNavOutlet {\n  constructor(_cd) {\n    this._cd = _cd;\n    this._activePane = null;\n  }\n\n  isPanelTransitioning(item) {\n    var _a;\n\n    return ((_a = this._activePane) === null || _a === void 0 ? void 0 : _a.item) === item;\n  }\n\n  ngAfterViewInit() {\n    var _a, _b, _c; // initial display\n\n\n    this._activePane = this._getActivePane();\n    (_a = this._activePane) === null || _a === void 0 ? void 0 : _a.elRef.nativeElement.classList.add('show');\n    (_b = this._activePane) === null || _b === void 0 ? void 0 : _b.elRef.nativeElement.classList.add('active'); // this will be emitted for all 3 types of nav changes: .select(), [activeId] or (click)\n\n    this.nav.navItemChange$.pipe(startWith(((_c = this._activePane) === null || _c === void 0 ? void 0 : _c.item) || null), distinctUntilChanged(), skip(1)).subscribe(nextItem => {\n      const options = {\n        animation: this.nav.animation,\n        runningTransition: 'stop'\n      }; // fading out\n\n      if (this._activePane) {\n        ngbRunTransition(this._activePane.elRef.nativeElement, ngbNavFadeOutTransition, options).subscribe(() => {\n          var _a;\n\n          const activeItem = (_a = this._activePane) === null || _a === void 0 ? void 0 : _a.item; // next panel we're switching to will only appear in DOM after the change detection is done\n          // and `this._panes` will be updated\n\n          this._cd.detectChanges();\n\n          this._activePane = this._getPaneForItem(nextItem); // fading in\n\n          if (this._activePane) {\n            const fadeInTransition = this.nav.animation ? ngbNavFadeInTransition : ngbNavFadeInNoReflowTransition;\n            ngbRunTransition(this._activePane.elRef.nativeElement, fadeInTransition, options).subscribe(() => {\n              if (nextItem) {\n                nextItem.shown.emit();\n                this.nav.shown.emit(nextItem.id);\n              }\n            });\n          }\n\n          if (activeItem) {\n            activeItem.hidden.emit();\n            this.nav.hidden.emit(activeItem.id);\n          }\n        });\n      }\n    });\n  }\n\n  _getPaneForItem(item) {\n    return this._panes && this._panes.find(pane => pane.item === item) || null;\n  }\n\n  _getActivePane() {\n    return this._panes && this._panes.find(pane => pane.item.active) || null;\n  }\n\n}\n\nNgbNavOutlet.ɵfac = function NgbNavOutlet_Factory(t) {\n  return new (t || NgbNavOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNgbNavOutlet.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbNavOutlet,\n  selectors: [[\"\", \"ngbNavOutlet\", \"\"]],\n  viewQuery: function NgbNavOutlet_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(NgbNavPane, 1);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._panes = _t);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function NgbNavOutlet_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"tab-content\", true);\n    }\n  },\n  inputs: {\n    paneRole: \"paneRole\",\n    nav: [\"ngbNavOutlet\", \"nav\"]\n  },\n  attrs: _c32,\n  decls: 1,\n  vars: 1,\n  consts: [[\"ngFor\", \"\", 3, \"ngForOf\"], [\"ngbNavPane\", \"\", 3, \"item\", \"nav\", \"role\", 4, \"ngIf\"], [\"ngbNavPane\", \"\", 3, \"item\", \"nav\", \"role\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbNavOutlet_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbNavOutlet_ng_template_0_Template, 1, 1, \"ng-template\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.nav.items);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf, NgbNavPane, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2\n});\n\nNgbNavOutlet.ctorParameters = () => [{\n  type: ChangeDetectorRef\n}];\n\nNgbNavOutlet.propDecorators = {\n  _panes: [{\n    type: ViewChildren,\n    args: [NgbNavPane]\n  }],\n  paneRole: [{\n    type: Input\n  }],\n  nav: [{\n    type: Input,\n    args: ['ngbNavOutlet']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbNavOutlet, [{\n    type: Component,\n    args: [{\n      selector: '[ngbNavOutlet]',\n      host: {\n        '[class.tab-content]': 'true'\n      },\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <ng-template ngFor let-item [ngForOf]=\"nav.items\">\n      <div ngbNavPane *ngIf=\"item.isPanelInDom() || isPanelTransitioning(item)\" [item]=\"item\" [nav]=\"nav\" [role]=\"paneRole\">\n        <ng-template [ngTemplateOutlet]=\"item.contentTpl?.templateRef || null\"\n                     [ngTemplateOutletContext]=\"{$implicit: item.active || isPanelTransitioning(item)}\"></ng-template>\n      </div>\n    </ng-template>\n  `\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    _panes: [{\n      type: ViewChildren,\n      args: [NgbNavPane]\n    }],\n    paneRole: [{\n      type: Input\n    }],\n    nav: [{\n      type: Input,\n      args: ['ngbNavOutlet']\n    }]\n  });\n})();\n\nconst NGB_NAV_DIRECTIVES = [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet, NgbNavPane];\n\nclass NgbNavModule {}\n\nNgbNavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbNavModule\n});\nNgbNavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbNavModule_Factory(t) {\n    return new (t || NgbNavModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbNavModule, {\n    declarations: function () {\n      return [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet, NgbNavPane];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet, NgbNavPane];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbNavModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_NAV_DIRECTIVES,\n      exports: NGB_NAV_DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\n\n\nclass NgbPaginationConfig {\n  constructor() {\n    this.disabled = false;\n    this.boundaryLinks = false;\n    this.directionLinks = true;\n    this.ellipses = true;\n    this.maxSize = 0;\n    this.pageSize = 10;\n    this.rotate = false;\n  }\n\n}\n\nNgbPaginationConfig.ɵfac = function NgbPaginationConfig_Factory(t) {\n  return new (t || NgbPaginationConfig)();\n};\n\nNgbPaginationConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbPaginationConfig_Factory() {\n    return new NgbPaginationConfig();\n  },\n  token: NgbPaginationConfig,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPaginationConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * A directive to match the 'ellipsis' link template\n *\n * @since 4.1.0\n */\n\n\nclass NgbPaginationEllipsis {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbPaginationEllipsis.ɵfac = function NgbPaginationEllipsis_Factory(t) {\n  return new (t || NgbPaginationEllipsis)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPaginationEllipsis.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationEllipsis,\n  selectors: [[\"ng-template\", \"ngbPaginationEllipsis\", \"\"]]\n});\n\nNgbPaginationEllipsis.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPaginationEllipsis, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationEllipsis]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive to match the 'first' link template\n *\n * @since 4.1.0\n */\n\n\nclass NgbPaginationFirst {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbPaginationFirst.ɵfac = function NgbPaginationFirst_Factory(t) {\n  return new (t || NgbPaginationFirst)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPaginationFirst.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationFirst,\n  selectors: [[\"ng-template\", \"ngbPaginationFirst\", \"\"]]\n});\n\nNgbPaginationFirst.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPaginationFirst, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationFirst]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive to match the 'last' link template\n *\n * @since 4.1.0\n */\n\n\nclass NgbPaginationLast {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbPaginationLast.ɵfac = function NgbPaginationLast_Factory(t) {\n  return new (t || NgbPaginationLast)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPaginationLast.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationLast,\n  selectors: [[\"ng-template\", \"ngbPaginationLast\", \"\"]]\n});\n\nNgbPaginationLast.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPaginationLast, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationLast]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive to match the 'next' link template\n *\n * @since 4.1.0\n */\n\n\nclass NgbPaginationNext {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbPaginationNext.ɵfac = function NgbPaginationNext_Factory(t) {\n  return new (t || NgbPaginationNext)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPaginationNext.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationNext,\n  selectors: [[\"ng-template\", \"ngbPaginationNext\", \"\"]]\n});\n\nNgbPaginationNext.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPaginationNext, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationNext]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive to match the page 'number' link template\n *\n * @since 4.1.0\n */\n\n\nclass NgbPaginationNumber {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbPaginationNumber.ɵfac = function NgbPaginationNumber_Factory(t) {\n  return new (t || NgbPaginationNumber)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPaginationNumber.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationNumber,\n  selectors: [[\"ng-template\", \"ngbPaginationNumber\", \"\"]]\n});\n\nNgbPaginationNumber.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPaginationNumber, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationNumber]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive to match the 'previous' link template\n *\n * @since 4.1.0\n */\n\n\nclass NgbPaginationPrevious {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbPaginationPrevious.ɵfac = function NgbPaginationPrevious_Factory(t) {\n  return new (t || NgbPaginationPrevious)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPaginationPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationPrevious,\n  selectors: [[\"ng-template\", \"ngbPaginationPrevious\", \"\"]]\n});\n\nNgbPaginationPrevious.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPaginationPrevious, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationPrevious]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\n\n\nclass NgbPagination {\n  constructor(config) {\n    this.pageCount = 0;\n    this.pages = [];\n    /**\n     *  The current page.\n     *\n     *  Page numbers start with `1`.\n     */\n\n    this.page = 1;\n    /**\n     *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n     *\n     *  Event payload is the number of the newly selected page.\n     *\n     *  Page numbers start with `1`.\n     */\n\n    this.pageChange = new EventEmitter(true);\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n\n  hasPrevious() {\n    return this.page > 1;\n  }\n\n  hasNext() {\n    return this.page < this.pageCount;\n  }\n\n  nextDisabled() {\n    return !this.hasNext() || this.disabled;\n  }\n\n  previousDisabled() {\n    return !this.hasPrevious() || this.disabled;\n  }\n\n  selectPage(pageNumber) {\n    this._updatePages(pageNumber);\n  }\n\n  ngOnChanges(changes) {\n    this._updatePages(this.page);\n  }\n\n  isEllipsis(pageNumber) {\n    return pageNumber === -1;\n  }\n  /**\n   * Appends ellipses and first/last page number to the displayed pages\n   */\n\n\n  _applyEllipses(start, end) {\n    if (this.ellipses) {\n      if (start > 0) {\n        // The first page will always be included. If the displayed range\n        // starts after the third page, then add ellipsis. But if the range\n        // starts on the third page, then add the second page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (start > 2) {\n          this.pages.unshift(-1);\n        } else if (start === 2) {\n          this.pages.unshift(2);\n        }\n\n        this.pages.unshift(1);\n      }\n\n      if (end < this.pageCount) {\n        // The last page will always be included. If the displayed range\n        // ends before the third-last page, then add ellipsis. But if the range\n        // ends on third-last page, then add the second-last page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (end < this.pageCount - 2) {\n          this.pages.push(-1);\n        } else if (end === this.pageCount - 2) {\n          this.pages.push(this.pageCount - 1);\n        }\n\n        this.pages.push(this.pageCount);\n      }\n    }\n  }\n  /**\n   * Rotates page numbers based on maxSize items visible.\n   * Currently selected page stays in the middle:\n   *\n   * Ex. for selected page = 6:\n   * [5,*6*,7] for maxSize = 3\n   * [4,5,*6*,7] for maxSize = 4\n   */\n\n\n  _applyRotation() {\n    let start = 0;\n    let end = this.pageCount;\n    let leftOffset = Math.floor(this.maxSize / 2);\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n    if (this.page <= leftOffset) {\n      // very beginning, no rotation -> [0..maxSize]\n      end = this.maxSize;\n    } else if (this.pageCount - this.page < leftOffset) {\n      // very end, no rotation -> [len-maxSize..len]\n      start = this.pageCount - this.maxSize;\n    } else {\n      // rotate\n      start = this.page - leftOffset - 1;\n      end = this.page + rightOffset;\n    }\n\n    return [start, end];\n  }\n  /**\n   * Paginates page numbers based on maxSize items per page.\n   */\n\n\n  _applyPagination() {\n    let page = Math.ceil(this.page / this.maxSize) - 1;\n    let start = page * this.maxSize;\n    let end = start + this.maxSize;\n    return [start, end];\n  }\n\n  _setPageInRange(newPageNo) {\n    const prevPageNo = this.page;\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  _updatePages(newPage) {\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n    if (!isNumber(this.pageCount)) {\n      this.pageCount = 0;\n    } // fill-in model needed to render pages\n\n\n    this.pages.length = 0;\n\n    for (let i = 1; i <= this.pageCount; i++) {\n      this.pages.push(i);\n    } // set page within 1..max range\n\n\n    this._setPageInRange(newPage); // apply maxSize if necessary\n\n\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n      let start = 0;\n      let end = this.pageCount; // either paginating or rotating page numbers\n\n      if (this.rotate) {\n        [start, end] = this._applyRotation();\n      } else {\n        [start, end] = this._applyPagination();\n      }\n\n      this.pages = this.pages.slice(start, end); // adding ellipses\n\n      this._applyEllipses(start, end);\n    }\n  }\n\n}\n\nNgbPagination.ɵfac = function NgbPagination_Factory(t) {\n  return new (t || NgbPagination)(ɵngcc0.ɵɵdirectiveInject(NgbPaginationConfig));\n};\n\nNgbPagination.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbPagination,\n  selectors: [[\"ngb-pagination\"]],\n  contentQueries: function NgbPagination_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationEllipsis, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationFirst, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationLast, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationNext, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationNumber, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationPrevious, 1);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplEllipsis = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplFirst = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplLast = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplNext = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplNumber = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplPrevious = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"navigation\"],\n  inputs: {\n    page: \"page\",\n    disabled: \"disabled\",\n    boundaryLinks: \"boundaryLinks\",\n    directionLinks: \"directionLinks\",\n    ellipses: \"ellipses\",\n    maxSize: \"maxSize\",\n    pageSize: \"pageSize\",\n    rotate: \"rotate\",\n    size: \"size\",\n    collectionSize: \"collectionSize\"\n  },\n  outputs: {\n    pageChange: \"pageChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 18,\n  vars: 7,\n  consts: function () {\n    let i18n_34;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_pagination_first$$FESM2015_NG_BOOTSTRAP_JS__35 = goog.getMsg(\"\\u00AB\\u00AB\");\n      i18n_34 = MSG_EXTERNAL_ngb_pagination_first$$FESM2015_NG_BOOTSTRAP_JS__35;\n    } else {\n      i18n_34 = $localize`:@@ngb.pagination.first␟656506dfd46380956a655f919f1498d018f75ca0␟6867721956102594380:««`;\n    }\n\n    let i18n_36;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_pagination_previous$$FESM2015_NG_BOOTSTRAP_JS__37 = goog.getMsg(\"\\u00AB\");\n      i18n_36 = MSG_EXTERNAL_ngb_pagination_previous$$FESM2015_NG_BOOTSTRAP_JS__37;\n    } else {\n      i18n_36 = $localize`:@@ngb.pagination.previous␟6e52b6ee77a4848d899dd21b591c6fd499e3aef3␟6479320895410098858:«`;\n    }\n\n    let i18n_38;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_pagination_next$$FESM2015_NG_BOOTSTRAP_JS__39 = goog.getMsg(\"\\u00BB\");\n      i18n_38 = MSG_EXTERNAL_ngb_pagination_next$$FESM2015_NG_BOOTSTRAP_JS__39;\n    } else {\n      i18n_38 = $localize`:@@ngb.pagination.next␟ba9cbb4ff311464308a3627e4f1c3345d9fe6d7d␟5458177150283468089:»`;\n    }\n\n    let i18n_40;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_pagination_last$$FESM2015_NG_BOOTSTRAP_JS__41 = goog.getMsg(\"\\u00BB\\u00BB\");\n      i18n_40 = MSG_EXTERNAL_ngb_pagination_last$$FESM2015_NG_BOOTSTRAP_JS__41;\n    } else {\n      i18n_40 = $localize`:@@ngb.pagination.last␟49f27a460bc97e7e00be5b37098bfa79884fc7d9␟5277020320267646988:»»`;\n    }\n\n    let i18n_42;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_pagination_first_aria$$FESM2015_NG_BOOTSTRAP_JS__43 = goog.getMsg(\"First\");\n      i18n_42 = MSG_EXTERNAL_ngb_pagination_first_aria$$FESM2015_NG_BOOTSTRAP_JS__43;\n    } else {\n      i18n_42 = $localize`:@@ngb.pagination.first-aria␟f2f852318759c6396b5d3d17031d53817d7b38cc␟2241508602425256033:First`;\n    }\n\n    let i18n_45;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_pagination_previous_aria$$FESM2015_NG_BOOTSTRAP_JS__46 = goog.getMsg(\"Previous\");\n      i18n_45 = MSG_EXTERNAL_ngb_pagination_previous_aria$$FESM2015_NG_BOOTSTRAP_JS__46;\n    } else {\n      i18n_45 = $localize`:@@ngb.pagination.previous-aria␟680d5c75b7fd8d37961083608b9fcdc4167b4c43␟4452427314943113135:Previous`;\n    }\n\n    let i18n_50;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_pagination_next_aria$$FESM2015_NG_BOOTSTRAP_JS__51 = goog.getMsg(\"Next\");\n      i18n_50 = MSG_EXTERNAL_ngb_pagination_next_aria$$FESM2015_NG_BOOTSTRAP_JS__51;\n    } else {\n      i18n_50 = $localize`:@@ngb.pagination.next-aria␟f732c304c7433e5a83ffcd862c3dce709a0f4982␟3885497195825665706:Next`;\n    }\n\n    let i18n_52;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_pagination_last_aria$$FESM2015_NG_BOOTSTRAP_JS__53 = goog.getMsg(\"Last\");\n      i18n_52 = MSG_EXTERNAL_ngb_pagination_last_aria$$FESM2015_NG_BOOTSTRAP_JS__53;\n    } else {\n      i18n_52 = $localize`:@@ngb.pagination.last-aria␟5c729788ba138508aca1bec050b610f7bf81db3e␟4882268002141858767:Last`;\n    }\n\n    return [[\"first\", \"\"], [\"previous\", \"\"], [\"next\", \"\"], [\"last\", \"\"], [\"ellipsis\", \"\"], [\"defaultNumber\", \"\"], [\"class\", \"page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"page-item\", 3, \"active\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], i18n_34, i18n_36, i18n_38, i18n_40, [\"class\", \"sr-only\", 4, \"ngIf\"], [1, \"sr-only\"], [1, \"page-item\"], [\"aria-label\", i18n_42, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"aria-label\", i18n_45, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"class\", \"page-link\", \"tabindex\", \"-1\", \"aria-disabled\", \"true\", 4, \"ngIf\"], [\"class\", \"page-link\", \"href\", \"\", 3, \"click\", 4, \"ngIf\"], [\"tabindex\", \"-1\", \"aria-disabled\", \"true\", 1, \"page-link\"], [\"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_50, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_52, \"href\", \"\", 1, \"page-link\", 3, \"click\"]];\n  },\n  template: function NgbPagination_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbPagination_ng_template_0_Template, 2, 0, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbPagination_ng_template_2_Template, 2, 0, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(4, NgbPagination_ng_template_4_Template, 2, 0, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(6, NgbPagination_ng_template_6_Template, 2, 0, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(8, NgbPagination_ng_template_8_Template, 1, 0, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(10, NgbPagination_ng_template_10_Template, 2, 2, \"ng-template\", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵelementStart(12, \"ul\");\n      ɵngcc0.ɵɵtemplate(13, NgbPagination_li_13_Template, 3, 9, \"li\", 6);\n      ɵngcc0.ɵɵtemplate(14, NgbPagination_li_14_Template, 3, 8, \"li\", 6);\n      ɵngcc0.ɵɵtemplate(15, NgbPagination_li_15_Template, 3, 7, \"li\", 7);\n      ɵngcc0.ɵɵtemplate(16, NgbPagination_li_16_Template, 3, 9, \"li\", 6);\n      ɵngcc0.ɵɵtemplate(17, NgbPagination_li_17_Template, 3, 9, \"li\", 6);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(12);\n      ɵngcc0.ɵɵclassMap(\"pagination\" + (ctx.size ? \" pagination-\" + ctx.size : \"\"));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.pages);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbPagination.ctorParameters = () => [{\n  type: NgbPaginationConfig\n}];\n\nNgbPagination.propDecorators = {\n  tplEllipsis: [{\n    type: ContentChild,\n    args: [NgbPaginationEllipsis, {\n      static: false\n    }]\n  }],\n  tplFirst: [{\n    type: ContentChild,\n    args: [NgbPaginationFirst, {\n      static: false\n    }]\n  }],\n  tplLast: [{\n    type: ContentChild,\n    args: [NgbPaginationLast, {\n      static: false\n    }]\n  }],\n  tplNext: [{\n    type: ContentChild,\n    args: [NgbPaginationNext, {\n      static: false\n    }]\n  }],\n  tplNumber: [{\n    type: ContentChild,\n    args: [NgbPaginationNumber, {\n      static: false\n    }]\n  }],\n  tplPrevious: [{\n    type: ContentChild,\n    args: [NgbPaginationPrevious, {\n      static: false\n    }]\n  }],\n  disabled: [{\n    type: Input\n  }],\n  boundaryLinks: [{\n    type: Input\n  }],\n  directionLinks: [{\n    type: Input\n  }],\n  ellipses: [{\n    type: Input\n  }],\n  rotate: [{\n    type: Input\n  }],\n  collectionSize: [{\n    type: Input\n  }],\n  maxSize: [{\n    type: Input\n  }],\n  page: [{\n    type: Input\n  }],\n  pageSize: [{\n    type: Input\n  }],\n  pageChange: [{\n    type: Output\n  }],\n  size: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPagination, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-pagination',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'role': 'navigation'\n      },\n      template: `\n    <ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n    <ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n    <ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n    <ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n    <ng-template #ellipsis>...</ng-template>\n    <ng-template #defaultNumber let-page let-currentPage=\"currentPage\">\n      {{ page }}\n      <span *ngIf=\"page === currentPage\" class=\"sr-only\">(current)</span>\n    </ng-template>\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"selectPage(1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page-1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled()}\"></ng-template>\n        </a>\n      </li>\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\" [attr.aria-current]=\"(pageNumber === page ? 'page' : null)\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\" tabindex=\"-1\" aria-disabled=\"true\">\n          <ng-template [ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n                       [ngTemplateOutletContext]=\"{disabled: true, currentPage: page}\"></ng-template>\n        </a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"selectPage(pageNumber); $event.preventDefault()\"\n          [attr.tabindex]=\"disabled ? '-1' : null\" [attr.aria-disabled]=\"disabled ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n                       [ngTemplateOutletContext]=\"{disabled: disabled, $implicit: pageNumber, currentPage: page}\"></ng-template>\n        </a>\n      </li>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page+1); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"selectPage(pageCount); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n    </ul>\n  `\n    }]\n  }], function () {\n    return [{\n      type: NgbPaginationConfig\n    }];\n  }, {\n    page: [{\n      type: Input\n    }],\n    pageChange: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }],\n    boundaryLinks: [{\n      type: Input\n    }],\n    directionLinks: [{\n      type: Input\n    }],\n    ellipses: [{\n      type: Input\n    }],\n    maxSize: [{\n      type: Input\n    }],\n    pageSize: [{\n      type: Input\n    }],\n    rotate: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    tplEllipsis: [{\n      type: ContentChild,\n      args: [NgbPaginationEllipsis, {\n        static: false\n      }]\n    }],\n    tplFirst: [{\n      type: ContentChild,\n      args: [NgbPaginationFirst, {\n        static: false\n      }]\n    }],\n    tplLast: [{\n      type: ContentChild,\n      args: [NgbPaginationLast, {\n        static: false\n      }]\n    }],\n    tplNext: [{\n      type: ContentChild,\n      args: [NgbPaginationNext, {\n        static: false\n      }]\n    }],\n    tplNumber: [{\n      type: ContentChild,\n      args: [NgbPaginationNumber, {\n        static: false\n      }]\n    }],\n    tplPrevious: [{\n      type: ContentChild,\n      args: [NgbPaginationPrevious, {\n        static: false\n      }]\n    }],\n    collectionSize: [{\n      type: Input\n    }]\n  });\n})();\n\nconst DIRECTIVES = [NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious];\n\nclass NgbPaginationModule {}\n\nNgbPaginationModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbPaginationModule\n});\nNgbPaginationModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbPaginationModule_Factory(t) {\n    return new (t || NgbPaginationModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbPaginationModule, {\n    declarations: function () {\n      return [NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPaginationModule, [{\n    type: NgModule,\n    args: [{\n      declarations: DIRECTIVES,\n      exports: DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n\nclass Trigger {\n  constructor(open, close) {\n    this.open = open;\n    this.close = close;\n\n    if (!close) {\n      this.close = open;\n    }\n  }\n\n  isManual() {\n    return this.open === 'manual' || this.close === 'manual';\n  }\n\n}\n\nconst DEFAULT_ALIASES = {\n  'hover': ['mouseenter', 'mouseleave'],\n  'focus': ['focusin', 'focusout']\n};\n\nfunction parseTriggers(triggers, aliases = DEFAULT_ALIASES) {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map(triggerPair => {\n    let alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nfunction observeTriggers(renderer, nativeElement, triggers, isOpenedFn) {\n  return new Observable(subscriber => {\n    const listeners = [];\n\n    const openFn = () => subscriber.next(true);\n\n    const closeFn = () => subscriber.next(false);\n\n    const toggleFn = () => subscriber.next(!isOpenedFn());\n\n    triggers.forEach(trigger => {\n      if (trigger.open === trigger.close) {\n        listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n      } else {\n        listeners.push(renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n      }\n    });\n    return () => {\n      listeners.forEach(unsubscribeFn => unsubscribeFn());\n    };\n  });\n}\n\nconst delayOrNoop = time => time > 0 ? delay(time) : a => a;\n\nconst ɵ0$5 = delayOrNoop;\n\nfunction triggerDelay(openDelay, closeDelay, isOpenedFn) {\n  return input$ => {\n    let pending = null;\n    const filteredInput$ = input$.pipe(map(open => ({\n      open\n    })), filter(event => {\n      const currentlyOpen = isOpenedFn();\n\n      if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n        pending = event;\n        return true;\n      }\n\n      if (pending && pending.open !== event.open) {\n        pending = null;\n      }\n\n      return false;\n    }), share());\n    const delayedOpen$ = filteredInput$.pipe(filter(event => event.open), delayOrNoop(openDelay));\n    const delayedClose$ = filteredInput$.pipe(filter(event => !event.open), delayOrNoop(closeDelay));\n    return merge(delayedOpen$, delayedClose$).pipe(filter(event => {\n      if (event === pending) {\n        pending = null;\n        return event.open !== isOpenedFn();\n      }\n\n      return false;\n    }), map(event => event.open));\n  };\n}\n\nfunction listenToTriggers(renderer, nativeElement, triggers, isOpenedFn, openFn, closeFn, openDelay = 0, closeDelay = 0) {\n  const parsedTriggers = parseTriggers(triggers);\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return () => {};\n  }\n\n  const subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn).pipe(triggerDelay(openDelay, closeDelay, isOpenedFn)).subscribe(open => open ? openFn() : closeFn());\n  return () => subscription.unsubscribe();\n}\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\n\n\nclass NgbPopoverConfig {\n  constructor(ngbConfig) {\n    this.autoClose = true;\n    this.placement = 'auto';\n    this.triggers = 'click';\n    this.disablePopover = false;\n    this.openDelay = 0;\n    this.closeDelay = 0;\n    this.animation = ngbConfig.animation;\n  }\n\n}\n\nNgbPopoverConfig.ɵfac = function NgbPopoverConfig_Factory(t) {\n  return new (t || NgbPopoverConfig)(ɵngcc0.ɵɵinject(NgbConfig));\n};\n\nNgbPopoverConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbPopoverConfig_Factory() {\n    return new NgbPopoverConfig(ɵɵinject(NgbConfig));\n  },\n  token: NgbPopoverConfig,\n  providedIn: \"root\"\n});\n\nNgbPopoverConfig.ctorParameters = () => [{\n  type: NgbConfig\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPopoverConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nlet nextId$3 = 0;\n\nclass NgbPopoverWindow {\n  isTitleTemplate() {\n    return this.title instanceof TemplateRef;\n  }\n\n}\n\nNgbPopoverWindow.ɵfac = function NgbPopoverWindow_Factory(t) {\n  return new (t || NgbPopoverWindow)();\n};\n\nNgbPopoverWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbPopoverWindow,\n  selectors: [[\"ngb-popover-window\"]],\n  hostAttrs: [\"role\", \"tooltip\"],\n  hostVars: 5,\n  hostBindings: function NgbPopoverWindow_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n      ɵngcc0.ɵɵclassMap(\"popover\" + (ctx.popoverClass ? \" \" + ctx.popoverClass : \"\"));\n      ɵngcc0.ɵɵclassProp(\"fade\", ctx.animation);\n    }\n  },\n  inputs: {\n    animation: \"animation\",\n    title: \"title\",\n    id: \"id\",\n    popoverClass: \"popoverClass\",\n    context: \"context\"\n  },\n  ngContentSelectors: _c3,\n  decls: 4,\n  vars: 1,\n  consts: [[1, \"arrow\"], [\"class\", \"popover-header\", 4, \"ngIf\"], [1, \"popover-body\"], [1, \"popover-header\"], [\"simpleTitle\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbPopoverWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelement(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, NgbPopoverWindow_h3_1_Template, 4, 2, \"h3\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵprojection(3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.title);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  styles: [\"ngb-popover-window.bs-popover-bottom>.arrow,ngb-popover-window.bs-popover-top>.arrow{left:50%;margin-left:-.5rem}ngb-popover-window.bs-popover-bottom-left>.arrow,ngb-popover-window.bs-popover-top-left>.arrow{left:2em}ngb-popover-window.bs-popover-bottom-right>.arrow,ngb-popover-window.bs-popover-top-right>.arrow{left:auto;right:2em}ngb-popover-window.bs-popover-left>.arrow,ngb-popover-window.bs-popover-right>.arrow{margin-top:-.5rem;top:50%}ngb-popover-window.bs-popover-left-top>.arrow,ngb-popover-window.bs-popover-right-top>.arrow{top:.7em}ngb-popover-window.bs-popover-left-bottom>.arrow,ngb-popover-window.bs-popover-right-bottom>.arrow{bottom:.7em;top:auto}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNgbPopoverWindow.propDecorators = {\n  animation: [{\n    type: Input\n  }],\n  title: [{\n    type: Input\n  }],\n  id: [{\n    type: Input\n  }],\n  popoverClass: [{\n    type: Input\n  }],\n  context: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPopoverWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-popover-window',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")',\n        '[class.fade]': 'animation',\n        'role': 'tooltip',\n        '[id]': 'id'\n      },\n      template: `\n    <div class=\"arrow\"></div>\n    <h3 class=\"popover-header\" *ngIf=\"title\">\n      <ng-template #simpleTitle>{{title}}</ng-template>\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? $any(title) : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\n    </h3>\n    <div class=\"popover-body\"><ng-content></ng-content></div>`,\n      styles: [\"ngb-popover-window.bs-popover-bottom>.arrow,ngb-popover-window.bs-popover-top>.arrow{left:50%;margin-left:-.5rem}ngb-popover-window.bs-popover-bottom-left>.arrow,ngb-popover-window.bs-popover-top-left>.arrow{left:2em}ngb-popover-window.bs-popover-bottom-right>.arrow,ngb-popover-window.bs-popover-top-right>.arrow{left:auto;right:2em}ngb-popover-window.bs-popover-left>.arrow,ngb-popover-window.bs-popover-right>.arrow{margin-top:-.5rem;top:50%}ngb-popover-window.bs-popover-left-top>.arrow,ngb-popover-window.bs-popover-right-top>.arrow{top:.7em}ngb-popover-window.bs-popover-left-bottom>.arrow,ngb-popover-window.bs-popover-right-bottom>.arrow{bottom:.7em;top:auto}\"]\n    }]\n  }], null, {\n    animation: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    popoverClass: [{\n      type: Input\n    }],\n    context: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\n\n\nclass NgbPopover {\n  constructor(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef) {\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._ngZone = _ngZone;\n    this._document = _document;\n    this._changeDetector = _changeDetector;\n    /**\n     * An event emitted when the popover opening animation has finished. Contains no payload.\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the popover closing animation has finished. Contains no payload.\n     *\n     * At this point popover is not in the DOM anymore.\n     */\n\n    this.hidden = new EventEmitter();\n    this._ngbPopoverWindowId = `ngb-popover-${nextId$3++}`;\n    this._windowRef = null;\n    this.animation = config.animation;\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disablePopover = config.disablePopover;\n    this.popoverClass = config.popoverClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService(NgbPopoverWindow, injector, viewContainerRef, _renderer, this._ngZone, componentFactoryResolver, applicationRef);\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body', 'bs-popover');\n      }\n    });\n  }\n\n  _isDisabled() {\n    if (this.disablePopover) {\n      return true;\n    }\n\n    if (!this.ngbPopover && !this.popoverTitle) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Opens the popover.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the popover template when it is created.\n   */\n\n\n  open(context) {\n    if (!this._windowRef && !this._isDisabled()) {\n      // this type assertion is safe because otherwise _isDisabled would return true\n      const {\n        windowRef,\n        transition$\n      } = this._popupService.open(this.ngbPopover, context, this.animation);\n\n      this._windowRef = windowRef;\n      this._windowRef.instance.animation = this.animation;\n      this._windowRef.instance.title = this.popoverTitle;\n      this._windowRef.instance.context = context;\n      this._windowRef.instance.popoverClass = this.popoverClass;\n      this._windowRef.instance.id = this._ngbPopoverWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      } // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening popover from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n\n\n      this._windowRef.changeDetectorRef.detectChanges(); // We need to mark for check, because popover won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the popover from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n\n\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [this._windowRef.location.nativeElement]);\n      transition$.subscribe(() => this.shown.emit());\n    }\n  }\n  /**\n   * Closes the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n\n\n  close() {\n    if (this._windowRef) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n\n      this._popupService.close(this.animation).subscribe(() => {\n        this._windowRef = null;\n        this.hidden.emit();\n\n        this._changeDetector.markForCheck();\n      });\n    }\n  }\n  /**\n   * Toggles the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n\n\n  toggle() {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n\n\n  isOpen() {\n    return this._windowRef != null;\n  }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({\n    ngbPopover,\n    popoverTitle,\n    disablePopover,\n    popoverClass\n  }) {\n    if (popoverClass && this.isOpen()) {\n      this._windowRef.instance.popoverClass = popoverClass.currentValue;\n    } // close popover if title and content become empty, or disablePopover set to true\n\n\n    if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n      this.close();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close(); // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n\n    this._zoneSubscription.unsubscribe();\n  }\n\n}\n\nNgbPopover.ɵfac = function NgbPopover_Factory(t) {\n  return new (t || NgbPopover)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(NgbPopoverConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef));\n};\n\nNgbPopover.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPopover,\n  selectors: [[\"\", \"ngbPopover\", \"\"]],\n  inputs: {\n    animation: \"animation\",\n    autoClose: \"autoClose\",\n    placement: \"placement\",\n    triggers: \"triggers\",\n    container: \"container\",\n    disablePopover: \"disablePopover\",\n    popoverClass: \"popoverClass\",\n    openDelay: \"openDelay\",\n    closeDelay: \"closeDelay\",\n    ngbPopover: \"ngbPopover\",\n    popoverTitle: \"popoverTitle\"\n  },\n  outputs: {\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbPopover\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNgbPopover.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Renderer2\n}, {\n  type: Injector\n}, {\n  type: ComponentFactoryResolver\n}, {\n  type: ViewContainerRef\n}, {\n  type: NgbPopoverConfig\n}, {\n  type: NgZone\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ApplicationRef\n}];\n\nNgbPopover.propDecorators = {\n  animation: [{\n    type: Input\n  }],\n  autoClose: [{\n    type: Input\n  }],\n  ngbPopover: [{\n    type: Input\n  }],\n  popoverTitle: [{\n    type: Input\n  }],\n  placement: [{\n    type: Input\n  }],\n  triggers: [{\n    type: Input\n  }],\n  container: [{\n    type: Input\n  }],\n  disablePopover: [{\n    type: Input\n  }],\n  popoverClass: [{\n    type: Input\n  }],\n  openDelay: [{\n    type: Input\n  }],\n  closeDelay: [{\n    type: Input\n  }],\n  shown: [{\n    type: Output\n  }],\n  hidden: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPopover, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbPopover]',\n      exportAs: 'ngbPopover'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: NgbPopoverConfig\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ApplicationRef\n    }];\n  }, {\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    animation: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    triggers: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    disablePopover: [{\n      type: Input\n    }],\n    popoverClass: [{\n      type: Input\n    }],\n    openDelay: [{\n      type: Input\n    }],\n    closeDelay: [{\n      type: Input\n    }],\n    ngbPopover: [{\n      type: Input\n    }],\n    popoverTitle: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgbPopoverModule {}\n\nNgbPopoverModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbPopoverModule\n});\nNgbPopoverModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbPopoverModule_Factory(t) {\n    return new (t || NgbPopoverModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbPopoverModule, {\n    declarations: function () {\n      return [NgbPopover, NgbPopoverWindow];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [NgbPopover];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPopoverModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbPopover, NgbPopoverWindow],\n      exports: [NgbPopover],\n      imports: [CommonModule],\n      entryComponents: [NgbPopoverWindow]\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\n\n\nclass NgbProgressbarConfig {\n  constructor() {\n    this.max = 100;\n    this.animated = false;\n    this.striped = false;\n    this.showValue = false;\n  }\n\n}\n\nNgbProgressbarConfig.ɵfac = function NgbProgressbarConfig_Factory(t) {\n  return new (t || NgbProgressbarConfig)();\n};\n\nNgbProgressbarConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbProgressbarConfig_Factory() {\n    return new NgbProgressbarConfig();\n  },\n  token: NgbProgressbarConfig,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbProgressbarConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\n\n\nclass NgbProgressbar {\n  constructor(config) {\n    /**\n     * The current value for the progress bar.\n     *\n     * Should be in the `[0, max]` range.\n     */\n    this.value = 0;\n    this.max = config.max;\n    this.animated = config.animated;\n    this.striped = config.striped;\n    this.textType = config.textType;\n    this.type = config.type;\n    this.showValue = config.showValue;\n    this.height = config.height;\n  }\n  /**\n   * The maximal value to be displayed in the progress bar.\n   *\n   * Should be a positive number. Will default to 100 otherwise.\n   */\n\n\n  set max(max) {\n    this._max = !isNumber(max) || max <= 0 ? 100 : max;\n  }\n\n  get max() {\n    return this._max;\n  }\n\n  getValue() {\n    return getValueInRange(this.value, this.max);\n  }\n\n  getPercentValue() {\n    return 100 * this.getValue() / this.max;\n  }\n\n}\n\nNgbProgressbar.ɵfac = function NgbProgressbar_Factory(t) {\n  return new (t || NgbProgressbar)(ɵngcc0.ɵɵdirectiveInject(NgbProgressbarConfig));\n};\n\nNgbProgressbar.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbProgressbar,\n  selectors: [[\"ngb-progressbar\"]],\n  hostAttrs: [1, \"progress\"],\n  hostVars: 2,\n  hostBindings: function NgbProgressbar_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"height\", ctx.height);\n    }\n  },\n  inputs: {\n    value: \"value\",\n    max: \"max\",\n    animated: \"animated\",\n    striped: \"striped\",\n    textType: \"textType\",\n    type: \"type\",\n    showValue: \"showValue\",\n    height: \"height\"\n  },\n  ngContentSelectors: _c3,\n  decls: 3,\n  vars: 11,\n  consts: function () {\n    let i18n_54;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_progressbar_value$$FESM2015_NG_BOOTSTRAP_JS__55 = goog.getMsg(\"{$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_54 = MSG_EXTERNAL_ngb_progressbar_value$$FESM2015_NG_BOOTSTRAP_JS__55;\n    } else {\n      i18n_54 = $localize`:@@ngb.progressbar.value␟f8e9a947b9db4252c0e9905765338712f2fd032f␟3720830768741091151:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n    }\n\n    return [[\"role\", \"progressbar\", \"aria-valuemin\", \"0\"], [4, \"ngIf\"], i18n_54];\n  },\n  template: function NgbProgressbar_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, NgbProgressbar_span_1_Template, 3, 3, \"span\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMapInterpolate4(\"progress-bar\", ctx.type ? \" bg-\" + ctx.type : \"\", \"\", ctx.textType ? \" text-\" + ctx.textType : \"\", \"\\n    \", ctx.animated ? \" progress-bar-animated\" : \"\", \"\", ctx.striped ? \" progress-bar-striped\" : \"\", \"\");\n      ɵngcc0.ɵɵstyleProp(\"width\", ctx.getPercentValue(), \"%\");\n      ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.getValue())(\"aria-valuemax\", ctx.max);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showValue);\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  pipes: [ɵngcc1.PercentPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbProgressbar.ctorParameters = () => [{\n  type: NgbProgressbarConfig\n}];\n\nNgbProgressbar.propDecorators = {\n  max: [{\n    type: Input\n  }],\n  animated: [{\n    type: Input\n  }],\n  striped: [{\n    type: Input\n  }],\n  showValue: [{\n    type: Input\n  }],\n  textType: [{\n    type: Input\n  }],\n  type: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  height: [{\n    type: Input\n  }, {\n    type: HostBinding,\n    args: ['style.height']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbProgressbar, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-progressbar',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'progress'\n      },\n      template: `\n    <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{textType ? ' text-' + textType : ''}}\n    {{animated ? ' progress-bar-animated' : ''}}{{striped ? ' progress-bar-striped' : ''}}\"\n    role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n    [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n      <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getValue() / max | percent}}</span><ng-content></ng-content>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: NgbProgressbarConfig\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    animated: [{\n      type: Input\n    }],\n    striped: [{\n      type: Input\n    }],\n    textType: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    showValue: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['style.height']\n    }]\n  });\n})();\n\nclass NgbProgressbarModule {}\n\nNgbProgressbarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbProgressbarModule\n});\nNgbProgressbarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbProgressbarModule_Factory(t) {\n    return new (t || NgbProgressbarModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbProgressbarModule, {\n    declarations: function () {\n      return [NgbProgressbar];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [NgbProgressbar];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbProgressbarModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbProgressbar],\n      exports: [NgbProgressbar],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\n\n\nclass NgbRatingConfig {\n  constructor() {\n    this.max = 10;\n    this.readonly = false;\n    this.resettable = false;\n  }\n\n}\n\nNgbRatingConfig.ɵfac = function NgbRatingConfig_Factory(t) {\n  return new (t || NgbRatingConfig)();\n};\n\nNgbRatingConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbRatingConfig_Factory() {\n    return new NgbRatingConfig();\n  },\n  token: NgbRatingConfig,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbRatingConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nconst NGB_RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRating),\n  multi: true\n};\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\n\nclass NgbRating {\n  constructor(config, _changeDetectorRef) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this.contexts = [];\n    this.disabled = false;\n    /**\n     * An event emitted when the user is hovering over a given rating.\n     *\n     * Event payload equals to the rating being hovered over.\n     */\n\n    this.hover = new EventEmitter();\n    /**\n     * An event emitted when the user stops hovering over a given rating.\n     *\n     * Event payload equals to the rating of the last item being hovered over.\n     */\n\n    this.leave = new EventEmitter();\n    /**\n     * An event emitted when the user selects a new rating.\n     *\n     * Event payload equals to the newly selected rating.\n     */\n\n    this.rateChange = new EventEmitter(true);\n\n    this.onChange = _ => {};\n\n    this.onTouched = () => {};\n\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n\n  ariaValueText() {\n    return `${this.nextRate} out of ${this.max}`;\n  }\n\n  isInteractive() {\n    return !this.readonly && !this.disabled;\n  }\n\n  enter(value) {\n    if (this.isInteractive()) {\n      this._updateState(value);\n    }\n\n    this.hover.emit(value);\n  }\n\n  handleBlur() {\n    this.onTouched();\n  }\n\n  handleClick(value) {\n    if (this.isInteractive()) {\n      this.update(this.resettable && this.rate === value ? 0 : value);\n    }\n  }\n\n  handleKeyDown(event) {\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.ArrowDown:\n      case Key.ArrowLeft:\n        this.update(this.rate - 1);\n        break;\n\n      case Key.ArrowUp:\n      case Key.ArrowRight:\n        this.update(this.rate + 1);\n        break;\n\n      case Key.Home:\n        this.update(0);\n        break;\n\n      case Key.End:\n        this.update(this.max);\n        break;\n\n      default:\n        return;\n    } // note 'return' in default case\n\n\n    event.preventDefault();\n  }\n\n  ngOnChanges(changes) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit() {\n    this.contexts = Array.from({\n      length: this.max\n    }, (v, k) => ({\n      fill: 0,\n      index: k\n    }));\n\n    this._updateState(this.rate);\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  reset() {\n    this.leave.emit(this.nextRate);\n\n    this._updateState(this.rate);\n  }\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n  update(value, internalChange = true) {\n    const newRate = getValueInRange(value, this.max, 0);\n\n    if (this.isInteractive() && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n\n    this._updateState(this.rate);\n  }\n\n  writeValue(value) {\n    this.update(value, false);\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  _updateState(nextValue) {\n    this.nextRate = nextValue;\n    this.contexts.forEach((context, index) => context.fill = Math.round(getValueInRange(nextValue - index, 1, 0) * 100));\n  }\n\n}\n\nNgbRating.ɵfac = function NgbRating_Factory(t) {\n  return new (t || NgbRating)(ɵngcc0.ɵɵdirectiveInject(NgbRatingConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNgbRating.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbRating,\n  selectors: [[\"ngb-rating\"]],\n  contentQueries: function NgbRating_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, 1);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.starTemplateFromContent = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"slider\", \"aria-valuemin\", \"0\", 1, \"d-inline-flex\"],\n  hostVars: 5,\n  hostBindings: function NgbRating_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"blur\", function NgbRating_blur_HostBindingHandler() {\n        return ctx.handleBlur();\n      })(\"keydown\", function NgbRating_keydown_HostBindingHandler($event) {\n        return ctx.handleKeyDown($event);\n      })(\"mouseleave\", function NgbRating_mouseleave_HostBindingHandler() {\n        return ctx.reset();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"tabindex\", ctx.disabled ? -1 : 0);\n      ɵngcc0.ɵɵattribute(\"aria-valuemax\", ctx.max)(\"aria-valuenow\", ctx.nextRate)(\"aria-valuetext\", ctx.ariaValueText())(\"aria-disabled\", ctx.readonly ? true : null);\n    }\n  },\n  inputs: {\n    max: \"max\",\n    readonly: \"readonly\",\n    rate: \"rate\",\n    resettable: \"resettable\",\n    starTemplate: \"starTemplate\"\n  },\n  outputs: {\n    hover: \"hover\",\n    leave: \"leave\",\n    rateChange: \"rateChange\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([NGB_RATING_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[\"t\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"sr-only\"], [3, \"mouseenter\", \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbRating_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbRating_ng_template_0_Template, 1, 1, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbRating_ng_template_2_Template, 4, 5, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.contexts);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbRating.ctorParameters = () => [{\n  type: NgbRatingConfig\n}, {\n  type: ChangeDetectorRef\n}];\n\nNgbRating.propDecorators = {\n  max: [{\n    type: Input\n  }],\n  rate: [{\n    type: Input\n  }],\n  readonly: [{\n    type: Input\n  }],\n  resettable: [{\n    type: Input\n  }],\n  starTemplate: [{\n    type: Input\n  }],\n  starTemplateFromContent: [{\n    type: ContentChild,\n    args: [TemplateRef, {\n      static: false\n    }]\n  }],\n  hover: [{\n    type: Output\n  }],\n  leave: [{\n    type: Output\n  }],\n  rateChange: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbRating, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-rating',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'd-inline-flex',\n        '[tabindex]': 'disabled ? -1 : 0',\n        'role': 'slider',\n        'aria-valuemin': '0',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuenow]': 'nextRate',\n        '[attr.aria-valuetext]': 'ariaValueText()',\n        '[attr.aria-disabled]': 'readonly ? true : null',\n        '(blur)': 'handleBlur()',\n        '(keydown)': 'handleKeyDown($event)',\n        '(mouseleave)': 'reset()'\n      },\n      template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"isInteractive() ? 'pointer' : 'default'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\" [ngTemplateOutletContext]=\"contexts[index]\">\n        </ng-template>\n      </span>\n    </ng-template>\n  `,\n      providers: [NGB_RATING_VALUE_ACCESSOR]\n    }]\n  }], function () {\n    return [{\n      type: NgbRatingConfig\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    hover: [{\n      type: Output\n    }],\n    leave: [{\n      type: Output\n    }],\n    rateChange: [{\n      type: Output\n    }],\n    max: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    rate: [{\n      type: Input\n    }],\n    resettable: [{\n      type: Input\n    }],\n    starTemplate: [{\n      type: Input\n    }],\n    starTemplateFromContent: [{\n      type: ContentChild,\n      args: [TemplateRef, {\n        static: false\n      }]\n    }]\n  });\n})();\n\nclass NgbRatingModule {}\n\nNgbRatingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbRatingModule\n});\nNgbRatingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbRatingModule_Factory(t) {\n    return new (t || NgbRatingModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbRatingModule, {\n    declarations: function () {\n      return [NgbRating];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [NgbRating];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbRatingModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbRating],\n      exports: [NgbRating],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n\nclass NgbTime {\n  constructor(hour, minute, second) {\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n\n  changeHour(step = 1) {\n    this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step);\n  }\n\n  updateHour(hour) {\n    if (isNumber(hour)) {\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n    } else {\n      this.hour = NaN;\n    }\n  }\n\n  changeMinute(step = 1) {\n    this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step);\n  }\n\n  updateMinute(minute) {\n    if (isNumber(minute)) {\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n      this.changeHour(Math.floor(minute / 60));\n    } else {\n      this.minute = NaN;\n    }\n  }\n\n  changeSecond(step = 1) {\n    this.updateSecond((isNaN(this.second) ? 0 : this.second) + step);\n  }\n\n  updateSecond(second) {\n    if (isNumber(second)) {\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\n      this.changeMinute(Math.floor(second / 60));\n    } else {\n      this.second = NaN;\n    }\n  }\n\n  isValid(checkSecs = true) {\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n  }\n\n  toString() {\n    return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`;\n  }\n\n}\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\n\n\nclass NgbTimepickerConfig {\n  constructor() {\n    this.meridian = false;\n    this.spinners = true;\n    this.seconds = false;\n    this.hourStep = 1;\n    this.minuteStep = 1;\n    this.secondStep = 1;\n    this.disabled = false;\n    this.readonlyInputs = false;\n    this.size = 'medium';\n  }\n\n}\n\nNgbTimepickerConfig.ɵfac = function NgbTimepickerConfig_Factory(t) {\n  return new (t || NgbTimepickerConfig)();\n};\n\nNgbTimepickerConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbTimepickerConfig_Factory() {\n    return new NgbTimepickerConfig();\n  },\n  token: NgbTimepickerConfig,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTimepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nfunction NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n  return new NgbTimeStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * @since 2.2.0\n */\n\n\nclass NgbTimeAdapter {}\n\nNgbTimeAdapter.ɵfac = function NgbTimeAdapter_Factory(t) {\n  return new (t || NgbTimeAdapter)();\n};\n\nNgbTimeAdapter.ɵprov = ɵɵdefineInjectable({\n  factory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY,\n  token: NgbTimeAdapter,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTimeAdapter, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY\n    }]\n  }], null, null);\n})();\n\nclass NgbTimeStructAdapter extends NgbTimeAdapter {\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  fromModel(time) {\n    return time && isInteger(time.hour) && isInteger(time.minute) ? {\n      hour: time.hour,\n      minute: time.minute,\n      second: isInteger(time.second) ? time.second : null\n    } : null;\n  }\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n\n\n  toModel(time) {\n    return time && isInteger(time.hour) && isInteger(time.minute) ? {\n      hour: time.hour,\n      minute: time.minute,\n      second: isInteger(time.second) ? time.second : null\n    } : null;\n  }\n\n}\n\nNgbTimeStructAdapter.ɵfac = function NgbTimeStructAdapter_Factory(t) {\n  return ɵNgbTimeStructAdapter_BaseFactory(t || NgbTimeStructAdapter);\n};\n\nNgbTimeStructAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbTimeStructAdapter,\n  factory: NgbTimeStructAdapter.ɵfac\n});\nconst ɵNgbTimeStructAdapter_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbTimeStructAdapter);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTimeStructAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n\nfunction NGB_TIMEPICKER_I18N_FACTORY(locale) {\n  return new NgbTimepickerI18nDefault(locale);\n}\n/**\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n */\n\n\nclass NgbTimepickerI18n {}\n\nNgbTimepickerI18n.ɵfac = function NgbTimepickerI18n_Factory(t) {\n  return new (t || NgbTimepickerI18n)();\n};\n\nNgbTimepickerI18n.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbTimepickerI18n_Factory() {\n    return NGB_TIMEPICKER_I18N_FACTORY(ɵɵinject(LOCALE_ID));\n  },\n  token: NgbTimepickerI18n,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTimepickerI18n, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_TIMEPICKER_I18N_FACTORY,\n      deps: [LOCALE_ID]\n    }]\n  }], null, null);\n})();\n\nclass NgbTimepickerI18nDefault extends NgbTimepickerI18n {\n  constructor(locale) {\n    super();\n    this._periods = getLocaleDayPeriods(locale, FormStyle.Standalone, TranslationWidth.Narrow);\n  }\n\n  getMorningPeriod() {\n    return this._periods[0];\n  }\n\n  getAfternoonPeriod() {\n    return this._periods[1];\n  }\n\n}\n\nNgbTimepickerI18nDefault.ɵfac = function NgbTimepickerI18nDefault_Factory(t) {\n  return new (t || NgbTimepickerI18nDefault)(ɵngcc0.ɵɵinject(LOCALE_ID));\n};\n\nNgbTimepickerI18nDefault.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbTimepickerI18nDefault,\n  factory: NgbTimepickerI18nDefault.ɵfac\n});\n\nNgbTimepickerI18nDefault.ctorParameters = () => [{\n  type: String,\n  decorators: [{\n    type: Inject,\n    args: [LOCALE_ID]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTimepickerI18nDefault, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, null);\n})();\n\nconst FILTER_REGEX = /[^0-9]/g;\nconst NGB_TIMEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTimepicker),\n  multi: true\n};\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\n\nclass NgbTimepicker {\n  constructor(_config, _ngbTimeAdapter, _cd, i18n) {\n    this._config = _config;\n    this._ngbTimeAdapter = _ngbTimeAdapter;\n    this._cd = _cd;\n    this.i18n = i18n;\n\n    this.onChange = _ => {};\n\n    this.onTouched = () => {};\n\n    this.meridian = _config.meridian;\n    this.spinners = _config.spinners;\n    this.seconds = _config.seconds;\n    this.hourStep = _config.hourStep;\n    this.minuteStep = _config.minuteStep;\n    this.secondStep = _config.secondStep;\n    this.disabled = _config.disabled;\n    this.readonlyInputs = _config.readonlyInputs;\n    this.size = _config.size;\n  }\n  /**\n   * The number of hours to add/subtract when clicking hour spinners.\n   */\n\n\n  set hourStep(step) {\n    this._hourStep = isInteger(step) ? step : this._config.hourStep;\n  }\n\n  get hourStep() {\n    return this._hourStep;\n  }\n  /**\n   * The number of minutes to add/subtract when clicking minute spinners.\n   */\n\n\n  set minuteStep(step) {\n    this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n  }\n\n  get minuteStep() {\n    return this._minuteStep;\n  }\n  /**\n   * The number of seconds to add/subtract when clicking second spinners.\n   */\n\n\n  set secondStep(step) {\n    this._secondStep = isInteger(step) ? step : this._config.secondStep;\n  }\n\n  get secondStep() {\n    return this._secondStep;\n  }\n\n  writeValue(value) {\n    const structValue = this._ngbTimeAdapter.fromModel(value);\n\n    this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n\n    if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n      this.model.second = 0;\n    }\n\n    this._cd.markForCheck();\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n  changeHour(step) {\n    this.model.changeHour(step);\n    this.propagateModelChange();\n  }\n\n  changeMinute(step) {\n    this.model.changeMinute(step);\n    this.propagateModelChange();\n  }\n\n  changeSecond(step) {\n    this.model.changeSecond(step);\n    this.propagateModelChange();\n  }\n\n  updateHour(newVal) {\n    const isPM = this.model.hour >= 12;\n    const enteredHour = toInteger(newVal);\n\n    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n      this.model.updateHour(enteredHour + 12);\n    } else {\n      this.model.updateHour(enteredHour);\n    }\n\n    this.propagateModelChange();\n  }\n\n  updateMinute(newVal) {\n    this.model.updateMinute(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  updateSecond(newVal) {\n    this.model.updateSecond(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  toggleMeridian() {\n    if (this.meridian) {\n      this.changeHour(12);\n    }\n  }\n\n  formatInput(input) {\n    input.value = input.value.replace(FILTER_REGEX, '');\n  }\n\n  formatHour(value) {\n    if (isNumber(value)) {\n      if (this.meridian) {\n        return padNumber(value % 12 === 0 ? 12 : value % 12);\n      } else {\n        return padNumber(value % 24);\n      }\n    } else {\n      return padNumber(NaN);\n    }\n  }\n\n  formatMinSec(value) {\n    return padNumber(isNumber(value) ? value : NaN);\n  }\n\n  get isSmallSize() {\n    return this.size === 'small';\n  }\n\n  get isLargeSize() {\n    return this.size === 'large';\n  }\n\n  ngOnChanges(changes) {\n    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n      this.model.second = 0;\n      this.propagateModelChange(false);\n    }\n  }\n\n  propagateModelChange(touched = true) {\n    if (touched) {\n      this.onTouched();\n    }\n\n    if (this.model.isValid(this.seconds)) {\n      this.onChange(this._ngbTimeAdapter.toModel({\n        hour: this.model.hour,\n        minute: this.model.minute,\n        second: this.model.second\n      }));\n    } else {\n      this.onChange(this._ngbTimeAdapter.toModel(null));\n    }\n  }\n\n}\n\nNgbTimepicker.ɵfac = function NgbTimepicker_Factory(t) {\n  return new (t || NgbTimepicker)(ɵngcc0.ɵɵdirectiveInject(NgbTimepickerConfig), ɵngcc0.ɵɵdirectiveInject(NgbTimeAdapter), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NgbTimepickerI18n));\n};\n\nNgbTimepicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbTimepicker,\n  selectors: [[\"ngb-timepicker\"]],\n  inputs: {\n    meridian: \"meridian\",\n    spinners: \"spinners\",\n    seconds: \"seconds\",\n    hourStep: \"hourStep\",\n    minuteStep: \"minuteStep\",\n    secondStep: \"secondStep\",\n    readonlyInputs: \"readonlyInputs\",\n    size: \"size\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([NGB_TIMEPICKER_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 16,\n  vars: 25,\n  consts: function () {\n    let i18n_56;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_timepicker_HH$$FESM2015_NG_BOOTSTRAP_JS_57 = goog.getMsg(\"HH\");\n      i18n_56 = MSG_EXTERNAL_ngb_timepicker_HH$$FESM2015_NG_BOOTSTRAP_JS_57;\n    } else {\n      i18n_56 = $localize`:@@ngb.timepicker.HH␟ce676ab1d6d98f85c836381cf100a4a91ef95a1f␟4043638465245303811:HH`;\n    }\n\n    let i18n_58;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_timepicker_hours$$FESM2015_NG_BOOTSTRAP_JS_59 = goog.getMsg(\"Hours\");\n      i18n_58 = MSG_EXTERNAL_ngb_timepicker_hours$$FESM2015_NG_BOOTSTRAP_JS_59;\n    } else {\n      i18n_58 = $localize`:@@ngb.timepicker.hours␟3bbce5fef7e1151da052a4e529453edb340e3912␟8070396816726827304:Hours`;\n    }\n\n    let i18n_60;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_timepicker_MM$$FESM2015_NG_BOOTSTRAP_JS_61 = goog.getMsg(\"MM\");\n      i18n_60 = MSG_EXTERNAL_ngb_timepicker_MM$$FESM2015_NG_BOOTSTRAP_JS_61;\n    } else {\n      i18n_60 = $localize`:@@ngb.timepicker.MM␟72c8edf6a50068a05bde70991e36b1e881f4ca54␟1647282246509919852:MM`;\n    }\n\n    let i18n_62;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_timepicker_minutes$$FESM2015_NG_BOOTSTRAP_JS_63 = goog.getMsg(\"Minutes\");\n      i18n_62 = MSG_EXTERNAL_ngb_timepicker_minutes$$FESM2015_NG_BOOTSTRAP_JS_63;\n    } else {\n      i18n_62 = $localize`:@@ngb.timepicker.minutes␟41e62daa962947c0d23ded0981975d1bddf0bf38␟5531237363767747080:Minutes`;\n    }\n\n    let i18n_64;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_timepicker_increment_hours$$FESM2015_NG_BOOTSTRAP_JS__65 = goog.getMsg(\"Increment hours\");\n      i18n_64 = MSG_EXTERNAL_ngb_timepicker_increment_hours$$FESM2015_NG_BOOTSTRAP_JS__65;\n    } else {\n      i18n_64 = $localize`:@@ngb.timepicker.increment-hours␟cb74bc1d625a6c1742f0d7d47306cf495780c218␟5939278348542933629:Increment hours`;\n    }\n\n    let i18n_66;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_timepicker_decrement_hours$$FESM2015_NG_BOOTSTRAP_JS__67 = goog.getMsg(\"Decrement hours\");\n      i18n_66 = MSG_EXTERNAL_ngb_timepicker_decrement_hours$$FESM2015_NG_BOOTSTRAP_JS__67;\n    } else {\n      i18n_66 = $localize`:@@ngb.timepicker.decrement-hours␟147c7a19429da7d999e247d22e33fee370b1691b␟3651829882940481818:Decrement hours`;\n    }\n\n    let i18n_68;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_timepicker_increment_minutes$$FESM2015_NG_BOOTSTRAP_JS__69 = goog.getMsg(\"Increment minutes\");\n      i18n_68 = MSG_EXTERNAL_ngb_timepicker_increment_minutes$$FESM2015_NG_BOOTSTRAP_JS__69;\n    } else {\n      i18n_68 = $localize`:@@ngb.timepicker.increment-minutes␟f5a4a3bc05e053f6732475d0e74875ec01c3a348␟180147720391025024:Increment minutes`;\n    }\n\n    let i18n_70;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_timepicker_decrement_minutes$$FESM2015_NG_BOOTSTRAP_JS__71 = goog.getMsg(\"Decrement minutes\");\n      i18n_70 = MSG_EXTERNAL_ngb_timepicker_decrement_minutes$$FESM2015_NG_BOOTSTRAP_JS__71;\n    } else {\n      i18n_70 = $localize`:@@ngb.timepicker.decrement-minutes␟c1a6899e529c096da5b660385d4e77fe1f7ad271␟7447789825403243588:Decrement minutes`;\n    }\n\n    let i18n_72;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_timepicker_SS$$FESM2015_NG_BOOTSTRAP_JS__73 = goog.getMsg(\"SS\");\n      i18n_72 = MSG_EXTERNAL_ngb_timepicker_SS$$FESM2015_NG_BOOTSTRAP_JS__73;\n    } else {\n      i18n_72 = $localize`:@@ngb.timepicker.SS␟ebe38d36a40a2383c5fefa9b4608ffbda08bd4a3␟3628127143071124194:SS`;\n    }\n\n    let i18n_74;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_timepicker_seconds$$FESM2015_NG_BOOTSTRAP_JS__75 = goog.getMsg(\"Seconds\");\n      i18n_74 = MSG_EXTERNAL_ngb_timepicker_seconds$$FESM2015_NG_BOOTSTRAP_JS__75;\n    } else {\n      i18n_74 = $localize`:@@ngb.timepicker.seconds␟4f2ed9e71a7c981db3e50ae2fedb28aff2ec4e6c␟8874012390997067175:Seconds`;\n    }\n\n    let i18n_76;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_timepicker_increment_seconds$$FESM2015_NG_BOOTSTRAP_JS___77 = goog.getMsg(\"Increment seconds\");\n      i18n_76 = MSG_EXTERNAL_ngb_timepicker_increment_seconds$$FESM2015_NG_BOOTSTRAP_JS___77;\n    } else {\n      i18n_76 = $localize`:@@ngb.timepicker.increment-seconds␟912322ecee7d659d04dcf494a70e22e49d334b26␟5364772110539092174:Increment seconds`;\n    }\n\n    let i18n_78;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_timepicker_decrement_seconds$$FESM2015_NG_BOOTSTRAP_JS___79 = goog.getMsg(\"Decrement seconds\");\n      i18n_78 = MSG_EXTERNAL_ngb_timepicker_decrement_seconds$$FESM2015_NG_BOOTSTRAP_JS___79;\n    } else {\n      i18n_78 = $localize`:@@ngb.timepicker.decrement-seconds␟5db47ac104294243a70eb9124fbea9d0004ddf69␟753633511487974857:Decrement seconds`;\n    }\n\n    let i18n_80;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_timepicker_PM$$FESM2015_NG_BOOTSTRAP_JS___81 = goog.getMsg(\"{$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_80 = MSG_EXTERNAL_ngb_timepicker_PM$$FESM2015_NG_BOOTSTRAP_JS___81;\n    } else {\n      i18n_80 = $localize`:@@ngb.timepicker.PM␟8d6e691e10306c1b34c6b26805151aaea320ef7f␟3564199131264287502:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n    }\n\n    let i18n_82;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_timepicker_AM$$FESM2015_NG_BOOTSTRAP_JS___83 = goog.getMsg(\"{$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_82 = MSG_EXTERNAL_ngb_timepicker_AM$$FESM2015_NG_BOOTSTRAP_JS___83;\n    } else {\n      i18n_82 = $localize`:@@ngb.timepicker.AM␟69a1f176a93998876952adac57c3bc3863b6105e␟4592818992509942761:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n    }\n\n    return [[3, \"disabled\"], [1, \"ngb-tp\"], [1, \"ngb-tp-input-container\", \"ngb-tp-hour\"], [\"tabindex\", \"-1\", \"type\", \"button\", \"class\", \"btn btn-link\", 3, \"btn-sm\", \"btn-lg\", \"disabled\", \"click\", 4, \"ngIf\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_56, \"aria-label\", i18n_58, 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\"], [1, \"ngb-tp-spacer\"], [1, \"ngb-tp-input-container\", \"ngb-tp-minute\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_60, \"aria-label\", i18n_62, 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\"], [\"class\", \"ngb-tp-spacer\", 4, \"ngIf\"], [\"class\", \"ngb-tp-input-container ngb-tp-second\", 4, \"ngIf\"], [\"class\", \"ngb-tp-meridian\", 4, \"ngIf\"], [\"tabindex\", \"-1\", \"type\", \"button\", 1, \"btn\", \"btn-link\", 3, \"disabled\", \"click\"], [1, \"chevron\", \"ngb-tp-chevron\"], [1, \"sr-only\"], i18n_64, [1, \"chevron\", \"ngb-tp-chevron\", \"bottom\"], i18n_66, i18n_68, i18n_70, [1, \"ngb-tp-input-container\", \"ngb-tp-second\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_72, \"aria-label\", i18n_74, 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\"], i18n_76, i18n_78, [1, \"ngb-tp-meridian\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", 3, \"disabled\", \"click\"], [4, \"ngIf\", \"ngIfElse\"], [\"am\", \"\"], i18n_80, i18n_82];\n  },\n  template: function NgbTimepicker_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"fieldset\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(3, NgbTimepicker_button_3_Template, 4, 7, \"button\", 3);\n      ɵngcc0.ɵɵelementStart(4, \"input\", 4);\n      ɵngcc0.ɵɵlistener(\"change\", function NgbTimepicker_Template_input_change_4_listener($event) {\n        return ctx.updateHour($event.target.value);\n      })(\"input\", function NgbTimepicker_Template_input_input_4_listener($event) {\n        return ctx.formatInput($event.target);\n      })(\"keydown.ArrowUp\", function NgbTimepicker_Template_input_keydown_ArrowUp_4_listener($event) {\n        ctx.changeHour(ctx.hourStep);\n        return $event.preventDefault();\n      })(\"keydown.ArrowDown\", function NgbTimepicker_Template_input_keydown_ArrowDown_4_listener($event) {\n        ctx.changeHour(-ctx.hourStep);\n        return $event.preventDefault();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(5, NgbTimepicker_button_5_Template, 4, 7, \"button\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n      ɵngcc0.ɵɵtext(7, \":\");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(8, \"div\", 6);\n      ɵngcc0.ɵɵtemplate(9, NgbTimepicker_button_9_Template, 4, 7, \"button\", 3);\n      ɵngcc0.ɵɵelementStart(10, \"input\", 7);\n      ɵngcc0.ɵɵlistener(\"change\", function NgbTimepicker_Template_input_change_10_listener($event) {\n        return ctx.updateMinute($event.target.value);\n      })(\"input\", function NgbTimepicker_Template_input_input_10_listener($event) {\n        return ctx.formatInput($event.target);\n      })(\"keydown.ArrowUp\", function NgbTimepicker_Template_input_keydown_ArrowUp_10_listener($event) {\n        ctx.changeMinute(ctx.minuteStep);\n        return $event.preventDefault();\n      })(\"keydown.ArrowDown\", function NgbTimepicker_Template_input_keydown_ArrowDown_10_listener($event) {\n        ctx.changeMinute(-ctx.minuteStep);\n        return $event.preventDefault();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(11, NgbTimepicker_button_11_Template, 4, 7, \"button\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(12, NgbTimepicker_div_12_Template, 2, 0, \"div\", 8);\n      ɵngcc0.ɵɵtemplate(13, NgbTimepicker_div_13_Template, 4, 9, \"div\", 9);\n      ɵngcc0.ɵɵtemplate(14, NgbTimepicker_div_14_Template, 1, 0, \"div\", 8);\n      ɵngcc0.ɵɵtemplate(15, NgbTimepicker_div_15_Template, 5, 9, \"div\", 10);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.spinners);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx.isSmallSize)(\"form-control-lg\", ctx.isLargeSize);\n      ɵngcc0.ɵɵproperty(\"value\", ctx.formatHour(ctx.model == null ? null : ctx.model.hour))(\"readOnly\", ctx.readonlyInputs)(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.spinners);\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.spinners);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx.isSmallSize)(\"form-control-lg\", ctx.isLargeSize);\n      ɵngcc0.ɵɵproperty(\"value\", ctx.formatMinSec(ctx.model == null ? null : ctx.model.minute))(\"readOnly\", ctx.readonlyInputs)(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.spinners);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.seconds);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.seconds);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.meridian);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.meridian);\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{-ms-flex-align:center;align-items:center;display:-ms-flexbox;display:flex}.ngb-tp-input-container{width:4em}.ngb-tp-chevron:before{-webkit-transform:rotate(-45deg);border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{-webkit-transform:rotate(135deg);top:-.3em;transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-meridian,.ngb-tp-minute,.ngb-tp-second{-ms-flex-align:center;-ms-flex-direction:column;-ms-flex-pack:distribute;align-items:center;display:-ms-flexbox;display:flex;flex-direction:column;justify-content:space-around}.ngb-tp-spacer{text-align:center;width:1em}\"],\n  encapsulation: 2\n});\n\nNgbTimepicker.ctorParameters = () => [{\n  type: NgbTimepickerConfig\n}, {\n  type: NgbTimeAdapter\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: NgbTimepickerI18n\n}];\n\nNgbTimepicker.propDecorators = {\n  meridian: [{\n    type: Input\n  }],\n  spinners: [{\n    type: Input\n  }],\n  seconds: [{\n    type: Input\n  }],\n  hourStep: [{\n    type: Input\n  }],\n  minuteStep: [{\n    type: Input\n  }],\n  secondStep: [{\n    type: Input\n  }],\n  readonlyInputs: [{\n    type: Input\n  }],\n  size: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTimepicker, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-timepicker',\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\"\n            [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($any($event).target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\"\n            (input)=\"formatInput($any($event).target)\"\n            (keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(-hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($any($event).target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\"\n            (input)=\"formatInput($any($event).target)\"\n            (keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($any($event).target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\"\n            (input)=\"formatInput($any($event).target)\"\n            (keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model && model.hour >= 12; else am\"\n                          i18n=\"@@ngb.timepicker.PM\">{{ i18n.getAfternoonPeriod() }}</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">{{ i18n.getMorningPeriod() }}</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  `,\n      providers: [NGB_TIMEPICKER_VALUE_ACCESSOR],\n      styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{-ms-flex-align:center;align-items:center;display:-ms-flexbox;display:flex}.ngb-tp-input-container{width:4em}.ngb-tp-chevron:before{-webkit-transform:rotate(-45deg);border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{-webkit-transform:rotate(135deg);top:-.3em;transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-meridian,.ngb-tp-minute,.ngb-tp-second{-ms-flex-align:center;-ms-flex-direction:column;-ms-flex-pack:distribute;align-items:center;display:-ms-flexbox;display:flex;flex-direction:column;justify-content:space-around}.ngb-tp-spacer{text-align:center;width:1em}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbTimepickerConfig\n    }, {\n      type: NgbTimeAdapter\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: NgbTimepickerI18n\n    }];\n  }, {\n    meridian: [{\n      type: Input\n    }],\n    spinners: [{\n      type: Input\n    }],\n    seconds: [{\n      type: Input\n    }],\n    hourStep: [{\n      type: Input\n    }],\n    minuteStep: [{\n      type: Input\n    }],\n    secondStep: [{\n      type: Input\n    }],\n    readonlyInputs: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgbTimepickerModule {}\n\nNgbTimepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbTimepickerModule\n});\nNgbTimepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbTimepickerModule_Factory(t) {\n    return new (t || NgbTimepickerModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbTimepickerModule, {\n    declarations: function () {\n      return [NgbTimepicker];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [NgbTimepicker];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTimepickerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbTimepicker],\n      exports: [NgbTimepicker],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n * and customize the values of its properties in order to provide default values for all the toasts used in the\n * application.\n *\n * @since 5.0.0\n */\n\n\nclass NgbToastConfig {\n  constructor(ngbConfig) {\n    this.autohide = true;\n    this.delay = 500;\n    this.ariaLive = 'polite';\n    this.animation = ngbConfig.animation;\n  }\n\n}\n\nNgbToastConfig.ɵfac = function NgbToastConfig_Factory(t) {\n  return new (t || NgbToastConfig)(ɵngcc0.ɵɵinject(NgbConfig));\n};\n\nNgbToastConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbToastConfig_Factory() {\n    return new NgbToastConfig(ɵɵinject(NgbConfig));\n  },\n  token: NgbToastConfig,\n  providedIn: \"root\"\n});\n\nNgbToastConfig.ctorParameters = () => [{\n  type: NgbConfig\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbToastConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nconst ngbToastFadeInTransition = ({\n  classList\n}) => {\n  classList.remove('hide');\n  classList.add('showing');\n  return () => {\n    classList.remove('showing');\n    classList.add('show');\n  };\n};\n\nconst ngbToastFadeOutTransition = ({\n  classList\n}) => {\n  classList.remove('show');\n  return () => {\n    classList.add('hide');\n  };\n};\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * @since 5.0.0\n */\n\n\nclass NgbToastHeader {}\n\nNgbToastHeader.ɵfac = function NgbToastHeader_Factory(t) {\n  return new (t || NgbToastHeader)();\n};\n\nNgbToastHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbToastHeader,\n  selectors: [[\"\", \"ngbToastHeader\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbToastHeader, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbToastHeader]'\n    }]\n  }], null, null);\n})();\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * @since 5.0.0\n */\n\n\nclass NgbToast {\n  constructor(ariaLive, config, _zone, _element) {\n    this.ariaLive = ariaLive;\n    this._zone = _zone;\n    this._element = _element;\n    /**\n     * A template like `<ng-template ngbToastHeader></ng-template>` can be\n     * used in the projected content to allow markup usage.\n     */\n\n    this.contentHeaderTpl = null;\n    /**\n     * An event fired after the animation triggered by calling `.show()` method has finished.\n     *\n     * @since 8.0.0\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event fired after the animation triggered by calling `.hide()` method has finished.\n     *\n     * It can only occur in 2 different scenarios:\n     * - `autohide` timeout fires\n     * - user clicks on a closing cross\n     *\n     * Additionally this output is purely informative. The toast won't be removed from DOM automatically, it's up\n     * to the user to take care of that.\n     *\n     * @since 8.0.0\n     */\n\n    this.hidden = new EventEmitter();\n\n    if (this.ariaLive == null) {\n      this.ariaLive = config.ariaLive;\n    }\n\n    this.delay = config.delay;\n    this.autohide = config.autohide;\n    this.animation = config.animation;\n  }\n\n  ngAfterContentInit() {\n    this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      this._init();\n\n      this.show();\n    });\n  }\n\n  ngOnChanges(changes) {\n    if ('autohide' in changes) {\n      this._clearTimeout();\n\n      this._init();\n    }\n  }\n  /**\n   * Triggers toast closing programmatically.\n   *\n   * The returned observable will emit and be completed once the closing transition has finished.\n   * If the animations are turned off this happens synchronously.\n   *\n   * Alternatively you could listen or subscribe to the `(hidden)` output\n   *\n   * @since 8.0.0\n   */\n\n\n  hide() {\n    this._clearTimeout();\n\n    const transition = ngbRunTransition(this._element.nativeElement, ngbToastFadeOutTransition, {\n      animation: this.animation,\n      runningTransition: 'stop'\n    });\n    transition.subscribe(() => {\n      this.hidden.emit();\n    });\n    return transition;\n  }\n  /**\n   * Triggers toast opening programmatically.\n   *\n   * The returned observable will emit and be completed once the opening transition has finished.\n   * If the animations are turned off this happens synchronously.\n   *\n   * Alternatively you could listen or subscribe to the `(shown)` output\n   *\n   * @since 8.0.0\n   */\n\n\n  show() {\n    const transition = ngbRunTransition(this._element.nativeElement, ngbToastFadeInTransition, {\n      animation: this.animation,\n      runningTransition: 'continue'\n    });\n    transition.subscribe(() => {\n      this.shown.emit();\n    });\n    return transition;\n  }\n\n  _init() {\n    if (this.autohide && !this._timeoutID) {\n      this._timeoutID = setTimeout(() => this.hide(), this.delay);\n    }\n  }\n\n  _clearTimeout() {\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n  }\n\n}\n\nNgbToast.ɵfac = function NgbToast_Factory(t) {\n  return new (t || NgbToast)(ɵngcc0.ɵɵinjectAttribute('aria-live'), ɵngcc0.ɵɵdirectiveInject(NgbToastConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbToast.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbToast,\n  selectors: [[\"ngb-toast\"]],\n  contentQueries: function NgbToast_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbToastHeader, 3, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentHeaderTpl = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"alert\", \"aria-atomic\", \"true\", 1, \"toast\"],\n  hostVars: 3,\n  hostBindings: function NgbToast_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-live\", ctx.ariaLive);\n      ɵngcc0.ɵɵclassProp(\"fade\", ctx.animation);\n    }\n  },\n  inputs: {\n    delay: \"delay\",\n    autohide: \"autohide\",\n    animation: \"animation\",\n    header: \"header\"\n  },\n  outputs: {\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbToast\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c3,\n  decls: 5,\n  vars: 1,\n  consts: function () {\n    let i18n_84;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_ngb_toast_close_aria$$FESM2015_NG_BOOTSTRAP_JS__85 = goog.getMsg(\"Close\");\n      i18n_84 = MSG_EXTERNAL_ngb_toast_close_aria$$FESM2015_NG_BOOTSTRAP_JS__85;\n    } else {\n      i18n_84 = $localize`:@@ngb.toast.close-aria␟f4e529ae5ffd73001d1ff4bbdeeb0a72e342e5c8␟7819314041543176992:Close`;\n    }\n\n    return [[\"headerTpl\", \"\"], [3, \"ngIf\"], [1, \"toast-body\"], [1, \"mr-auto\"], [1, \"toast-header\"], [3, \"ngTemplateOutlet\"], [\"type\", \"button\", \"aria-label\", i18n_84, 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"]];\n  },\n  template: function NgbToast_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, NgbToast_ng_template_0_Template, 2, 1, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbToast_ng_template_2_Template, 5, 1, \"ng-template\", 1);\n      ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n      ɵngcc0.ɵɵprojection(4);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.contentHeaderTpl || ctx.header);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  styles: [\".ngb-toasts{margin:.5em;position:fixed;right:0;top:0;z-index:1200}ngb-toast{display:block}ngb-toast .toast-header .close{margin-bottom:.25rem;margin-left:auto}\"],\n  encapsulation: 2\n});\n\nNgbToast.ctorParameters = () => [{\n  type: String,\n  decorators: [{\n    type: Attribute,\n    args: ['aria-live']\n  }]\n}, {\n  type: NgbToastConfig\n}, {\n  type: NgZone\n}, {\n  type: ElementRef\n}];\n\nNgbToast.propDecorators = {\n  animation: [{\n    type: Input\n  }],\n  delay: [{\n    type: Input\n  }],\n  autohide: [{\n    type: Input\n  }],\n  header: [{\n    type: Input\n  }],\n  contentHeaderTpl: [{\n    type: ContentChild,\n    args: [NgbToastHeader, {\n      read: TemplateRef,\n      static: true\n    }]\n  }],\n  shown: [{\n    type: Output\n  }],\n  hidden: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbToast, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-toast',\n      exportAs: 'ngbToast',\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'role': 'alert',\n        '[attr.aria-live]': 'ariaLive',\n        'aria-atomic': 'true',\n        'class': 'toast',\n        '[class.fade]': 'animation'\n      },\n      template: `\n    <ng-template #headerTpl>\n      <strong class=\"mr-auto\">{{header}}</strong>\n    </ng-template>\n    <ng-template [ngIf]=\"contentHeaderTpl || header\">\n      <div class=\"toast-header\">\n        <ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\"></ng-template>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.toast.close-aria\" (click)=\"hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n    </ng-template>\n    <div class=\"toast-body\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      styles: [\".ngb-toasts{margin:.5em;position:fixed;right:0;top:0;z-index:1200}ngb-toast{display:block}ngb-toast .toast-header .close{margin-bottom:.25rem;margin-left:auto}\"]\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['aria-live']\n      }]\n    }, {\n      type: NgbToastConfig\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    contentHeaderTpl: [{\n      type: ContentChild,\n      args: [NgbToastHeader, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    delay: [{\n      type: Input\n    }],\n    autohide: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }],\n    header: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgbToastModule {}\n\nNgbToastModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbToastModule\n});\nNgbToastModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbToastModule_Factory(t) {\n    return new (t || NgbToastModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbToastModule, {\n    declarations: function () {\n      return [NgbToast, NgbToastHeader];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [NgbToast, NgbToastHeader];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbToastModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbToast, NgbToastHeader],\n      imports: [CommonModule],\n      exports: [NgbToast, NgbToastHeader]\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\n\n\nclass NgbTooltipConfig {\n  constructor(ngbConfig) {\n    this.autoClose = true;\n    this.placement = 'auto';\n    this.triggers = 'hover focus';\n    this.disableTooltip = false;\n    this.openDelay = 0;\n    this.closeDelay = 0;\n    this.animation = ngbConfig.animation;\n  }\n\n}\n\nNgbTooltipConfig.ɵfac = function NgbTooltipConfig_Factory(t) {\n  return new (t || NgbTooltipConfig)(ɵngcc0.ɵɵinject(NgbConfig));\n};\n\nNgbTooltipConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbTooltipConfig_Factory() {\n    return new NgbTooltipConfig(ɵɵinject(NgbConfig));\n  },\n  token: NgbTooltipConfig,\n  providedIn: \"root\"\n});\n\nNgbTooltipConfig.ctorParameters = () => [{\n  type: NgbConfig\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTooltipConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nlet nextId$4 = 0;\n\nclass NgbTooltipWindow {}\n\nNgbTooltipWindow.ɵfac = function NgbTooltipWindow_Factory(t) {\n  return new (t || NgbTooltipWindow)();\n};\n\nNgbTooltipWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbTooltipWindow,\n  selectors: [[\"ngb-tooltip-window\"]],\n  hostAttrs: [\"role\", \"tooltip\"],\n  hostVars: 5,\n  hostBindings: function NgbTooltipWindow_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n      ɵngcc0.ɵɵclassMap(\"tooltip\" + (ctx.tooltipClass ? \" \" + ctx.tooltipClass : \"\"));\n      ɵngcc0.ɵɵclassProp(\"fade\", ctx.animation);\n    }\n  },\n  inputs: {\n    animation: \"animation\",\n    id: \"id\",\n    tooltipClass: \"tooltipClass\"\n  },\n  ngContentSelectors: _c3,\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"arrow\"], [1, \"tooltip-inner\"]],\n  template: function NgbTooltipWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelement(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"ngb-tooltip-window.bs-tooltip-bottom .arrow,ngb-tooltip-window.bs-tooltip-top .arrow{left:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-bottom-left .arrow,ngb-tooltip-window.bs-tooltip-top-left .arrow{left:1em}ngb-tooltip-window.bs-tooltip-bottom-right .arrow,ngb-tooltip-window.bs-tooltip-top-right .arrow{left:auto;right:.8rem}ngb-tooltip-window.bs-tooltip-left .arrow,ngb-tooltip-window.bs-tooltip-right .arrow{top:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-left-top .arrow,ngb-tooltip-window.bs-tooltip-right-top .arrow{top:.4rem}ngb-tooltip-window.bs-tooltip-left-bottom .arrow,ngb-tooltip-window.bs-tooltip-right-bottom .arrow{bottom:.4rem;top:auto}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNgbTooltipWindow.propDecorators = {\n  animation: [{\n    type: Input\n  }],\n  id: [{\n    type: Input\n  }],\n  tooltipClass: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTooltipWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-tooltip-window',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class]': '\"tooltip\" + (tooltipClass ? \" \" + tooltipClass : \"\")',\n        '[class.fade]': 'animation',\n        'role': 'tooltip',\n        '[id]': 'id'\n      },\n      template: `<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`,\n      styles: [\"ngb-tooltip-window.bs-tooltip-bottom .arrow,ngb-tooltip-window.bs-tooltip-top .arrow{left:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-bottom-left .arrow,ngb-tooltip-window.bs-tooltip-top-left .arrow{left:1em}ngb-tooltip-window.bs-tooltip-bottom-right .arrow,ngb-tooltip-window.bs-tooltip-top-right .arrow{left:auto;right:.8rem}ngb-tooltip-window.bs-tooltip-left .arrow,ngb-tooltip-window.bs-tooltip-right .arrow{top:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-left-top .arrow,ngb-tooltip-window.bs-tooltip-right-top .arrow{top:.4rem}ngb-tooltip-window.bs-tooltip-left-bottom .arrow,ngb-tooltip-window.bs-tooltip-right-bottom .arrow{bottom:.4rem;top:auto}\"]\n    }]\n  }], null, {\n    animation: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    tooltipClass: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\n\n\nclass NgbTooltip {\n  constructor(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef) {\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._ngZone = _ngZone;\n    this._document = _document;\n    this._changeDetector = _changeDetector;\n    /**\n     * An event emitted when the tooltip opening animation has finished. Contains no payload.\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the tooltip closing animation has finished. Contains no payload.\n     */\n\n    this.hidden = new EventEmitter();\n    this._ngbTooltipWindowId = `ngb-tooltip-${nextId$4++}`;\n    this._windowRef = null;\n    this.animation = config.animation;\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disableTooltip = config.disableTooltip;\n    this.tooltipClass = config.tooltipClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService(NgbTooltipWindow, injector, viewContainerRef, _renderer, this._ngZone, componentFactoryResolver, applicationRef);\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body', 'bs-tooltip');\n      }\n    });\n  }\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n   *\n   * If the content if falsy, the tooltip won't open.\n   */\n\n\n  set ngbTooltip(value) {\n    this._ngbTooltip = value;\n\n    if (!value && this._windowRef) {\n      this.close();\n    }\n  }\n\n  get ngbTooltip() {\n    return this._ngbTooltip;\n  }\n  /**\n   * Opens the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the tooltip template when it is created.\n   */\n\n\n  open(context) {\n    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n      const {\n        windowRef,\n        transition$\n      } = this._popupService.open(this._ngbTooltip, context, this.animation);\n\n      this._windowRef = windowRef;\n      this._windowRef.instance.animation = this.animation;\n      this._windowRef.instance.tooltipClass = this.tooltipClass;\n      this._windowRef.instance.id = this._ngbTooltipWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      } // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n\n\n      this._windowRef.changeDetectorRef.detectChanges(); // We need to mark for check, because tooltip won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the tooltip from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n\n\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [this._windowRef.location.nativeElement]);\n      transition$.subscribe(() => this.shown.emit());\n    }\n  }\n  /**\n   * Closes the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n\n\n  close() {\n    if (this._windowRef != null) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n\n      this._popupService.close(this.animation).subscribe(() => {\n        this._windowRef = null;\n        this.hidden.emit();\n\n        this._changeDetector.markForCheck();\n      });\n    }\n  }\n  /**\n   * Toggles the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n\n\n  toggle() {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n\n\n  isOpen() {\n    return this._windowRef != null;\n  }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({\n    tooltipClass\n  }) {\n    if (tooltipClass && this.isOpen()) {\n      this._windowRef.instance.tooltipClass = tooltipClass.currentValue;\n    }\n  }\n\n  ngOnDestroy() {\n    this.close(); // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n\n    this._zoneSubscription.unsubscribe();\n  }\n\n}\n\nNgbTooltip.ɵfac = function NgbTooltip_Factory(t) {\n  return new (t || NgbTooltip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(NgbTooltipConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef));\n};\n\nNgbTooltip.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbTooltip,\n  selectors: [[\"\", \"ngbTooltip\", \"\"]],\n  inputs: {\n    animation: \"animation\",\n    autoClose: \"autoClose\",\n    placement: \"placement\",\n    triggers: \"triggers\",\n    container: \"container\",\n    disableTooltip: \"disableTooltip\",\n    tooltipClass: \"tooltipClass\",\n    openDelay: \"openDelay\",\n    closeDelay: \"closeDelay\",\n    ngbTooltip: \"ngbTooltip\"\n  },\n  outputs: {\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbTooltip\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNgbTooltip.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Renderer2\n}, {\n  type: Injector\n}, {\n  type: ComponentFactoryResolver\n}, {\n  type: ViewContainerRef\n}, {\n  type: NgbTooltipConfig\n}, {\n  type: NgZone\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ApplicationRef\n}];\n\nNgbTooltip.propDecorators = {\n  animation: [{\n    type: Input\n  }],\n  autoClose: [{\n    type: Input\n  }],\n  placement: [{\n    type: Input\n  }],\n  triggers: [{\n    type: Input\n  }],\n  container: [{\n    type: Input\n  }],\n  disableTooltip: [{\n    type: Input\n  }],\n  tooltipClass: [{\n    type: Input\n  }],\n  openDelay: [{\n    type: Input\n  }],\n  closeDelay: [{\n    type: Input\n  }],\n  shown: [{\n    type: Output\n  }],\n  hidden: [{\n    type: Output\n  }],\n  ngbTooltip: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTooltip, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbTooltip]',\n      exportAs: 'ngbTooltip'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: NgbTooltipConfig\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ApplicationRef\n    }];\n  }, {\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    animation: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    triggers: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    disableTooltip: [{\n      type: Input\n    }],\n    tooltipClass: [{\n      type: Input\n    }],\n    openDelay: [{\n      type: Input\n    }],\n    closeDelay: [{\n      type: Input\n    }],\n    ngbTooltip: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgbTooltipModule {}\n\nNgbTooltipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbTooltipModule\n});\nNgbTooltipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbTooltipModule_Factory(t) {\n    return new (t || NgbTooltipModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbTooltipModule, {\n    declarations: [NgbTooltip, NgbTooltipWindow],\n    exports: [NgbTooltip]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTooltipModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbTooltip, NgbTooltipWindow],\n      exports: [NgbTooltip],\n      entryComponents: [NgbTooltipWindow]\n    }]\n  }], null, null);\n})();\n/**\n * A component that helps with text highlighting.\n *\n * If splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\n\n\nclass NgbHighlight {\n  constructor() {\n    /**\n     * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n     */\n    this.highlightClass = 'ngb-highlight';\n  }\n\n  ngOnChanges(changes) {\n    const result = toString(this.result);\n    const terms = Array.isArray(this.term) ? this.term : [this.term];\n    const escapedTerms = terms.map(term => regExpEscape(toString(term))).filter(term => term);\n    this.parts = escapedTerms.length ? result.split(new RegExp(`(${escapedTerms.join('|')})`, 'gmi')) : [result];\n  }\n\n}\n\nNgbHighlight.ɵfac = function NgbHighlight_Factory(t) {\n  return new (t || NgbHighlight)();\n};\n\nNgbHighlight.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbHighlight,\n  selectors: [[\"ngb-highlight\"]],\n  inputs: {\n    highlightClass: \"highlightClass\",\n    result: \"result\",\n    term: \"term\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"ngFor\", \"\", 3, \"ngForOf\"], [3, \"class\", 4, \"ngIf\", \"ngIfElse\"], [\"even\", \"\"]],\n  template: function NgbHighlight_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbHighlight_ng_template_0_Template, 3, 2, \"ng-template\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.parts);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf],\n  styles: [\".ngb-highlight{font-weight:700}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNgbHighlight.propDecorators = {\n  highlightClass: [{\n    type: Input\n  }],\n  result: [{\n    type: Input\n  }],\n  term: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbHighlight, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-highlight',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` + `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` + `</ng-template>`,\n      styles: [\".ngb-highlight{font-weight:700}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    highlightClass: [{\n      type: Input\n    }],\n    result: [{\n      type: Input\n    }],\n    term: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgbTypeaheadWindow {\n  constructor() {\n    this.activeIdx = 0;\n    /**\n     * Flag indicating if the first row should be active initially\n     */\n\n    this.focusFirst = true;\n    /**\n     * A function used to format a given result before display. This function should return a formatted string without any\n     * HTML markup\n     */\n\n    this.formatter = toString;\n    /**\n     * Event raised when user selects a particular result row\n     */\n\n    this.selectEvent = new EventEmitter();\n    this.activeChangeEvent = new EventEmitter();\n  }\n\n  hasActive() {\n    return this.activeIdx > -1 && this.activeIdx < this.results.length;\n  }\n\n  getActive() {\n    return this.results[this.activeIdx];\n  }\n\n  markActive(activeIdx) {\n    this.activeIdx = activeIdx;\n\n    this._activeChanged();\n  }\n\n  next() {\n    if (this.activeIdx === this.results.length - 1) {\n      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n    } else {\n      this.activeIdx++;\n    }\n\n    this._activeChanged();\n  }\n\n  prev() {\n    if (this.activeIdx < 0) {\n      this.activeIdx = this.results.length - 1;\n    } else if (this.activeIdx === 0) {\n      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n    } else {\n      this.activeIdx--;\n    }\n\n    this._activeChanged();\n  }\n\n  resetActive() {\n    this.activeIdx = this.focusFirst ? 0 : -1;\n\n    this._activeChanged();\n  }\n\n  select(item) {\n    this.selectEvent.emit(item);\n  }\n\n  ngOnInit() {\n    this.resetActive();\n  }\n\n  _activeChanged() {\n    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n  }\n\n}\n\nNgbTypeaheadWindow.ɵfac = function NgbTypeaheadWindow_Factory(t) {\n  return new (t || NgbTypeaheadWindow)();\n};\n\nNgbTypeaheadWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbTypeaheadWindow,\n  selectors: [[\"ngb-typeahead-window\"]],\n  hostAttrs: [\"role\", \"listbox\", 1, \"dropdown-menu\", \"show\"],\n  hostVars: 1,\n  hostBindings: function NgbTypeaheadWindow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"mousedown\", function NgbTypeaheadWindow_mousedown_HostBindingHandler($event) {\n        return $event.preventDefault();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n    }\n  },\n  inputs: {\n    focusFirst: \"focusFirst\",\n    formatter: \"formatter\",\n    id: \"id\",\n    results: \"results\",\n    term: \"term\",\n    resultTemplate: \"resultTemplate\"\n  },\n  outputs: {\n    selectEvent: \"select\",\n    activeChangeEvent: \"activeChange\"\n  },\n  exportAs: [\"ngbTypeaheadWindow\"],\n  decls: 3,\n  vars: 1,\n  consts: [[\"rt\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [3, \"result\", \"term\"], [\"type\", \"button\", \"role\", \"option\", 1, \"dropdown-item\", 3, \"id\", \"mouseenter\", \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbTypeaheadWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbTypeaheadWindow_ng_template_0_Template, 1, 2, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbTypeaheadWindow_ng_template_2_Template, 2, 9, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.results);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, NgbHighlight, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2\n});\nNgbTypeaheadWindow.propDecorators = {\n  id: [{\n    type: Input\n  }],\n  focusFirst: [{\n    type: Input\n  }],\n  results: [{\n    type: Input\n  }],\n  term: [{\n    type: Input\n  }],\n  formatter: [{\n    type: Input\n  }],\n  resultTemplate: [{\n    type: Input\n  }],\n  selectEvent: [{\n    type: Output,\n    args: ['select']\n  }],\n  activeChangeEvent: [{\n    type: Output,\n    args: ['activeChange']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTypeaheadWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-typeahead-window',\n      exportAs: 'ngbTypeaheadWindow',\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '(mousedown)': '$event.preventDefault()',\n        'class': 'dropdown-menu show',\n        'role': 'listbox',\n        '[id]': 'id'\n      },\n      template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  `\n    }]\n  }], function () {\n    return [];\n  }, {\n    focusFirst: [{\n      type: Input\n    }],\n    formatter: [{\n      type: Input\n    }],\n    selectEvent: [{\n      type: Output,\n      args: ['select']\n    }],\n    activeChangeEvent: [{\n      type: Output,\n      args: ['activeChange']\n    }],\n    id: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    term: [{\n      type: Input\n    }],\n    resultTemplate: [{\n      type: Input\n    }]\n  });\n})();\n\nconst ARIA_LIVE_DELAY = new InjectionToken('live announcer delay', {\n  providedIn: 'root',\n  factory: ARIA_LIVE_DELAY_FACTORY\n});\n\nfunction ARIA_LIVE_DELAY_FACTORY() {\n  return 100;\n}\n\nfunction getLiveElement(document, lazyCreate = false) {\n  let element = document.body.querySelector('#ngb-live');\n\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n    element.classList.add('sr-only');\n    document.body.appendChild(element);\n  }\n\n  return element;\n}\n\nclass Live {\n  constructor(_document, _delay) {\n    this._document = _document;\n    this._delay = _delay;\n  }\n\n  ngOnDestroy() {\n    const element = getLiveElement(this._document);\n\n    if (element) {\n      // if exists, it will always be attached to the <body>\n      element.parentElement.removeChild(element);\n    }\n  }\n\n  say(message) {\n    const element = getLiveElement(this._document, true);\n    const delay = this._delay;\n\n    if (element != null) {\n      element.textContent = '';\n\n      const setText = () => element.textContent = message;\n\n      if (delay === null) {\n        setText();\n      } else {\n        setTimeout(setText, delay);\n      }\n    }\n  }\n\n}\n\nLive.ɵfac = function Live_Factory(t) {\n  return new (t || Live)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ARIA_LIVE_DELAY));\n};\n\nLive.ɵprov = ɵɵdefineInjectable({\n  factory: function Live_Factory() {\n    return new Live(ɵɵinject(DOCUMENT), ɵɵinject(ARIA_LIVE_DELAY));\n  },\n  token: Live,\n  providedIn: \"root\"\n});\n\nLive.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [ARIA_LIVE_DELAY]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Live, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [ARIA_LIVE_DELAY]\n      }]\n    }];\n  }, null);\n})();\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\n\n\nclass NgbTypeaheadConfig {\n  constructor() {\n    this.editable = true;\n    this.focusFirst = true;\n    this.showHint = false;\n    this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n  }\n\n}\n\nNgbTypeaheadConfig.ɵfac = function NgbTypeaheadConfig_Factory(t) {\n  return new (t || NgbTypeaheadConfig)();\n};\n\nNgbTypeaheadConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbTypeaheadConfig_Factory() {\n    return new NgbTypeaheadConfig();\n  },\n  token: NgbTypeaheadConfig,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTypeaheadConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTypeahead),\n  multi: true\n};\nlet nextWindowId = 0;\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\n\nclass NgbTypeahead {\n  constructor(_elementRef, viewContainerRef, _renderer, injector, componentFactoryResolver, config, ngZone, _live, _document, _ngZone, _changeDetector, applicationRef) {\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._live = _live;\n    this._document = _document;\n    this._ngZone = _ngZone;\n    this._changeDetector = _changeDetector;\n    this._subscription = null;\n    this._closed$ = new Subject();\n    this._inputValueBackup = null;\n    this._windowRef = null;\n    /**\n     * The value for the `autocomplete` attribute for the `<input>` element.\n     *\n     * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n     *\n     * @since 2.1.0\n     */\n\n    this.autocomplete = 'off';\n    /**\n     * The preferred placement of the typeahead.\n     *\n     * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n     * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n     * `\"right-bottom\"`\n     *\n     * Accepts an array of strings or a string with space separated possible values.\n     *\n     * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n     *\n     * Please see the [positioning overview](#/positioning) for more details.\n     */\n\n    this.placement = 'bottom-left';\n    /**\n     * An event emitted right before an item is selected from the result list.\n     *\n     * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n     */\n\n    this.selectItem = new EventEmitter();\n    this.activeDescendant = null;\n    this.popupId = `ngb-typeahead-${nextWindowId++}`;\n\n    this._onTouched = () => {};\n\n    this._onChange = _ => {};\n\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n    this.placement = config.placement;\n    this._valueChanges = fromEvent(_elementRef.nativeElement, 'input').pipe(map($event => $event.target.value));\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n    this._popupService = new PopupService(NgbTypeaheadWindow, injector, viewContainerRef, _renderer, this._ngZone, componentFactoryResolver, applicationRef);\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this.isPopupOpen()) {\n        positionElements(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body');\n      }\n    });\n  }\n\n  ngOnInit() {\n    const inputValues$ = this._valueChanges.pipe(tap(value => {\n      this._inputValueBackup = this.showHint ? value : null;\n\n      this._onChange(this.editable ? value : undefined);\n    }));\n\n    const results$ = inputValues$.pipe(this.ngbTypeahead);\n\n    const userInput$ = this._resubscribeTypeahead.pipe(switchMap(() => results$));\n\n    this._subscription = this._subscribeToUserInput(userInput$);\n  }\n\n  ngOnDestroy() {\n    this._closePopup();\n\n    this._unsubscribeFromUserInput();\n\n    this._zoneSubscription.unsubscribe();\n  }\n\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n\n  writeValue(value) {\n    this._writeInputValue(this._formatItemForInput(value));\n\n    if (this.showHint) {\n      this._inputValueBackup = value;\n    }\n  }\n\n  setDisabledState(isDisabled) {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n  /**\n   * Dismisses typeahead popup window\n   */\n\n\n  dismissPopup() {\n    if (this.isPopupOpen()) {\n      this._resubscribeTypeahead.next(null);\n\n      this._closePopup();\n\n      if (this.showHint && this._inputValueBackup !== null) {\n        this._writeInputValue(this._inputValueBackup);\n      }\n\n      this._changeDetector.markForCheck();\n    }\n  }\n  /**\n   * Returns true if the typeahead popup window is displayed\n   */\n\n\n  isPopupOpen() {\n    return this._windowRef != null;\n  }\n\n  handleBlur() {\n    this._resubscribeTypeahead.next(null);\n\n    this._onTouched();\n  }\n\n  handleKeyDown(event) {\n    if (!this.isPopupOpen()) {\n      return;\n    } // tslint:disable-next-line:deprecation\n\n\n    switch (event.which) {\n      case Key.ArrowDown:\n        event.preventDefault();\n\n        this._windowRef.instance.next();\n\n        this._showHint();\n\n        break;\n\n      case Key.ArrowUp:\n        event.preventDefault();\n\n        this._windowRef.instance.prev();\n\n        this._showHint();\n\n        break;\n\n      case Key.Enter:\n      case Key.Tab:\n        const result = this._windowRef.instance.getActive();\n\n        if (isDefined(result)) {\n          event.preventDefault();\n          event.stopPropagation();\n\n          this._selectResult(result);\n        }\n\n        this._closePopup();\n\n        break;\n    }\n  }\n\n  _openPopup() {\n    if (!this.isPopupOpen()) {\n      this._inputValueBackup = this._elementRef.nativeElement.value;\n\n      const {\n        windowRef\n      } = this._popupService.open();\n\n      this._windowRef = windowRef;\n      this._windowRef.instance.id = this.popupId;\n\n      this._windowRef.instance.selectEvent.subscribe(result => this._selectResultClosePopup(result));\n\n      this._windowRef.instance.activeChangeEvent.subscribe(activeId => this.activeDescendant = activeId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      this._changeDetector.markForCheck();\n\n      ngbAutoClose(this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$, [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\n    }\n  }\n\n  _closePopup() {\n    this._popupService.close().subscribe(() => {\n      this._closed$.next();\n\n      this._windowRef = null;\n      this.activeDescendant = null;\n    });\n  }\n\n  _selectResult(result) {\n    let defaultPrevented = false;\n    this.selectItem.emit({\n      item: result,\n      preventDefault: () => {\n        defaultPrevented = true;\n      }\n    });\n\n    this._resubscribeTypeahead.next(null);\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n\n      this._onChange(result);\n    }\n  }\n\n  _selectResultClosePopup(result) {\n    this._selectResult(result);\n\n    this._closePopup();\n  }\n\n  _showHint() {\n    var _a;\n\n    if (this.showHint && ((_a = this._windowRef) === null || _a === void 0 ? void 0 : _a.instance.hasActive()) && this._inputValueBackup != null) {\n      const userInputLowerCase = this._inputValueBackup.toLowerCase();\n\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n\n        this._elementRef.nativeElement['setSelectionRange'].apply(this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n      } else {\n        this._writeInputValue(formattedVal);\n      }\n    }\n  }\n\n  _formatItemForInput(item) {\n    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n\n  _writeInputValue(value) {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n  }\n\n  _subscribeToUserInput(userInput$) {\n    return userInput$.subscribe(results => {\n      if (!results || results.length === 0) {\n        this._closePopup();\n      } else {\n        this._openPopup();\n\n        this._windowRef.instance.focusFirst = this.focusFirst;\n        this._windowRef.instance.results = results;\n        this._windowRef.instance.term = this._elementRef.nativeElement.value;\n\n        if (this.resultFormatter) {\n          this._windowRef.instance.formatter = this.resultFormatter;\n        }\n\n        if (this.resultTemplate) {\n          this._windowRef.instance.resultTemplate = this.resultTemplate;\n        }\n\n        this._windowRef.instance.resetActive(); // The observable stream we are subscribing to might have async steps\n        // and if a component containing typeahead is using the OnPush strategy\n        // the change detection turn wouldn't be invoked automatically.\n\n\n        this._windowRef.changeDetectorRef.detectChanges();\n\n        this._showHint();\n      } // live announcer\n\n\n      const count = results ? results.length : 0;\n\n      this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n    });\n  }\n\n  _unsubscribeFromUserInput() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n\n    this._subscription = null;\n  }\n\n}\n\nNgbTypeahead.ɵfac = function NgbTypeahead_Factory(t) {\n  return new (t || NgbTypeahead)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(NgbTypeaheadConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(Live), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef));\n};\n\nNgbTypeahead.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbTypeahead,\n  selectors: [[\"input\", \"ngbTypeahead\", \"\"]],\n  hostAttrs: [\"autocapitalize\", \"off\", \"autocorrect\", \"off\", \"role\", \"combobox\", \"aria-multiline\", \"false\"],\n  hostVars: 7,\n  hostBindings: function NgbTypeahead_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"blur\", function NgbTypeahead_blur_HostBindingHandler() {\n        return ctx.handleBlur();\n      })(\"keydown\", function NgbTypeahead_keydown_HostBindingHandler($event) {\n        return ctx.handleKeyDown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"autocomplete\", ctx.autocomplete);\n      ɵngcc0.ɵɵattribute(\"aria-autocomplete\", ctx.showHint ? \"both\" : \"list\")(\"aria-activedescendant\", ctx.activeDescendant)(\"aria-owns\", ctx.isPopupOpen() ? ctx.popupId : null)(\"aria-expanded\", ctx.isPopupOpen());\n      ɵngcc0.ɵɵclassProp(\"open\", ctx.isPopupOpen());\n    }\n  },\n  inputs: {\n    autocomplete: \"autocomplete\",\n    placement: \"placement\",\n    container: \"container\",\n    editable: \"editable\",\n    focusFirst: \"focusFirst\",\n    showHint: \"showHint\",\n    inputFormatter: \"inputFormatter\",\n    ngbTypeahead: \"ngbTypeahead\",\n    resultFormatter: \"resultFormatter\",\n    resultTemplate: \"resultTemplate\"\n  },\n  outputs: {\n    selectItem: \"selectItem\"\n  },\n  exportAs: [\"ngbTypeahead\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([NGB_TYPEAHEAD_VALUE_ACCESSOR])]\n});\n\nNgbTypeahead.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ViewContainerRef\n}, {\n  type: Renderer2\n}, {\n  type: Injector\n}, {\n  type: ComponentFactoryResolver\n}, {\n  type: NgbTypeaheadConfig\n}, {\n  type: NgZone\n}, {\n  type: Live\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: NgZone\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ApplicationRef\n}];\n\nNgbTypeahead.propDecorators = {\n  autocomplete: [{\n    type: Input\n  }],\n  container: [{\n    type: Input\n  }],\n  editable: [{\n    type: Input\n  }],\n  focusFirst: [{\n    type: Input\n  }],\n  inputFormatter: [{\n    type: Input\n  }],\n  ngbTypeahead: [{\n    type: Input\n  }],\n  resultFormatter: [{\n    type: Input\n  }],\n  resultTemplate: [{\n    type: Input\n  }],\n  showHint: [{\n    type: Input\n  }],\n  placement: [{\n    type: Input\n  }],\n  selectItem: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTypeahead, [{\n    type: Directive,\n    args: [{\n      selector: 'input[ngbTypeahead]',\n      exportAs: 'ngbTypeahead',\n      host: {\n        '(blur)': 'handleBlur()',\n        '[class.open]': 'isPopupOpen()',\n        '(keydown)': 'handleKeyDown($event)',\n        '[autocomplete]': 'autocomplete',\n        'autocapitalize': 'off',\n        'autocorrect': 'off',\n        'role': 'combobox',\n        'aria-multiline': 'false',\n        '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n        '[attr.aria-activedescendant]': 'activeDescendant',\n        '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n        '[attr.aria-expanded]': 'isPopupOpen()'\n      },\n      providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: NgbTypeaheadConfig\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: Live\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ApplicationRef\n    }];\n  }, {\n    autocomplete: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    selectItem: [{\n      type: Output\n    }],\n    container: [{\n      type: Input\n    }],\n    editable: [{\n      type: Input\n    }],\n    focusFirst: [{\n      type: Input\n    }],\n    showHint: [{\n      type: Input\n    }],\n    inputFormatter: [{\n      type: Input\n    }],\n    ngbTypeahead: [{\n      type: Input\n    }],\n    resultFormatter: [{\n      type: Input\n    }],\n    resultTemplate: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgbTypeaheadModule {}\n\nNgbTypeaheadModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbTypeaheadModule\n});\nNgbTypeaheadModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbTypeaheadModule_Factory(t) {\n    return new (t || NgbTypeaheadModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbTypeaheadModule, {\n    declarations: function () {\n      return [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [NgbTypeahead, NgbHighlight];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTypeaheadModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n      exports: [NgbTypeahead, NgbHighlight],\n      imports: [CommonModule],\n      entryComponents: [NgbTypeaheadWindow]\n    }]\n  }], null, null);\n})();\n\nconst NGB_MODULES = [NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule];\n\nclass NgbModule {}\n\nNgbModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbModule\n});\nNgbModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbModule_Factory(t) {\n    return new (t || NgbModule)();\n  },\n  imports: [NGB_MODULES, NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbModule, {\n    imports: [NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule],\n    exports: [NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbModule, [{\n    type: NgModule,\n    args: [{\n      imports: NGB_MODULES,\n      exports: NGB_MODULES\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ModalDismissReasons, NgbAccordion, NgbAccordionConfig, NgbAccordionModule, NgbActiveModal, NgbAlert, NgbAlertConfig, NgbAlertModule, NgbButtonLabel, NgbButtonsModule, NgbCalendar, NgbCalendarGregorian, NgbCalendarHebrew, NgbCalendarIslamicCivil, NgbCalendarIslamicUmalqura, NgbCalendarPersian, NgbCarousel, NgbCarouselConfig, NgbCarouselModule, NgbCheckBox, NgbCollapse, NgbCollapseConfig, NgbCollapseModule, NgbConfig, NgbDate, NgbDateAdapter, NgbDateNativeAdapter, NgbDateNativeUTCAdapter, NgbDateParserFormatter, NgbDatepicker, NgbDatepickerConfig, NgbDatepickerContent, NgbDatepickerI18n, NgbDatepickerI18nHebrew, NgbDatepickerKeyboardService, NgbDatepickerModule, NgbDatepickerMonth, NgbDropdown, NgbDropdownAnchor, NgbDropdownConfig, NgbDropdownItem, NgbDropdownMenu, NgbDropdownModule, NgbDropdownToggle, NgbHighlight, NgbInputDatepicker, NgbInputDatepickerConfig, NgbModal, NgbModalConfig, NgbModalModule, NgbModalRef, NgbModule, NgbNav, NgbNavConfig, NgbNavContent, NgbNavItem, NgbNavLink, NgbNavModule, NgbNavOutlet, NgbNavPane, NgbNavbar, NgbPagination, NgbPaginationConfig, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationModule, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious, NgbPanel, NgbPanelContent, NgbPanelHeader, NgbPanelTitle, NgbPanelToggle, NgbPopover, NgbPopoverConfig, NgbPopoverModule, NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule, NgbRadio, NgbRadioGroup, NgbRating, NgbRatingConfig, NgbRatingModule, NgbSlide, NgbSlideEventDirection, NgbSlideEventSource, NgbTimeAdapter, NgbTimepicker, NgbTimepickerConfig, NgbTimepickerI18n, NgbTimepickerModule, NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule, NgbTooltip, NgbTooltipConfig, NgbTooltipModule, NgbTypeahead, NgbTypeaheadConfig, NgbTypeaheadModule, NGB_CAROUSEL_DIRECTIVES as ɵa, NGB_DATEPICKER_VALUE_ACCESSOR as ɵb, Live as ɵba, NgbCalendarHijri as ɵbb, ContentRef as ɵbc, NGB_DATEPICKER_CALENDAR_FACTORY as ɵc, NgbDatepickerDayView as ɵd, NgbDatepickerNavigation as ɵe, NgbDatepickerNavigationSelect as ɵf, NGB_DATEPICKER_18N_FACTORY as ɵg, NgbDatepickerI18nDefault as ɵh, NGB_DATEPICKER_DATE_ADAPTER_FACTORY as ɵi, NgbDateStructAdapter as ɵj, NGB_DATEPICKER_PARSER_FORMATTER_FACTORY as ɵk, NgbDateISOParserFormatter as ɵl, NgbPopoverWindow as ɵm, NGB_DATEPICKER_TIME_ADAPTER_FACTORY as ɵn, NgbTimeStructAdapter as ɵo, NGB_TIMEPICKER_I18N_FACTORY as ɵp, NgbTimepickerI18nDefault as ɵq, NgbTooltipWindow as ɵr, NgbTypeaheadWindow as ɵs, NgbDatepickerService as ɵt, NgbModalBackdrop as ɵu, NgbModalWindow as ɵv, NgbModalStack as ɵw, ScrollBar as ɵx, ARIA_LIVE_DELAY as ɵy, ARIA_LIVE_DELAY_FACTORY as ɵz };","map":{"version":3,"sources":["../../../src/util/util.ts","../../../src/environment.ts","../../../src/ngb-config.ts","../../../src/accordion/accordion-config.ts","../../../src/util/transition/util.ts","../../../src/util/transition/ngbTransition.ts","../../../src/util/transition/ngbCollapseTransition.ts","../../../src/accordion/accordion.ts","../../../src/accordion/accordion.module.ts","../../../src/alert/alert-config.ts","../../../src/alert/alert-transition.ts","../../../src/alert/alert.ts","../../../src/alert/alert.module.ts","../../../src/buttons/label.ts","../../../src/buttons/checkbox.ts","../../../src/buttons/radio.ts","../../../src/buttons/buttons.module.ts","../../../src/carousel/carousel-config.ts","../../../src/carousel/carousel-transition.ts","../../../src/carousel/carousel.ts","../../../src/carousel/carousel.module.ts","../../../src/collapse/collapse-config.ts","../../../src/collapse/collapse.ts","../../../src/collapse/collapse.module.ts","../../../src/datepicker/ngb-date.ts","../../../src/datepicker/ngb-calendar.ts","../../../src/datepicker/datepicker-tools.ts","../../../src/datepicker/datepicker-i18n.ts","../../../src/datepicker/datepicker-service.ts","../../../src/datepicker/datepicker-view-model.ts","../../../src/datepicker/datepicker-config.ts","../../../src/datepicker/adapters/ngb-date-adapter.ts","../../../src/datepicker/datepicker.ts","../../../src/util/key.ts","../../../src/datepicker/datepicker-keyboard-service.ts","../../../src/datepicker/datepicker-month.ts","../../../src/datepicker/datepicker-navigation.ts","../../../src/util/autoclose.ts","../../../src/util/focus-trap.ts","../../../src/util/positioning.ts","../../../src/datepicker/ngb-date-parser-formatter.ts","../../../src/datepicker/datepicker-input-config.ts","../../../src/datepicker/datepicker-input.ts","../../../src/datepicker/datepicker-day-view.ts","../../../src/datepicker/datepicker-navigation-select.ts","../../../src/datepicker/hijri/ngb-calendar-hijri.ts","../../../src/datepicker/hijri/ngb-calendar-islamic-civil.ts","../../../src/datepicker/hijri/ngb-calendar-islamic-umalqura.ts","../../../src/datepicker/jalali/jalali.ts","../../../src/datepicker/jalali/ngb-calendar-persian.ts","../../../src/datepicker/hebrew/hebrew.ts","../../../src/datepicker/hebrew/ngb-calendar-hebrew.ts","../../../src/datepicker/hebrew/datepicker-i18n-hebrew.ts","../../../src/datepicker/adapters/ngb-date-native-adapter.ts","../../../src/datepicker/adapters/ngb-date-native-utc-adapter.ts","../../../src/datepicker/datepicker.module.ts","../../../src/dropdown/dropdown-config.ts","../../../src/dropdown/dropdown.ts","../../../src/dropdown/dropdown.module.ts","../../../src/modal/modal-config.ts","../../../src/util/popup.ts","../../../src/util/scrollbar.ts","../../../src/modal/modal-backdrop.ts","../../../src/modal/modal-ref.ts","../../../src/modal/modal-dismiss-reasons.ts","../../../src/modal/modal-window.ts","../../../src/modal/modal-stack.ts","../../../src/modal/modal.ts","../../../src/modal/modal.module.ts","../../../src/nav/nav-config.ts","../../../src/nav/nav.ts","../../../src/nav/nav-transition.ts","../../../src/nav/nav-outlet.ts","../../../src/nav/nav.module.ts","../../../src/pagination/pagination-config.ts","../../../src/pagination/pagination.ts","../../../src/pagination/pagination.module.ts","../../../src/util/triggers.ts","../../../src/popover/popover-config.ts","../../../src/popover/popover.ts","../../../src/popover/popover.module.ts","../../../src/progressbar/progressbar-config.ts","../../../src/progressbar/progressbar.ts","../../../src/progressbar/progressbar.module.ts","../../../src/rating/rating-config.ts","../../../src/rating/rating.ts","../../../src/rating/rating.module.ts","../../../src/timepicker/ngb-time.ts","../../../src/timepicker/timepicker-config.ts","../../../src/timepicker/ngb-time-adapter.ts","../../../src/timepicker/timepicker-i18n.ts","../../../src/timepicker/timepicker.ts","../../../src/timepicker/timepicker.module.ts","../../../src/toast/toast-config.ts","../../../src/toast/toast-transition.ts","../../../src/toast/toast.ts","../../../src/toast/toast.module.ts","../../../src/tooltip/tooltip-config.ts","../../../src/tooltip/tooltip.ts","../../../src/tooltip/tooltip.module.ts","../../../src/typeahead/highlight.ts","../../../src/typeahead/typeahead-window.ts","../../../src/util/accessibility/live.ts","../../../src/typeahead/typeahead-config.ts","../../../src/typeahead/typeahead.ts","../../../src/typeahead/typeahead.module.ts","../../../src/index.ts","../../../src/ng-bootstrap.ts"],"names":["nextId","NGB_DATEPICKER_VALUE_ACCESSOR","mod","GREGORIAN_EPOCH","isGregorianLeapYear","fromGregorian","toGregorian"],"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","sourcesContent":["export function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\n\nexport function toString(value: any): string {\n  return (value !== undefined && value !== null) ? `${value}` : '';\n}\n\nexport function getValueInRange(value: number, max: number, min = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\n\nexport function isInteger(value: any): value is number {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nexport function isDefined(value: any): boolean {\n  return value !== undefined && value !== null;\n}\n\nexport function padNumber(value: number) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\n\nexport function regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\nexport function hasClassName(element: any, className: string): boolean {\n  return element && element.className && element.className.split &&\n      element.className.split(/\\s+/).indexOf(className) >= 0;\n}\n\nif (typeof Element !== 'undefined' && !Element.prototype.closest) {\n  // Polyfill for ie10+\n\n  if (!Element.prototype.matches) {\n    // IE uses the non-standard name: msMatchesSelector\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  Element.prototype.closest = function(s: string) {\n    let el = this;\n    if (!document.documentElement.contains(el)) {\n      return null;\n    }\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  };\n}\n\nexport function closest(element: HTMLElement, selector?: string): HTMLElement | null {\n  if (!selector) {\n    return null;\n  }\n\n  /*\n   * In certain browsers (e.g. Edge 44.18362.449.0) HTMLDocument does\n   * not support `Element.prototype.closest`. To emulate the correct behaviour\n   * we return null when the method is missing.\n   *\n   * Note that in evergreen browsers `closest(document.documentElement, 'html')`\n   * will return the document element whilst in Edge null will be returned. This\n   * compromise was deemed good enough.\n   */\n  if (typeof element.closest === 'undefined') {\n    return null;\n  }\n\n  return element.closest(selector);\n}\n\n/**\n * Force a browser reflow\n * @param element element where to apply the reflow\n */\nexport function reflow(element: HTMLElement) {\n  return (element || document.body).offsetHeight;\n}\n","export const environment = {\n  animation: true,\n  transitionTimerDelayMs: 5,\n};\n","import {Injectable} from '@angular/core';\nimport {environment} from './environment';\n\n/**\n * Global ng-bootstrap config\n *\n * @since 8.0.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbConfig {\n  animation = environment.animation;\n}\n","import {Injectable} from '@angular/core';\nimport {NgbConfig} from '../ngb-config';\n\n/**\n * A configuration service for the [NgbAccordion](#/components/accordion/api#NgbAccordion) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAccordionConfig {\n  animation: boolean;\n  closeOthers = false;\n  type: string;\n\n  constructor(ngbConfig: NgbConfig) { this.animation = ngbConfig.animation; }\n}\n","export function getTransitionDurationMs(element: HTMLElement) {\n  const {transitionDelay, transitionDuration} = window.getComputedStyle(element);\n  const transitionDelaySec = parseFloat(transitionDelay);\n  const transitionDurationSec = parseFloat(transitionDuration);\n\n  return (transitionDelaySec + transitionDurationSec) * 1000;\n}\n","import {EMPTY, fromEvent, Observable, of, race, Subject, timer} from 'rxjs';\nimport {endWith, filter, takeUntil} from 'rxjs/operators';\nimport {getTransitionDurationMs} from './util';\nimport {environment} from '../../environment';\nimport {reflow} from '../util';\n\nexport type NgbTransitionStartFn<T = any> = (element: HTMLElement, context: T) => NgbTransitionEndFn | void;\nexport type NgbTransitionEndFn = () => void;\n\nexport interface NgbTransitionOptions<T> {\n  animation: boolean;\n  runningTransition: 'continue' | 'stop';\n  context?: T;\n}\n\nexport interface NgbTransitionCtx<T> {\n  transition$: Subject<any>;\n  context: T;\n}\n\nconst noopFn: NgbTransitionEndFn = () => {};\n\nconst {transitionTimerDelayMs} = environment;\nconst runningTransitions = new Map<HTMLElement, NgbTransitionCtx<any>>();\n\nexport const ngbRunTransition =\n    <T>(element: HTMLElement, startFn: NgbTransitionStartFn<T>, options: NgbTransitionOptions<T>):\n        Observable<undefined> => {\n\n          // Getting initial context from options\n          let context = options.context || <T>{};\n\n          // Checking if there are already running transitions on the given element.\n          const running = runningTransitions.get(element);\n          if (running) {\n            switch (options.runningTransition) {\n              // If there is one running and we want for it to 'continue' to run, we have to cancel the new one.\n              // We're not emitting any values, but simply completing the observable (EMPTY).\n              case 'continue':\n                return EMPTY;\n              // If there is one running and we want for it to 'stop', we have to complete the running one.\n              // We're simply completing the running one and not emitting any values and merging newly provided context\n              // with the one coming from currently running transition.\n              case 'stop':\n                running.transition$.complete();\n                context = Object.assign(running.context, context);\n                runningTransitions.delete(element);\n            }\n          }\n\n          // A reflow is required here, to be sure that everything is ready,\n          // Without reflow, the transition will not be started for some widgets, at initialization time\n          reflow(element);\n\n          const endFn = startFn(element, context) || noopFn;\n\n          // If 'prefer-reduced-motion' is enabled, the 'transition' will be set to 'none'.\n          // If animations are disabled, we have to emit a value and complete the observable\n          // In this case we have to call the end function, but can finish immediately by emitting a value,\n          // completing the observable and executing end functions synchronously.\n          if (!options.animation || window.getComputedStyle(element).transitionProperty === 'none') {\n            endFn();\n            return of(undefined);\n          }\n\n          // Starting a new transition\n          const transition$ = new Subject<any>();\n          const stop$ = transition$.pipe(endWith(true));\n          runningTransitions.set(element, {transition$, context});\n\n          const transitionDurationMs = getTransitionDurationMs(element);\n\n          // 1. We have to both listen for the 'transitionend' event and have a 'just-in-case' timer,\n          // because 'transitionend' event might not be fired in some browsers, if the transitioning\n          // element becomes invisible (ex. when scrolling, making browser tab inactive, etc.). The timer\n          // guarantees, that we'll release the DOM element and complete 'ngbRunTransition'.\n          // 2. We need to filter transition end events, because they might bubble from shorter transitions\n          // on inner DOM elements. We're only interested in the transition on the 'element' itself.\n          const transitionEnd$ =\n              fromEvent(element, 'transitionend').pipe(takeUntil(stop$), filter(({target}) => target === element));\n          const timer$ = timer(transitionDurationMs + transitionTimerDelayMs).pipe(takeUntil(stop$));\n\n          race(timer$, transitionEnd$).pipe(takeUntil(stop$)).subscribe(() => {\n            runningTransitions.delete(element);\n            endFn();\n            transition$.next();\n            transition$.complete();\n          });\n\n          return transition$.asObservable();\n        };\n","import {NgbTransitionStartFn} from './ngbTransition';\nimport {reflow} from '../util';\n\nexport interface NgbCollapseCtx {\n  direction: 'show' | 'hide';\n  maxHeight?: string;\n}\n\nfunction measureCollapsingElementHeightPx(element: HTMLElement): string {\n  // SSR fix for without injecting the PlatformId\n  if (typeof navigator === 'undefined') {\n    return '0px';\n  }\n\n  const {classList} = element;\n  const hasShownClass = classList.contains('show');\n  if (!hasShownClass) {\n    classList.add('show');\n  }\n\n  element.style.height = '';\n  const height = element.getBoundingClientRect().height + 'px';\n\n  if (!hasShownClass) {\n    classList.remove('show');\n  }\n\n  return height;\n}\n\nexport const ngbCollapsingTransition: NgbTransitionStartFn<NgbCollapseCtx> =\n    (element: HTMLElement, context: NgbCollapseCtx) => {\n      let {direction, maxHeight} = context;\n      const {classList} = element;\n\n      // No maxHeight -> running the transition for the first time\n      if (!maxHeight) {\n        maxHeight = measureCollapsingElementHeightPx(element);\n        context.maxHeight = maxHeight;\n\n        // Fix the height before starting the animation\n        element.style.height = direction !== 'show' ? maxHeight : '0px';\n\n        classList.remove('collapse');\n        classList.remove('collapsing');\n        classList.remove('show');\n\n        reflow(element);\n\n        // Start the animation\n        classList.add('collapsing');\n      }\n\n      // Start or revert the animation\n      element.style.height = direction === 'show' ? maxHeight : '0px';\n\n      return () => {\n        classList.remove('collapsing');\n        classList.add('collapse');\n        if (direction === 'show') {\n          classList.add('show');\n        } else {\n          classList.remove('show');\n        }\n\n        element.style.height = '';\n      };\n    };\n","import {\n  AfterContentChecked,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation,\n  NgZone,\n} from '@angular/core';\n\nimport {isString} from '../util/util';\n\nimport {NgbAccordionConfig} from './accordion-config';\nimport {ngbRunTransition} from '../util/transition/ngbTransition';\nimport {ngbCollapsingTransition} from '../util/transition/ngbCollapseTransition';\nimport {take} from 'rxjs/operators';\n\nlet nextId = 0;\n\n/**\n * The context for the [NgbPanelHeader](#/components/accordion/api#NgbPanelHeader) template\n *\n * @since 4.1.0\n */\nexport interface NgbPanelHeaderContext {\n  /**\n   * `True` if current panel is opened\n   */\n  opened: boolean;\n}\n\n/**\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\n *\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPanelHeader]'})\nexport class NgbPanelHeader {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps only the panel title with HTML markup inside.\n *\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\n */\n@Directive({selector: 'ng-template[ngbPanelTitle]'})\nexport class NgbPanelTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps the accordion panel content.\n */\n@Directive({selector: 'ng-template[ngbPanelContent]'})\nexport class NgbPanelContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps an individual accordion panel with title and collapsible content.\n */\n@Directive({selector: 'ngb-panel'})\nexport class NgbPanel implements AfterContentChecked {\n  /**\n   *  If `true`, the panel is disabled an can't be toggled.\n   */\n  @Input() disabled = false;\n\n  /**\n   *  An optional id for the panel that must be unique on the page.\n   *\n   *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\n   */\n  @Input() id = `ngb-panel-${nextId++}`;\n\n  isOpen = false;\n\n  /* A flag to specified that the transition panel classes have been initialized */\n  initClassDone = false;\n\n  /* A flag to specified if the panel is currently being animated, to ensure its presence in the dom */\n  transitionRunning = false;\n\n  /**\n   *  The panel title.\n   *\n   *  You can alternatively use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to set panel title.\n   */\n  @Input() title: string;\n\n  /**\n   * Type of the current panel.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n\n  /**\n   * An optional class applied to the accordion card element that wraps both panel title and content.\n   *\n   * @since 5.3.0\n   */\n  @Input() cardClass: string;\n\n  /**\n   * An event emitted when the panel is shown, after the transition. It has no payload.\n   *\n   * @since 8.0.0\n   */\n  @Output() shown = new EventEmitter<void>();\n\n  /**\n   * An event emitted when the panel is hidden, after the transition. It has no payload.\n   *\n   * @since 8.0.0\n   */\n  @Output() hidden = new EventEmitter<void>();\n\n\n  titleTpl: NgbPanelTitle;\n  headerTpl: NgbPanelHeader;\n  contentTpl: NgbPanelContent;\n\n  @ContentChildren(NgbPanelTitle, {descendants: false}) titleTpls: QueryList<NgbPanelTitle>;\n  @ContentChildren(NgbPanelHeader, {descendants: false}) headerTpls: QueryList<NgbPanelHeader>;\n  @ContentChildren(NgbPanelContent, {descendants: false}) contentTpls: QueryList<NgbPanelContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.headerTpl = this.headerTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * An event emitted right before toggling an accordion panel.\n */\nexport interface NgbPanelChangeEvent {\n  /**\n   * The id of the accordion panel being toggled.\n   */\n  panelId: string;\n\n  /**\n   * The next state of the panel.\n   *\n   * `true` if it will be opened, `false` if closed.\n   */\n  nextState: boolean;\n\n  /**\n   * Calling this function will prevent panel toggling.\n   */\n  preventDefault: () => void;\n}\n\n/**\n * Accordion is a collection of collapsible panels (bootstrap cards).\n *\n * It can ensure only one panel is opened at a time and allows to customize panel\n * headers.\n */\n@Component({\n  selector: 'ngb-accordion',\n  exportAs: 'ngbAccordion',\n  encapsulation: ViewEncapsulation.None,\n  host: {'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels'},\n  template: `\n    <ng-template #t ngbPanelHeader let-panel>\n      <button class=\"btn btn-link\" [ngbPanelToggle]=\"panel\">\n        {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n      </button>\n    </ng-template>\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div [class]=\"'card ' + (panel.cardClass || '')\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <ng-template [ngTemplateOutlet]=\"panel.headerTpl?.templateRef || t\"\n                       [ngTemplateOutletContext]=\"{$implicit: panel, opened: panel.isOpen}\"></ng-template>\n        </div>\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             *ngIf=\"!destroyOnHide || panel.isOpen || panel.transitionRunning\">\n          <div class=\"card-body\">\n               <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef || null\"></ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbAccordion implements AfterContentChecked {\n  @ContentChildren(NgbPanel) panels: QueryList<NgbPanel>;\n\n  /**\n   * If `true`, accordion will be animated.\n   *\n   * @since 8.0.0\n   */\n  @Input() animation;\n\n  /**\n   * An array or comma separated strings of panel ids that should be opened **initially**.\n   *\n   * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\n   * the `(panelChange)` event.\n   */\n  @Input() activeIds: string | readonly string[] = [];\n\n  /**\n   *  If `true`, only one panel could be opened at a time.\n   *\n   *  Opening a new panel will close others.\n   */\n  @Input('closeOthers') closeOtherPanels: boolean;\n\n  /**\n   * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * Type of panels.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n\n  /**\n   * Event emitted right before the panel toggle happens.\n   *\n   * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\n   */\n  @Output() panelChange = new EventEmitter<NgbPanelChangeEvent>();\n\n  /**\n   * An event emitted when the expanding animation is finished on the panel. The payload is the panel id.\n   *\n   * @since 8.0.0\n   */\n  @Output() shown = new EventEmitter<string>();\n\n  /**\n   * An event emitted when the collapsing animation is finished on the panel, and before the panel element is removed.\n   * The payload is the panel id.\n   *\n   * @since 8.0.0\n   */\n  @Output() hidden = new EventEmitter<string>();\n\n  constructor(\n      config: NgbAccordionConfig, private _element: ElementRef, private _ngZone: NgZone,\n      private _changeDetector: ChangeDetectorRef) {\n    this.animation = config.animation;\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n\n  /**\n   * Checks if a panel with a given id is expanded.\n   */\n  isExpanded(panelId: string): boolean { return this.activeIds.indexOf(panelId) > -1; }\n\n  /**\n   * Expands a panel with a given id.\n   *\n   * Has no effect if the panel is already expanded or disabled.\n   */\n  expand(panelId: string): void { this._changeOpenState(this._findPanelById(panelId), true); }\n\n  /**\n   * Expands all panels, if `[closeOthers]` is `false`.\n   *\n   * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n   */\n  expandAll(): void {\n    if (this.closeOtherPanels) {\n      if (this.activeIds.length === 0 && this.panels.length) {\n        this._changeOpenState(this.panels.first, true);\n      }\n    } else {\n      this.panels.forEach(panel => this._changeOpenState(panel, true));\n    }\n  }\n\n  /**\n   * Collapses a panel with the given id.\n   *\n   * Has no effect if the panel is already collapsed or disabled.\n   */\n  collapse(panelId: string) { this._changeOpenState(this._findPanelById(panelId), false); }\n\n  /**\n   * Collapses all opened panels.\n   */\n  collapseAll() {\n    this.panels.forEach((panel) => { this._changeOpenState(panel, false); });\n  }\n\n  /**\n   * Toggles a panel with the given id.\n   *\n   * Has no effect if the panel is disabled.\n   */\n  toggle(panelId: string) {\n    const panel = this._findPanelById(panelId);\n    if (panel) {\n      this._changeOpenState(panel, !panel.isOpen);\n    }\n  }\n\n  ngAfterContentChecked() {\n    // active id updates\n    if (isString(this.activeIds)) {\n      this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n    }\n\n    // update panels open states\n    this.panels.forEach(panel => { panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1; });\n\n    // closeOthers updates\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\n      this._closeOthers(this.activeIds[0], false);\n      this._updateActiveIds();\n    }\n\n    // Setup the initial classes here\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this.panels.forEach(panel => {\n        const panelElement = this._getPanelElement(panel.id);\n        if (panelElement) {\n          if (!panel.initClassDone) {\n            panel.initClassDone = true;\n            const {classList} = panelElement;\n            classList.add('collapse');\n            if (panel.isOpen) {\n              classList.add('show');\n            }\n          }\n        } else {\n          // Classes must be initialized next time it will be in the dom\n          panel.initClassDone = false;\n        }\n      });\n    });\n  }\n\n  private _changeOpenState(panel: NgbPanel | null, nextState: boolean) {\n    if (panel != null && !panel.disabled && panel.isOpen !== nextState) {\n      let defaultPrevented = false;\n\n      this.panelChange.emit(\n          {panelId: panel.id, nextState: nextState, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        panel.isOpen = nextState;\n        panel.transitionRunning = true;\n\n        if (nextState && this.closeOtherPanels) {\n          this._closeOthers(panel.id);\n        }\n        this._updateActiveIds();\n        this._runTransitions(this.animation);\n      }\n    }\n  }\n\n  private _closeOthers(panelId: string, enableTransition = true) {\n    this.panels.forEach(panel => {\n      if (panel.id !== panelId && panel.isOpen) {\n        panel.isOpen = false;\n        panel.transitionRunning = enableTransition;\n      }\n    });\n  }\n\n  private _findPanelById(panelId: string): NgbPanel | null { return this.panels.find(p => p.id === panelId) || null; }\n\n  private _updateActiveIds() {\n    this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\n  }\n\n  private _runTransitions(animation: boolean, emitEvent = true) {\n    // detectChanges is performed to ensure that all panels are in the dom (via transitionRunning = true)\n    // before starting the animation\n    this._changeDetector.detectChanges();\n\n    this.panels.forEach(panel => {\n      // When panel.transitionRunning is true, the transition needs to be started OR reversed,\n      // The direction (show or hide) is choosen by each panel.isOpen state\n      if (panel.transitionRunning) {\n        const panelElement = this._getPanelElement(panel.id);\n        ngbRunTransition(panelElement !, ngbCollapsingTransition, {\n          animation,\n          runningTransition: 'stop',\n          context: {direction: panel.isOpen ? 'show' : 'hide'}\n        }).subscribe(() => {\n          panel.transitionRunning = false;\n          if (emitEvent) {\n            const {id} = panel;\n            if (panel.isOpen) {\n              panel.shown.emit();\n              this.shown.emit(id);\n            } else {\n              panel.hidden.emit();\n              this.hidden.emit(id);\n            }\n          }\n        });\n      }\n    });\n  }\n\n  private _getPanelElement(panelId: string): HTMLElement | null {\n    return this._element.nativeElement.querySelector('#' + panelId);\n  }\n}\n\n/**\n * A directive to put on a button that toggles panel opening and closing.\n *\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\n *\n * @since 4.1.0\n */\n@Directive({\n  selector: 'button[ngbPanelToggle]',\n  host: {\n    'type': 'button',\n    '[disabled]': 'panel.disabled',\n    '[class.collapsed]': '!panel.isOpen',\n    '[attr.aria-expanded]': 'panel.isOpen',\n    '[attr.aria-controls]': 'panel.id',\n    '(click)': 'accordion.toggle(panel.id)'\n  }\n})\nexport class NgbPanelToggle {\n  static ngAcceptInputType_ngbPanelToggle: NgbPanel | '';\n\n  @Input()\n  set ngbPanelToggle(panel: NgbPanel) {\n    if (panel) {\n      this.panel = panel;\n    }\n  }\n\n  constructor(public accordion: NgbAccordion, @Optional() @Host() public panel: NgbPanel) {}\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle} from './accordion';\n\nexport {\n  NgbAccordion,\n  NgbPanel,\n  NgbPanelTitle,\n  NgbPanelContent,\n  NgbPanelChangeEvent,\n  NgbPanelHeader,\n  NgbPanelHeaderContext,\n  NgbPanelToggle\n} from './accordion';\nexport {NgbAccordionConfig} from './accordion-config';\n\nconst NGB_ACCORDION_DIRECTIVES =\n    [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n\n@NgModule({declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule]})\nexport class NgbAccordionModule {\n}\n","import {Injectable} from '@angular/core';\nimport {NgbConfig} from '../ngb-config';\n\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAlertConfig {\n  animation: boolean;\n  dismissible = true;\n  type = 'warning';\n\n  constructor(ngbConfig: NgbConfig) { this.animation = ngbConfig.animation; }\n}\n","import {NgbTransitionStartFn} from '../util/transition/ngbTransition';\n\nexport const ngbAlertFadingTransition: NgbTransitionStartFn = ({classList}: HTMLElement) => {\n  classList.remove('show');\n};\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  Renderer2,\n  ElementRef,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {Observable} from 'rxjs';\n\nimport {NgbAlertConfig} from './alert-config';\nimport {ngbRunTransition} from '../util/transition/ngbTransition';\nimport {ngbAlertFadingTransition} from './alert-transition';\n\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\n@Component({\n  selector: 'ngb-alert',\n  exportAs: 'ngbAlert',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host:\n      {'role': 'alert', 'class': 'alert show', '[class.fade]': 'animation', '[class.alert-dismissible]': 'dismissible'},\n  template: `\n    <ng-content></ng-content>\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n      (click)=\"close()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    `,\n  styleUrls: ['./alert.scss']\n})\nexport class NgbAlert implements OnInit,\n    OnChanges {\n  /**\n   * If `true`, alert closing will be animated.\n   *\n   * Animation is triggered only when clicked on the close button (×)\n   * or via the `.close()` function\n   *\n   * @since 8.0.0\n   */\n  @Input() animation: boolean;\n\n  /**\n   * If `true`, alert can be dismissed by the user.\n   *\n   * The close button (×) will be displayed and you can be notified\n   * of the event with the `(close)` output.\n   */\n  @Input() dismissible: boolean;\n\n  /**\n   * Type of the alert.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n\n  /**\n   * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n   *\n   * @since 8.0.0\n   */\n  @Output() closed = new EventEmitter<void>();\n\n\n  constructor(config: NgbAlertConfig, private _renderer: Renderer2, private _element: ElementRef) {\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n    this.animation = config.animation;\n  }\n\n  /**\n   * Triggers alert closing programmatically (same as clicking on the close button (×)).\n   *\n   * The returned observable will emit and be completed once the closing transition has finished.\n   * If the animations are turned off this happens synchronously.\n   *\n   * Alternatively you could listen or subscribe to the `(closed)` output\n   *\n   * @since 8.0.0\n   */\n  close(): Observable<void> {\n    const transition = ngbRunTransition(\n        this._element.nativeElement, ngbAlertFadingTransition,\n        {animation: this.animation, runningTransition: 'continue'});\n    transition.subscribe(() => this.closed.emit());\n    return transition;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const typeChange = changes['type'];\n    if (typeChange && !typeChange.firstChange) {\n      this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n      this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n    }\n  }\n\n  ngOnInit() { this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`); }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAlert} from './alert';\n\nexport {NgbAlert} from './alert';\nexport {NgbAlertConfig} from './alert-config';\n\n@NgModule({declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert]})\nexport class NgbAlertModule {\n}\n","import {Directive} from '@angular/core';\n\n@Directive({\n  selector: '[ngbButtonLabel]',\n  host:\n      {'[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused'}\n})\nexport class NgbButtonLabel {\n  active: boolean;\n  disabled: boolean;\n  focused: boolean;\n}\n","import {ChangeDetectorRef, Directive, forwardRef, Input} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbCheckBox),\n  multi: true\n};\n\n\n/**\n * Allows to easily create Bootstrap-style checkbox buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n@Directive({\n  selector: '[ngbButton][type=checkbox]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '(change)': 'onInputChange($event)',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  },\n  providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n})\nexport class NgbCheckBox implements ControlValueAccessor {\n  static ngAcceptInputType_disabled: boolean | '';\n\n  checked;\n\n  /**\n   * If `true`, the checkbox button will be disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * The form control value when the checkbox is checked.\n   */\n  @Input() valueChecked = true;\n\n  /**\n   * The form control value when the checkbox is unchecked.\n   */\n  @Input() valueUnChecked = false;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  set focused(isFocused: boolean) {\n    this._label.focused = isFocused;\n    if (!isFocused) {\n      this.onTouched();\n    }\n  }\n\n  constructor(private _label: NgbButtonLabel, private _cd: ChangeDetectorRef) {}\n\n  onInputChange($event) {\n    const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n    this.onChange(modelToPropagate);\n    this.onTouched();\n    this.writeValue(modelToPropagate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._label.disabled = isDisabled;\n  }\n\n  writeValue(value) {\n    this.checked = value === this.valueChecked;\n    this._label.active = this.checked;\n\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    this._cd.markForCheck();\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, forwardRef, Input, OnDestroy, Renderer2} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRadioGroup),\n  multi: true\n};\n\nlet nextId = 0;\n\n/**\n * Allows to easily create Bootstrap-style radio buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n@Directive({selector: '[ngbRadioGroup]', host: {'role': 'radiogroup'}, providers: [NGB_RADIO_VALUE_ACCESSOR]})\nexport class NgbRadioGroup implements ControlValueAccessor {\n  private _radios: Set<NgbRadio> = new Set<NgbRadio>();\n  private _value = null;\n  private _disabled: boolean;\n\n  get disabled() { return this._disabled; }\n  set disabled(isDisabled: boolean) { this.setDisabledState(isDisabled); }\n\n  /**\n   * Name of the radio group applied to radio input elements.\n   *\n   * Will be applied to all radio input elements inside the group,\n   * unless [`NgbRadio`](#/components/buttons/api#NgbRadio)'s specify names themselves.\n   *\n   * If not provided, will be generated in the `ngb-radio-xx` format.\n   */\n  @Input() name = `ngb-radio-${nextId++}`;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  onRadioChange(radio: NgbRadio) {\n    this.writeValue(radio.value);\n    this.onChange(radio.value);\n  }\n\n  onRadioValueUpdate() { this._updateRadiosValue(); }\n\n  register(radio: NgbRadio) { this._radios.add(radio); }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this._updateRadiosDisabled();\n  }\n\n  unregister(radio: NgbRadio) { this._radios.delete(radio); }\n\n  writeValue(value) {\n    this._value = value;\n    this._updateRadiosValue();\n  }\n\n  private _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\n  private _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\n}\n\n\n/**\n * A directive that marks an input of type \"radio\" as a part of the\n * [`NgbRadioGroup`](#/components/buttons/api#NgbRadioGroup).\n */\n@Directive({\n  selector: '[ngbButton][type=radio]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '[name]': 'nameAttr',\n    '(change)': 'onChange()',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  }\n})\nexport class NgbRadio implements OnDestroy {\n  static ngAcceptInputType_disabled: boolean | '';\n\n  private _checked: boolean;\n  private _disabled: boolean;\n  private _value: any = null;\n\n  /**\n   * The value for the 'name' property of the input element.\n   *\n   * All inputs of the radio group should have the same name. If not specified,\n   * the name of the enclosing group is used.\n   */\n  @Input() name: string;\n\n  /**\n   * The form control value when current radio button is checked.\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    const stringValue = value ? value.toString() : '';\n    this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n    this._group.onRadioValueUpdate();\n  }\n\n  /**\n   * If `true`, current radio button will be disabled.\n   */\n  @Input('disabled')\n  set disabled(isDisabled: boolean) {\n    this._disabled = isDisabled !== false;\n    this.updateDisabled();\n  }\n\n  set focused(isFocused: boolean) {\n    if (this._label) {\n      this._label.focused = isFocused;\n    }\n    if (!isFocused) {\n      this._group.onTouched();\n    }\n  }\n\n  get checked() { return this._checked; }\n\n  get disabled() { return this._group.disabled || this._disabled; }\n\n  get value() { return this._value; }\n\n  get nameAttr() { return this.name || this._group.name; }\n\n  constructor(\n      private _group: NgbRadioGroup, private _label: NgbButtonLabel, private _renderer: Renderer2,\n      private _element: ElementRef<HTMLInputElement>, private _cd: ChangeDetectorRef) {\n    this._group.register(this);\n    this.updateDisabled();\n  }\n\n  ngOnDestroy() { this._group.unregister(this); }\n\n  onChange() { this._group.onRadioChange(this); }\n\n  updateValue(value) {\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    if (this.value !== value) {\n      this._cd.markForCheck();\n    }\n\n    this._checked = this.value === value;\n    this._label.active = this._checked;\n  }\n\n  updateDisabled() { this._label.disabled = this.disabled; }\n}\n","import {NgModule} from '@angular/core';\nimport {NgbButtonLabel} from './label';\nimport {NgbCheckBox} from './checkbox';\nimport {NgbRadio, NgbRadioGroup} from './radio';\n\nexport {NgbButtonLabel} from './label';\nexport {NgbCheckBox} from './checkbox';\nexport {NgbRadio, NgbRadioGroup} from './radio';\n\n\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\n\n@NgModule({declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES})\nexport class NgbButtonsModule {\n}\n","import {Injectable} from '@angular/core';\nimport {NgbConfig} from '../ngb-config';\n\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbCarouselConfig {\n  animation: boolean;\n  interval = 5000;\n  wrap = true;\n  keyboard = true;\n  pauseOnHover = true;\n  pauseOnFocus = true;\n  showNavigationArrows = true;\n  showNavigationIndicators = true;\n\n  constructor(ngbConfig: NgbConfig) { this.animation = ngbConfig.animation; }\n}\n","import {NgbTransitionStartFn} from '../util/transition/ngbTransition';\nimport {reflow} from '../util/util';\n\n/**\n * Defines the carousel slide transition direction.\n */\nexport enum NgbSlideEventDirection {\n  LEFT = 'left',\n  RIGHT = 'right'\n}\n\nexport interface NgbCarouselCtx { direction: 'left' | 'right'; }\n\nconst isAnimated = ({classList}) => {\n  return classList.contains('carousel-item-left') || classList.contains('carousel-item-right');\n};\n\nconst removeDirectionClasses = ({classList}) => {\n  classList.remove('carousel-item-left');\n  classList.remove('carousel-item-right');\n};\n\nconst removeClasses = ({classList}) => {\n  removeDirectionClasses({classList});\n  classList.remove('carousel-item-prev');\n  classList.remove('carousel-item-next');\n};\n\nexport const ngbCarouselTransitionIn: NgbTransitionStartFn<NgbCarouselCtx> =\n    (element: HTMLElement, {direction}: NgbCarouselCtx) => {\n      const {classList} = element;\n      if (isAnimated(element)) {\n        // Revert the transition\n        removeDirectionClasses(element);\n      } else {\n        // For the 'in' transition, a 'pre-class' is applied to the element to ensure its visibility\n        classList.add('carousel-item-' + (direction === NgbSlideEventDirection.LEFT ? 'next' : 'prev'));\n        reflow(element);\n        classList.add('carousel-item-' + direction);\n      }\n\n      return () => {\n        removeClasses(element);\n        classList.add('active');\n      };\n    };\n\nexport const ngbCarouselTransitionOut: NgbTransitionStartFn<NgbCarouselCtx> =\n    (element: HTMLElement, {direction}: NgbCarouselCtx) => {\n      const {classList} = element;\n      //  direction is left or right, depending on the way the slide goes out.\n      if (isAnimated(element)) {\n        // Revert the transition\n        removeDirectionClasses(element);\n      } else {\n        classList.add('carousel-item-' + direction);\n      }\n\n      return () => {\n        removeClasses(element);\n        classList.remove('active');\n      };\n    };\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation,\n  AfterViewInit\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\nimport {NgbCarouselConfig} from './carousel-config';\n\nimport {BehaviorSubject, combineLatest, NEVER, Observable, Subject, timer, zip} from 'rxjs';\nimport {distinctUntilChanged, map, startWith, switchMap, take, takeUntil} from 'rxjs/operators';\nimport {ngbRunTransition, NgbTransitionOptions} from '../util/transition/ngbTransition';\nimport {\n  ngbCarouselTransitionIn,\n  ngbCarouselTransitionOut,\n  NgbSlideEventDirection,\n  NgbCarouselCtx\n} from './carousel-transition';\n\nlet nextId = 0;\n\n/**\n * A directive that wraps the individual carousel slide.\n */\n@Directive({selector: 'ng-template[ngbSlide]'})\nexport class NgbSlide {\n  /**\n   * Slide id that must be unique for the entire document.\n   *\n   * If not provided, will be generated in the `ngb-slide-xx` format.\n   */\n  @Input() id = `ngb-slide-${nextId++}`;\n\n  /**\n   * An event emitted when the slide transition is finished\n   *\n   * @since 8.0.0\n   */\n  @Output() slid = new EventEmitter<NgbSingleSlideEvent>();\n\n  constructor(public tplRef: TemplateRef<any>) {}\n}\n\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\n@Component({\n  selector: 'ngb-carousel',\n  exportAs: 'ngbCarousel',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'carousel slide',\n    '[style.display]': '\"block\"',\n    'tabIndex': '0',\n    '(keydown.arrowLeft)': 'keyboard && arrowLeft()',\n    '(keydown.arrowRight)': 'keyboard && arrowRight()',\n    '(mouseenter)': 'mouseHover = true',\n    '(mouseleave)': 'mouseHover = false',\n    '(focusin)': 'focused = true',\n    '(focusout)': 'focused = false',\n    '[attr.aria-activedescendant]': 'activeId'\n  },\n  template: `\n    <ol class=\"carousel-indicators\" [class.sr-only]=\"!showNavigationIndicators\" role=\"tablist\">\n      <li *ngFor=\"let slide of slides\" [class.active]=\"slide.id === activeId\"\n          role=\"tab\" [attr.aria-labelledby]=\"'slide-' + slide.id\" [attr.aria-controls]=\"'slide-' + slide.id\"\n          [attr.aria-selected]=\"slide.id === activeId\"\n          (click)=\"focus();select(slide.id, NgbSlideEventSource.INDICATOR);\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides; index as i; count as c\" class=\"carousel-item\" [id]=\"'slide-' + slide.id\" role=\"tabpanel\">\n        <span class=\"sr-only\" i18n=\"Currently selected slide number read by screen reader@@ngb.carousel.slide-number\">\n          Slide {{i + 1}} of {{c}}\n        </span>\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"arrowLeft()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"arrowRight()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </a>\n  `\n})\nexport class NgbCarousel implements AfterContentChecked,\n    AfterContentInit, AfterViewInit, OnDestroy {\n  @ContentChildren(NgbSlide) slides: QueryList<NgbSlide>;\n\n  public NgbSlideEventSource = NgbSlideEventSource;\n\n  private _destroy$ = new Subject<void>();\n  private _interval$ = new BehaviorSubject(0);\n  private _mouseHover$ = new BehaviorSubject(false);\n  private _focused$ = new BehaviorSubject(false);\n  private _pauseOnHover$ = new BehaviorSubject(false);\n  private _pauseOnFocus$ = new BehaviorSubject(false);\n  private _pause$ = new BehaviorSubject(false);\n  private _wrap$ = new BehaviorSubject(false);\n\n  /**\n   * A flag to enable/disable the animations.\n   *\n   * @since 8.0.0\n   */\n  @Input() animation: boolean;\n\n  /**\n   * The slide id that should be displayed **initially**.\n   *\n   * For subsequent interactions use methods `select()`, `next()`, etc. and the `(slide)` output.\n   */\n  @Input() activeId: string;\n\n  /**\n   * Time in milliseconds before the next slide is shown.\n   */\n  @Input()\n  set interval(value: number) {\n    this._interval$.next(value);\n  }\n\n  get interval() { return this._interval$.value; }\n\n  /**\n   * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n   */\n  @Input()\n  set wrap(value: boolean) {\n    this._wrap$.next(value);\n  }\n\n  get wrap() { return this._wrap$.value; }\n\n  /**\n   * If `true`, allows to interact with carousel using keyboard 'arrow left' and 'arrow right'.\n   */\n  @Input() keyboard: boolean;\n\n  /**\n   * If `true`, will pause slide switching when mouse cursor hovers the slide.\n   *\n   * @since 2.2.0\n   */\n  @Input()\n  set pauseOnHover(value: boolean) {\n    this._pauseOnHover$.next(value);\n  }\n\n  get pauseOnHover() { return this._pauseOnHover$.value; }\n\n  /**\n   * If `true`, will pause slide switching when the focus is inside the carousel.\n   */\n  @Input()\n  set pauseOnFocus(value: boolean) {\n    this._pauseOnFocus$.next(value);\n  }\n\n  get pauseOnFocus() { return this._pauseOnFocus$.value; }\n\n  /**\n   * If `true`, 'previous' and 'next' navigation arrows will be visible on the slide.\n   *\n   * @since 2.2.0\n   */\n  @Input() showNavigationArrows: boolean;\n\n  /**\n   * If `true`, navigation indicators at the bottom of the slide will be visible.\n   *\n   * @since 2.2.0\n   */\n  @Input() showNavigationIndicators: boolean;\n\n  /**\n   * An event emitted just before the slide transition starts.\n   *\n   * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n   */\n  @Output() slide = new EventEmitter<NgbSlideEvent>();\n\n  /**\n   * An event emitted right after the slide transition is completed.\n   *\n   * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n   *\n   * @since 8.0.0\n   */\n  @Output() slid = new EventEmitter<NgbSlideEvent>();\n\n  /*\n   * Keep the ids of the panels currently transitionning\n   * in order to allow only the transition revertion\n   */\n  private _transitionIds: [string, string] | null = null;\n\n  set mouseHover(value: boolean) { this._mouseHover$.next(value); }\n\n  get mouseHover() { return this._mouseHover$.value; }\n\n  set focused(value: boolean) { this._focused$.next(value); }\n\n  get focused() { return this._focused$.value; }\n\n  constructor(\n      config: NgbCarouselConfig, @Inject(PLATFORM_ID) private _platformId, private _ngZone: NgZone,\n      private _cd: ChangeDetectorRef, private _container: ElementRef) {\n    this.animation = config.animation;\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n    this.pauseOnHover = config.pauseOnHover;\n    this.pauseOnFocus = config.pauseOnFocus;\n    this.showNavigationArrows = config.showNavigationArrows;\n    this.showNavigationIndicators = config.showNavigationIndicators;\n  }\n\n  arrowLeft() {\n    this.focus();\n    this.prev(NgbSlideEventSource.ARROW_LEFT);\n  }\n\n  arrowRight() {\n    this.focus();\n    this.next(NgbSlideEventSource.ARROW_RIGHT);\n  }\n\n  ngAfterContentInit() {\n    // setInterval() doesn't play well with SSR and protractor,\n    // so we should run it in the browser and outside Angular\n    if (isPlatformBrowser(this._platformId)) {\n      this._ngZone.runOutsideAngular(() => {\n        const hasNextSlide$ = combineLatest([\n                                this.slide.pipe(map(slideEvent => slideEvent.current), startWith(this.activeId)),\n                                this._wrap$, this.slides.changes.pipe(startWith(null))\n                              ])\n                                  .pipe(\n                                      map(([currentSlideId, wrap]) => {\n                                        const slideArr = this.slides.toArray();\n                                        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n                                        return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n                                      }),\n                                      distinctUntilChanged());\n        combineLatest([\n          this._pause$, this._pauseOnHover$, this._mouseHover$, this._pauseOnFocus$, this._focused$, this._interval$,\n          hasNextSlide$\n        ])\n            .pipe(\n                map(([pause, pauseOnHover, mouseHover, pauseOnFocus, focused, interval,\n                      hasNextSlide]: [boolean, boolean, boolean, boolean, boolean, number, boolean]) =>\n                        ((pause || (pauseOnHover && mouseHover) || (pauseOnFocus && focused) || !hasNextSlide) ?\n                             0 :\n                             interval)),\n\n                distinctUntilChanged(), switchMap(interval => interval > 0 ? timer(interval, interval) : NEVER),\n                takeUntil(this._destroy$))\n            .subscribe(() => this._ngZone.run(() => this.next(NgbSlideEventSource.TIMER)));\n      });\n    }\n\n    this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(() => this._cd.markForCheck());\n  }\n\n  ngAfterContentChecked() {\n    let activeSlide = this._getSlideById(this.activeId);\n    this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : '');\n  }\n\n  ngAfterViewInit() {\n    // Initialize the 'active' class (not managed by the template)\n    if (this.activeId) {\n      const element = this._getSlideElement(this.activeId);\n      if (element) {\n        element.classList.add('active');\n      }\n    }\n  }\n\n  ngOnDestroy() { this._destroy$.next(); }\n\n  /**\n   * Navigates to a slide with the specified identifier.\n   */\n  select(slideId: string, source?: NgbSlideEventSource) {\n    this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n  }\n\n  /**\n   * Navigates to the previous slide.\n   */\n  prev(source?: NgbSlideEventSource) {\n    this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT, source);\n  }\n\n  /**\n   * Navigates to the next slide.\n   */\n  next(source?: NgbSlideEventSource) {\n    this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT, source);\n  }\n\n  /**\n   * Pauses cycling through the slides.\n   */\n  pause() { this._pause$.next(true); }\n\n  /**\n   * Restarts cycling through the slides from left to right.\n   */\n  cycle() { this._pause$.next(false); }\n\n  /**\n   * Set the focus on the carousel.\n   */\n  focus() { this._container.nativeElement.focus(); }\n\n  private _cycleToSelected(slideIdx: string, direction: NgbSlideEventDirection, source?: NgbSlideEventSource) {\n    const transitionIds = this._transitionIds;\n    if (transitionIds && (transitionIds[0] !== slideIdx || transitionIds[1] !== this.activeId)) {\n      // Revert prevented\n      return;\n    }\n\n    let selectedSlide = this._getSlideById(slideIdx);\n    if (selectedSlide && selectedSlide.id !== this.activeId) {\n      this._transitionIds = [this.activeId, slideIdx];\n      this.slide.emit(\n          {prev: this.activeId, current: selectedSlide.id, direction: direction, paused: this._pause$.value, source});\n\n      const options: NgbTransitionOptions<NgbCarouselCtx> = {\n        animation: this.animation,\n        runningTransition: 'stop',\n        context: {direction},\n      };\n\n      const transitions: Array<Observable<any>> = [];\n      const activeSlide = this._getSlideById(this.activeId);\n      if (activeSlide) {\n        const activeSlideTransition =\n            ngbRunTransition(this._getSlideElement(activeSlide.id), ngbCarouselTransitionOut, options);\n        activeSlideTransition.subscribe(() => { activeSlide.slid.emit({isShown: false, direction, source}); });\n        transitions.push(activeSlideTransition);\n      }\n\n      const previousId = this.activeId;\n      this.activeId = selectedSlide.id;\n      const nextSlide = this._getSlideById(this.activeId);\n      const transition = ngbRunTransition(this._getSlideElement(selectedSlide.id), ngbCarouselTransitionIn, options);\n      transition.subscribe(() => { nextSlide ?.slid.emit({isShown: true, direction, source}); });\n      transitions.push(transition);\n\n      zip(...transitions).pipe(take(1)).subscribe(() => {\n        this._transitionIds = null;\n        this.slid.emit(\n            {prev: previousId, current: selectedSlide !.id, direction: direction, paused: this._pause$.value, source});\n      });\n    }\n\n    // we get here after the interval fires or any external API call like next(), prev() or select()\n    this._cd.markForCheck();\n  }\n\n  private _getSlideEventDirection(currentActiveSlideId: string, nextActiveSlideId: string): NgbSlideEventDirection {\n    const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n    const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n  }\n\n  private _getSlideById(slideId: string): NgbSlide | null {\n    return this.slides.find(slide => slide.id === slideId) || null;\n  }\n\n  private _getSlideIdxById(slideId: string): number {\n    const slide = this._getSlideById(slideId);\n    return slide != null ? this.slides.toArray().indexOf(slide) : -1;\n  }\n\n  private _getNextSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isLastSlide = currentSlideIdx === slideArr.length - 1;\n\n    return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n                         slideArr[currentSlideIdx + 1].id;\n  }\n\n  private _getPrevSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isFirstSlide = currentSlideIdx === 0;\n\n    return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n                          slideArr[currentSlideIdx - 1].id;\n  }\n\n  private _getSlideElement(slideId: string): HTMLElement {\n    return this._container.nativeElement.querySelector(`#slide-${slideId}`);\n  }\n}\n\n/**\n * A slide change event emitted right after the slide transition is completed.\n */\nexport interface NgbSlideEvent {\n  /**\n   * The previous slide id.\n   */\n  prev: string;\n\n  /**\n   * The current slide id.\n   */\n  current: string;\n\n  /**\n   * The slide event direction.\n   *\n   * Possible values are `'left' | 'right'`.\n   */\n  direction: NgbSlideEventDirection;\n\n  /**\n   * Whether the pause() method was called (and no cycle() call was done afterwards).\n   *\n   * @since 5.1.0\n   */\n  paused: boolean;\n\n  /**\n   * Source triggering the slide change event.\n   *\n   * Possible values are `'timer' | 'arrowLeft' | 'arrowRight' | 'indicator'`\n   *\n   * @since 5.1.0\n   */\n  source?: NgbSlideEventSource;\n}\n\n/**\n * A slide change event emitted right after the slide transition is completed.\n *\n * @since 8.0.0\n */\nexport interface NgbSingleSlideEvent {\n  /**\n   * true if the slide is shown, false otherwise\n   */\n  isShown: boolean;\n\n  /**\n   * The slide event direction.\n   *\n   * Possible values are `'left' | 'right'`.\n   */\n  direction: NgbSlideEventDirection;\n\n  /**\n   * Source triggering the slide change event.\n   *\n   * Possible values are `'timer' | 'arrowLeft' | 'arrowRight' | 'indicator'`\n   *\n   */\n  source?: NgbSlideEventSource;\n}\n\nexport enum NgbSlideEventSource {\n  TIMER = 'timer',\n  ARROW_LEFT = 'arrowLeft',\n  ARROW_RIGHT = 'arrowRight',\n  INDICATOR = 'indicator'\n}\n\nexport const NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NGB_CAROUSEL_DIRECTIVES} from './carousel';\n\nexport {NgbCarousel, NgbSlide, NgbSlideEvent, NgbSlideEventSource} from './carousel';\nexport {NgbSlideEventDirection} from './carousel-transition';\nexport {NgbCarouselConfig} from './carousel-config';\n\n@NgModule({declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule]})\nexport class NgbCarouselModule {\n}\n","import {Injectable} from '@angular/core';\nimport {NgbConfig} from '../ngb-config';\n\n/**\n * A configuration service for the [NgbCollapse](#/components/collapse/api#NgbCollapse) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all collapses used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbCollapseConfig {\n  animation: boolean;\n\n  constructor(ngbConfig: NgbConfig) { this.animation = ngbConfig.animation; }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport {ngbRunTransition} from '../util/transition/ngbTransition';\nimport {ngbCollapsingTransition} from '../util/transition/ngbCollapseTransition';\nimport {NgbCollapseConfig} from './collapse-config';\n\n/**\n * A directive to provide a simple way of hiding and showing elements on the page.\n */\n@Directive({selector: '[ngbCollapse]', exportAs: 'ngbCollapse'})\nexport class NgbCollapse implements OnInit, OnChanges {\n  /**\n   * If `true`, collapse will be animated.\n   *\n   * Animation is triggered only when clicked on triggering element\n   * or via the `.toggle()` function\n   *\n   * @since 8.0.0\n   */\n  @Input() animation = false;\n\n  /**\n   * If `true`, will collapse the element or show it otherwise.\n   */\n  @Input('ngbCollapse') collapsed = false;\n\n  @Output() ngbCollapseChange = new EventEmitter<boolean>();\n\n  /**\n   * An event emitted when the collapse element is shown, after the transition. It has no payload.\n   *\n   * @since 8.0.0\n   */\n  @Output() shown = new EventEmitter<void>();\n\n  /**\n   * An event emitted when the collapse element is hidden, after the transition. It has no payload.\n   *\n   * @since 8.0.0\n   */\n  @Output() hidden = new EventEmitter<void>();\n\n\n  constructor(private _element: ElementRef, config: NgbCollapseConfig) { this.animation = config.animation; }\n\n  ngOnInit() {\n    this._element.nativeElement.classList.add('collapse');\n    this._runTransition(this.collapsed, false, false);\n  }\n\n  ngOnChanges({collapsed}: SimpleChanges) {\n    if (!collapsed.firstChange) {\n      this._runTransition(this.collapsed, this.animation);\n    }\n  }\n\n  /**\n   * Triggers collapsing programmatically.\n   *\n   * If there is a collapsing transition running already, it will be reversed.\n   * If the animations are turned off this happens synchronously.\n   *\n   * @since 8.0.0\n   */\n  toggle(open: boolean = this.collapsed) {\n    this.collapsed = !open;\n    this.ngbCollapseChange.next(this.collapsed);\n    this._runTransition(this.collapsed, this.animation);\n  }\n\n  private _runTransition(collapsed: boolean, animation: boolean, emitEvent = true) {\n    ngbRunTransition(this._element.nativeElement, ngbCollapsingTransition, {\n      animation,\n      runningTransition: 'stop',\n      context: {direction: collapsed ? 'hide' : 'show'}\n    }).subscribe(() => {\n      if (emitEvent) {\n        if (collapsed) {\n          this.hidden.emit();\n        } else {\n          this.shown.emit();\n        }\n      }\n    });\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NgbCollapse} from './collapse';\n\nexport {NgbCollapse} from './collapse';\nexport {NgbCollapseConfig} from './collapse-config';\n\n@NgModule({declarations: [NgbCollapse], exports: [NgbCollapse]})\nexport class NgbCollapseModule {\n}\n","import {NgbDateStruct} from './ngb-date-struct';\nimport {isInteger} from '../util/util';\n\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\nexport class NgbDate implements NgbDateStruct {\n  /**\n   * The year, for example 2016\n   */\n  year: number;\n\n  /**\n   * The month, for example 1=Jan ... 12=Dec as in ISO 8601\n   */\n  month: number;\n\n  /**\n   * The day of month, starting with 1\n   */\n  day: number;\n\n  /**\n   * A **static method** that creates a new date object from the `NgbDateStruct`,\n   *\n   * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n   *\n   * If the `date` is already of `NgbDate` type, the method will return the same object.\n   */\n  static from(date?: NgbDateStruct | null): NgbDate | null {\n    if (date instanceof NgbDate) {\n      return date;\n    }\n    return date ? new NgbDate(date.year, date.month, date.day) : null;\n  }\n\n  constructor(year: number, month: number, day: number) {\n    this.year = isInteger(year) ? year : <any>null;\n    this.month = isInteger(month) ? month : <any>null;\n    this.day = isInteger(day) ? day : <any>null;\n  }\n\n  /**\n   * Checks if the current date is equal to another date.\n   */\n  equals(other?: NgbDateStruct | null): boolean {\n    return other != null && this.year === other.year && this.month === other.month && this.day === other.day;\n  }\n\n  /**\n   * Checks if the current date is before another date.\n   */\n  before(other?: NgbDateStruct | null): boolean {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day < other.day;\n      } else {\n        return this.month < other.month;\n      }\n    } else {\n      return this.year < other.year;\n    }\n  }\n\n  /**\n   * Checks if the current date is after another date.\n   */\n  after(other?: NgbDateStruct | null): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day > other.day;\n      } else {\n        return this.month > other.month;\n      }\n    } else {\n      return this.year > other.year;\n    }\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {Injectable} from '@angular/core';\nimport {isInteger} from '../util/util';\n\nexport function fromJSDate(jsDate: Date) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nexport function toJSDate(date: NgbDate) {\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n  // this is done avoid 30 -> 1930 conversion\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n  return jsDate;\n}\n\nexport type NgbPeriod = 'y' | 'm' | 'd';\n\nexport function NGB_DATEPICKER_CALENDAR_FACTORY() {\n  return new NgbCalendarGregorian();\n}\n\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY})\nexport abstract class NgbCalendar {\n  /**\n   * Returns the number of days per week.\n   */\n  abstract getDaysPerWeek(): number;\n\n  /**\n   * Returns an array of months per year.\n   *\n   * With default calendar we use ISO 8601 and return [1, 2, ..., 12];\n   */\n  abstract getMonths(year?: number): number[];\n\n  /**\n   * Returns the number of weeks per month.\n   */\n  abstract getWeeksPerMonth(): number;\n\n  /**\n   * Returns the weekday number for a given day.\n   *\n   * With the default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  abstract getWeekday(date: NgbDate): number;\n\n  /**\n   * Adds a number of years, months or days to a given date.\n   *\n   * * `period` can be `y`, `m` or `d` and defaults to day.\n   * * `number` defaults to 1.\n   *\n   * Always returns a new date.\n   */\n  abstract getNext(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Subtracts a number of years, months or days from a given date.\n   *\n   * * `period` can be `y`, `m` or `d` and defaults to day.\n   * * `number` defaults to 1.\n   *\n   * Always returns a new date.\n   */\n  abstract getPrev(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Returns the week number for a given week.\n   */\n  abstract getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number): number;\n\n  /**\n   * Returns the today's date.\n   */\n  abstract getToday(): NgbDate;\n\n  /**\n   * Checks if a date is valid in the current calendar.\n   */\n  abstract isValid(date?: NgbDate | null): boolean;\n}\n\n@Injectable()\nexport class NgbCalendarGregorian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    let jsDate = toJSDate(date);\n    let checkMonth = true;\n    let expectedMonth = jsDate.getMonth();\n\n    switch (period) {\n      case 'y':\n        jsDate.setFullYear(jsDate.getFullYear() + number);\n        break;\n      case 'm':\n        expectedMonth += number;\n        jsDate.setMonth(expectedMonth);\n        expectedMonth = expectedMonth % 12;\n        if (expectedMonth < 0) {\n          expectedMonth = expectedMonth + 12;\n        }\n        break;\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        checkMonth = false;\n        break;\n      default:\n        return date;\n    }\n\n    if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n      // this means the destination month has less days than the initial month\n      // let's go back to the end of the previous month:\n      jsDate.setDate(0);\n    }\n\n    return fromJSDate(jsDate);\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    let jsDate = toJSDate(date);\n    let day = jsDate.getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    let date = week[thursdayIndex];\n\n    const jsDate = toJSDate(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    jsDate.setMonth(0);  // Compare with Jan 1\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromJSDate(new Date()); }\n\n  isValid(date?: NgbDate | null): boolean {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    }\n\n    // year 0 doesn't exist in Gregorian calendar\n    if (date.year === 0) {\n      return false;\n    }\n\n    const jsDate = toJSDate(date);\n\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n        jsDate.getDate() === date.day;\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {DatepickerViewModel, DayViewModel, MonthViewModel} from './datepicker-view-model';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport function isChangedDate(prev?: NgbDate | null, next?: NgbDate | null): boolean {\n  return !dateComparator(prev, next);\n}\n\nexport function isChangedMonth(prev?: NgbDate | null, next?: NgbDate | null): boolean {\n  return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\n\nexport function dateComparator(prev?: NgbDate | null, next?: NgbDate | null): boolean {\n  return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\n\nexport function checkMinBeforeMax(minDate?: NgbDate | null, maxDate?: NgbDate | null): void {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n  }\n}\n\nexport function checkDateInRange(date?: NgbDate | null, minDate?: NgbDate | null, maxDate?: NgbDate | null): NgbDate |\n    null {\n  if (date && minDate && date.before(minDate)) {\n    return minDate;\n  }\n  if (date && maxDate && date.after(maxDate)) {\n    return maxDate;\n  }\n\n  return date || null;\n}\n\nexport function isDateSelectable(date: NgbDate | null | undefined, state: DatepickerViewModel) {\n  const {minDate, maxDate, disabled, markDisabled} = state;\n  // clang-format off\n  return !(\n    date === null ||\n    date === undefined ||\n    disabled ||\n    (markDisabled && markDisabled(date, {year: date.year, month: date.month})) ||\n    (minDate && date.before(minDate)) ||\n    (maxDate && date.after(maxDate))\n  );\n  // clang-format on\n}\n\nexport function generateSelectBoxMonths(\n    calendar: NgbCalendar, date: NgbDate, minDate: NgbDate | null, maxDate: NgbDate | null) {\n  if (!date) {\n    return [];\n  }\n\n  let months = calendar.getMonths(date.year);\n\n  if (minDate && date.year === minDate.year) {\n    const index = months.findIndex(month => month === minDate.month);\n    months = months.slice(index);\n  }\n\n  if (maxDate && date.year === maxDate.year) {\n    const index = months.findIndex(month => month === maxDate.month);\n    months = months.slice(0, index + 1);\n  }\n\n  return months;\n}\n\nexport function generateSelectBoxYears(date: NgbDate, minDate: NgbDate | null, maxDate: NgbDate | null) {\n  if (!date) {\n    return [];\n  }\n\n  const start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n  const end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n\n  const length = end - start + 1;\n  const numbers = Array(length);\n  for (let i = 0; i < length; i++) {\n    numbers[i] = start + i;\n  }\n\n  return numbers;\n}\n\nexport function nextMonthDisabled(calendar: NgbCalendar, date: NgbDate, maxDate: NgbDate | null) {\n  const nextDate = Object.assign(calendar.getNext(date, 'm'), {day: 1});\n  return maxDate != null && nextDate.after(maxDate);\n}\n\nexport function prevMonthDisabled(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate | null) {\n  const prevDate = Object.assign(calendar.getPrev(date, 'm'), {day: 1});\n  return minDate != null && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n                             prevDate.year < minDate.year && minDate.month === 1);\n}\n\nexport function buildMonths(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    force: boolean): MonthViewModel[] {\n  const {displayMonths, months} = state;\n  // move old months to a temporary array\n  const monthsToReuse = months.splice(0, months.length);\n\n  // generate new first dates, nullify or reuse months\n  const firstDates = Array.from({length: displayMonths}, (_, i) => {\n    const firstDate = Object.assign(calendar.getNext(date, 'm', i), {day: 1});\n    months[i] = <any>null;\n\n    if (!force) {\n      const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate));\n      // move reused month back to months\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n\n    return firstDate;\n  });\n\n  // rebuild nullified months\n  firstDates.forEach((firstDate, i) => {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {} as MonthViewModel);\n    }\n  });\n\n  return months;\n}\n\nexport function buildMonth(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    month: MonthViewModel = {} as MonthViewModel): MonthViewModel {\n  const {dayTemplateData, minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays} = state;\n  const calendarToday = calendar.getToday();\n\n  month.firstDate = <any>null;\n  month.lastDate = <any>null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n\n  date = getFirstViewDate(calendar, date, firstDayOfWeek);\n\n  // month has weeks\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    let weekObject = month.weeks[week];\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {number: 0, days: [], collapsed: true};\n    }\n    const days = weekObject.days;\n\n    // week has days\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0) {\n        month.weekdays[day] = calendar.getWeekday(date);\n      }\n\n      const newDate = new NgbDate(date.year, date.month, date.day);\n      const nextDate = calendar.getNext(newDate);\n\n      const ariaLabel = i18n.getDayAriaLabel(newDate);\n\n      // marking date as disabled\n      let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {month: month.number, year: month.year});\n      }\n\n      // today\n      let today = newDate.equals(calendarToday);\n\n      // adding user-provided data to the context\n      let contextUserData =\n          dayTemplateData ? dayTemplateData(newDate, {month: month.number, year: month.year}) : undefined;\n\n      // saving first date of the month\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      }\n\n      // saving last date of the month\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n\n      let dayObject = days[day];\n      if (!dayObject) {\n        dayObject = days[day] = {} as DayViewModel;\n      }\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(dayObject.context || {}, {\n        $implicit: newDate,\n        date: newDate,\n        data: contextUserData,\n        currentMonth: month.number,\n        currentYear: month.year, disabled,\n        focused: false,\n        selected: false, today\n      });\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n\n      date = nextDate;\n    }\n\n    weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek);\n\n    // marking week as collapsed\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\n        days[days.length - 1].date.month !== month.number;\n  }\n\n  return month;\n}\n\nexport function getFirstViewDate(calendar: NgbCalendar, date: NgbDate, firstDayOfWeek: number): NgbDate {\n  const daysPerWeek = calendar.getDaysPerWeek();\n  const firstMonthDate = new NgbDate(date.year, date.month, 1);\n  const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth, formatDate} from '@angular/common';\nimport {NgbDateStruct} from './ngb-date-struct';\n\nexport function NGB_DATEPICKER_18N_FACTORY(locale) {\n  return new NgbDatepickerI18nDefault(locale);\n}\n\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [LOCALE_ID]})\nexport abstract class NgbDatepickerI18n {\n  /**\n   * Returns the short weekday name to display in the heading of the month view.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  abstract getWeekdayShortName(weekday: number): string;\n\n  /**\n   * Returns the short month name to display in the date picker navigation.\n   *\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   */\n  abstract getMonthShortName(month: number, year?: number): string;\n\n  /**\n   * Returns the full month name to display in the date picker navigation.\n   *\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   */\n  abstract getMonthFullName(month: number, year?: number): string;\n\n  /**\n   * Returns the value of the `aria-label` attribute for a specific date.\n   *\n   * @since 2.0.0\n   */\n  abstract getDayAriaLabel(date: NgbDateStruct): string;\n\n  /**\n   * Returns the textual representation of a day that is rendered in a day cell.\n   *\n   * @since 3.0.0\n   */\n  getDayNumerals(date: NgbDateStruct): string { return `${date.day}`; }\n\n  /**\n   * Returns the textual representation of a week number rendered by datepicker.\n   *\n   * @since 3.0.0\n   */\n  getWeekNumerals(weekNumber: number): string { return `${weekNumber}`; }\n\n  /**\n   * Returns the textual representation of a year that is rendered in the datepicker year select box.\n   *\n   * @since 3.0.0\n   */\n  getYearNumerals(year: number): string { return `${year}`; }\n}\n\n@Injectable()\nexport class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n  private _weekdaysShort: Array<string>;\n  private _monthsShort: Array<string>;\n  private _monthsFull: Array<string>;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string) {\n    super();\n\n    const weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n    this._weekdaysShort = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n\n    this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n  }\n\n  getWeekdayShortName(weekday: number): string { return this._weekdaysShort[weekday - 1] || ''; }\n\n  getMonthShortName(month: number): string { return this._monthsShort[month - 1] || ''; }\n\n  getMonthFullName(month: number): string { return this._monthsFull[month - 1] || ''; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    const jsDate = new Date(date.year, date.month - 1, date.day);\n    return formatDate(jsDate, 'fullDate', this._locale);\n  }\n}\n","import {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DatepickerViewModel, NgbDayTemplateData, NgbMarkDisabled} from './datepicker-view-model';\nimport {Injectable} from '@angular/core';\nimport {isInteger, toInteger} from '../util/util';\nimport {Observable, Subject} from 'rxjs';\nimport {\n  buildMonths,\n  checkDateInRange,\n  checkMinBeforeMax,\n  isChangedDate,\n  isChangedMonth,\n  isDateSelectable,\n  generateSelectBoxYears,\n  generateSelectBoxMonths,\n  prevMonthDisabled,\n  nextMonthDisabled\n} from './datepicker-tools';\n\nimport {filter} from 'rxjs/operators';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport interface DatepickerServiceInputs extends Partial<\n    Required<Pick<DatepickerViewModel, 'dayTemplateData' | 'displayMonths' | 'disabled' | 'firstDayOfWeek' |\n                      'focusVisible' | 'markDisabled' | 'maxDate' | 'minDate' | 'navigation' | 'outsideDays'>>> {}\n\n@Injectable()\nexport class NgbDatepickerService {\n  private _VALIDATORS:\n      {[K in keyof DatepickerServiceInputs]: (v: DatepickerServiceInputs[K]) => Partial<DatepickerViewModel>| void} = {\n        dayTemplateData: (dayTemplateData: NgbDayTemplateData) => {\n          if (this._state.dayTemplateData !== dayTemplateData) {\n            return {dayTemplateData};\n          }\n        },\n        displayMonths: (displayMonths: number) => {\n          displayMonths = toInteger(displayMonths);\n          if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n            return {displayMonths};\n          }\n        },\n        disabled: (disabled: boolean) => {\n          if (this._state.disabled !== disabled) {\n            return {disabled};\n          }\n        },\n        firstDayOfWeek: (firstDayOfWeek: number) => {\n          firstDayOfWeek = toInteger(firstDayOfWeek);\n          if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n            return {firstDayOfWeek};\n          }\n        },\n        focusVisible: (focusVisible: boolean) => {\n          if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n            return {focusVisible};\n          }\n        },\n        markDisabled: (markDisabled: NgbMarkDisabled) => {\n          if (this._state.markDisabled !== markDisabled) {\n            return {markDisabled};\n          }\n        },\n        maxDate: (date: NgbDate) => {\n          const maxDate = this.toValidDate(date, null);\n          if (isChangedDate(this._state.maxDate, maxDate)) {\n            return {maxDate};\n          }\n        },\n        minDate: (date: NgbDate) => {\n          const minDate = this.toValidDate(date, null);\n          if (isChangedDate(this._state.minDate, minDate)) {\n            return {minDate};\n          }\n        },\n        navigation: (navigation: 'select' | 'arrows' | 'none') => {\n          if (this._state.navigation !== navigation) {\n            return {navigation};\n          }\n        },\n        outsideDays: (outsideDays: 'visible' | 'collapsed' | 'hidden') => {\n          if (this._state.outsideDays !== outsideDays) {\n            return {outsideDays};\n          }\n        }\n      };\n\n  private _model$ = new Subject<DatepickerViewModel>();\n\n  private _dateSelect$ = new Subject<NgbDate>();\n\n  private _state: DatepickerViewModel = {\n    dayTemplateData: null,\n    markDisabled: null,\n    maxDate: null,\n    minDate: null,\n    disabled: false,\n    displayMonths: 1,\n    firstDate: null,\n    firstDayOfWeek: 1,\n    lastDate: null,\n    focusDate: null,\n    focusVisible: false,\n    months: [],\n    navigation: 'select',\n    outsideDays: 'visible',\n    prevDisabled: false,\n    nextDisabled: false,\n    selectedDate: null,\n    selectBoxes: {years: [], months: []}\n  };\n\n  get model$(): Observable<DatepickerViewModel> { return this._model$.pipe(filter(model => model.months.length > 0)); }\n\n  get dateSelect$(): Observable<NgbDate> { return this._dateSelect$.pipe(filter(date => date !== null)); }\n\n  set(options: DatepickerServiceInputs) {\n    let patch = Object.keys(options)\n                    .map(key => this._VALIDATORS[key](options[key]))\n                    .reduce((obj, part) => ({...obj, ...part}), {});\n\n    if (Object.keys(patch).length > 0) {\n      this._nextState(patch);\n    }\n  }\n\n  constructor(private _calendar: NgbCalendar, private _i18n: NgbDatepickerI18n) {}\n\n  focus(date?: NgbDate | null) {\n    const focusedDate = this.toValidDate(date, null);\n    if (focusedDate != null && !this._state.disabled && isChangedDate(this._state.focusDate, focusedDate)) {\n      this._nextState({focusDate: date});\n    }\n  }\n\n  focusSelect() {\n    if (isDateSelectable(this._state.focusDate, this._state)) {\n      this.select(this._state.focusDate, {emitEvent: true});\n    }\n  }\n\n  open(date?: NgbDate | null) {\n    const firstDate = this.toValidDate(date, this._calendar.getToday());\n    if (firstDate != null && !this._state.disabled &&\n        (!this._state.firstDate || isChangedMonth(this._state.firstDate, firstDate))) {\n      this._nextState({firstDate});\n    }\n  }\n\n  select(date?: NgbDate | null, options: {emitEvent?: boolean} = {}) {\n    const selectedDate = this.toValidDate(date, null);\n    if (selectedDate != null && !this._state.disabled) {\n      if (isChangedDate(this._state.selectedDate, selectedDate)) {\n        this._nextState({selectedDate});\n      }\n\n      if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n        this._dateSelect$.next(selectedDate);\n      }\n    }\n  }\n\n  toValidDate(date?: NgbDateStruct | null, defaultValue?: NgbDate | null): NgbDate | null {\n    const ngbDate = NgbDate.from(date);\n    if (defaultValue === undefined) {\n      defaultValue = this._calendar.getToday();\n    }\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n  }\n\n  getMonth(struct: NgbDateStruct) {\n    for (let month of this._state.months) {\n      if (struct.month === month.number && struct.year === month.year) {\n        return month;\n      }\n    }\n    throw new Error(`month ${struct.month} of year ${struct.year} not found`);\n  }\n\n  private _nextState(patch: Partial<DatepickerViewModel>) {\n    const newState = this._updateState(patch);\n    this._patchContexts(newState);\n    this._state = newState;\n    this._model$.next(this._state);\n  }\n\n  private _patchContexts(state: DatepickerViewModel) {\n    const {months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays} = state;\n    state.months.forEach(month => {\n      month.weeks.forEach(week => {\n        week.days.forEach(day => {\n\n          // patch focus flag\n          if (focusDate) {\n            day.context.focused = focusDate.equals(day.date) && focusVisible;\n          }\n\n          // calculating tabindex\n          day.tabindex =\n              !disabled && focusDate && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n\n          // override context disabled\n          if (disabled === true) {\n            day.context.disabled = true;\n          }\n\n          // patch selection flag\n          if (selectedDate !== undefined) {\n            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n          }\n\n          // visibility\n          if (month.number !== day.date.month) {\n            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\n                (displayMonths > 1 && day.date.after(months[0].firstDate) &&\n                 day.date.before(months[displayMonths - 1].lastDate));\n          }\n        });\n      });\n    });\n  }\n\n  private _updateState(patch: Partial<DatepickerViewModel>): DatepickerViewModel {\n    // patching fields\n    const state = Object.assign({}, this._state, patch);\n\n    let startDate = state.firstDate;\n\n    // min/max dates changed\n    if ('minDate' in patch || 'maxDate' in patch) {\n      checkMinBeforeMax(state.minDate, state.maxDate);\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n    }\n\n    // disabled\n    if ('disabled' in patch) {\n      state.focusVisible = false;\n    }\n\n    // initial rebuild via 'select()'\n    if ('selectedDate' in patch && this._state.months.length === 0) {\n      startDate = state.selectedDate;\n    }\n\n    // terminate early if only focus visibility was changed\n    if ('focusVisible' in patch) {\n      return state;\n    }\n\n    // focus date changed\n    if ('focusDate' in patch) {\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n\n      // nothing to rebuild if only focus changed and it is still visible\n      if (state.months.length !== 0 && state.focusDate && !state.focusDate.before(state.firstDate) &&\n          !state.focusDate.after(state.lastDate)) {\n        return state;\n      }\n    }\n\n    // first date changed\n    if ('firstDate' in patch) {\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.firstDate;\n    }\n\n    // rebuilding months\n    if (startDate) {\n      const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch ||\n          'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n\n      const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n\n      // updating months and boundary dates\n      state.months = months;\n      state.firstDate = months[0].firstDate;\n      state.lastDate = months[months.length - 1].lastDate;\n\n      // reset selected date if 'markDisabled' returns true\n      if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n        state.selectedDate = null;\n      }\n\n      // adjusting focus after months were built\n      if ('firstDate' in patch) {\n        if (!state.focusDate || state.focusDate.before(state.firstDate) || state.focusDate.after(state.lastDate)) {\n          state.focusDate = startDate;\n        }\n      }\n\n      // adjusting months/years for the select box navigation\n      const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n      const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n      if (state.navigation === 'select') {\n        // years ->  boundaries (min/max were changed)\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n          state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n        }\n\n        // months -> when current year or boundaries change\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n          state.selectBoxes.months =\n              generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n        }\n      } else {\n        state.selectBoxes = {years: [], months: []};\n      }\n\n      // updating navigation arrows -> boundaries change (min/max) or month/year changes\n      if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n          (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n        state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n        state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n      }\n    }\n\n    return state;\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\nexport type NgbMarkDisabled = (date: NgbDateStruct, current?: {year: number, month: number}) => boolean;\nexport type NgbDayTemplateData = (date: NgbDateStruct, current?: {year: number, month: number}) => any;\n\nexport type DayViewModel = {\n  date: NgbDate,\n  context: DayTemplateContext,\n  tabindex: number,\n  ariaLabel: string,\n  hidden: boolean\n};\n\nexport type WeekViewModel = {\n  number: number,\n  days: DayViewModel[],\n  collapsed: boolean\n};\n\nexport type MonthViewModel = {\n  firstDate: NgbDate,\n  lastDate: NgbDate,\n  number: number,\n  year: number,\n  weeks: WeekViewModel[],\n  weekdays: number[]\n};\n\n// clang-format off\nexport type DatepickerViewModel = {\n  dayTemplateData: NgbDayTemplateData | null,\n  disabled: boolean,\n  displayMonths: number,\n  firstDate: NgbDate | null,\n  firstDayOfWeek: number,\n  focusDate: NgbDate | null,\n  focusVisible: boolean,\n  lastDate: NgbDate | null,\n  markDisabled: NgbMarkDisabled | null,\n  maxDate: NgbDate | null,\n  minDate: NgbDate | null,\n  months: MonthViewModel[],\n  navigation: 'select' | 'arrows' | 'none',\n  outsideDays: 'visible' | 'collapsed' | 'hidden',\n  prevDisabled: boolean,\n  nextDisabled: boolean,\n  selectBoxes: {\n    years: number[],\n    months: number[]\n  },\n  selectedDate: NgbDate | null\n};\n// clang-format on\n\nexport enum NavigationEvent {\n  PREV,\n  NEXT\n}\n","import {Injectable, TemplateRef} from '@angular/core';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerConfig {\n  dayTemplate: TemplateRef<DayTemplateContext>;\n  dayTemplateData: (date: NgbDateStruct, current?: {year: number, month: number}) => any;\n  footerTemplate: TemplateRef<any>;\n  displayMonths = 1;\n  firstDayOfWeek = 1;\n  markDisabled: (date: NgbDateStruct, current?: {year: number, month: number}) => boolean;\n  minDate: NgbDateStruct;\n  maxDate: NgbDateStruct;\n  navigation: 'select' | 'arrows' | 'none' = 'select';\n  outsideDays: 'visible' | 'collapsed' | 'hidden' = 'visible';\n  showWeekdays = true;\n  showWeekNumbers = false;\n  startDate: {year: number, month: number};\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\nexport function NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n  return new NgbDateStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY})\nexport abstract class NgbDateAdapter<D> {\n  /**\n   * Converts a user-model date of type `D` to an `NgbDateStruct` for internal use.\n   */\n  abstract fromModel(value: D | null): NgbDateStruct | null;\n\n  /**\n   * Converts an internal `NgbDateStruct` date to a user-model date of type `D`.\n   */\n  abstract toModel(date: NgbDateStruct | null): D | null;\n}\n\n@Injectable()\nexport class NgbDateStructAdapter extends NgbDateAdapter<NgbDateStruct> {\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  fromModel(date: NgbDateStruct | null): NgbDateStruct | null {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  toModel(date: NgbDateStruct | null): NgbDateStruct | null {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n}\n","import {fromEvent, merge, Subject} from 'rxjs';\nimport {filter, take, takeUntil} from 'rxjs/operators';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {DatepickerServiceInputs, NgbDatepickerService} from './datepicker-service';\nimport {DatepickerViewModel, NavigationEvent} from './datepicker-view-model';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {isChangedDate, isChangedMonth} from './datepicker-tools';\nimport {hasClassName} from '../util/util';\n\nexport const NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbDatepicker),\n  multi: true\n};\n\n/**\n * An event emitted right before the navigation happens and the month displayed by the datepicker changes.\n */\nexport interface NgbDatepickerNavigateEvent {\n  /**\n   * The currently displayed month.\n   */\n  current: {year: number, month: number} | null;\n\n  /**\n   * The month we're navigating to.\n   */\n  next: {year: number, month: number};\n\n  /**\n   * Calling this function will prevent navigation from happening.\n   *\n   * @since 4.1.0\n   */\n  preventDefault: () => void;\n}\n\n/**\n * An interface that represents the readonly public state of the datepicker.\n *\n * Accessible via the `datepicker.state` getter\n *\n * @since 5.2.0\n */\nexport interface NgbDatepickerState {\n  /**\n   * The earliest date that can be displayed or selected\n   */\n  readonly minDate: NgbDate | null;\n\n  /**\n   * The latest date that can be displayed or selected\n   */\n  readonly maxDate: NgbDate | null;\n\n  /**\n   * The first visible date of currently displayed months\n   */\n  readonly firstDate: NgbDate;\n\n  /**\n   * The last visible date of currently displayed months\n   */\n  readonly lastDate: NgbDate;\n\n  /**\n   * The date currently focused by the datepicker\n   */\n  readonly focusedDate: NgbDate;\n\n  /**\n   * First dates of months currently displayed by the datepicker\n   *\n   * @since 5.3.0\n   */\n  readonly months: NgbDate[];\n}\n\n/**\n * A directive that marks the content template that customizes the way datepicker months are displayed\n *\n * @since 5.3.0\n */\n@Directive({selector: 'ng-template[ngbDatepickerContent]'})\nexport class NgbDatepickerContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\n@Component({\n  exportAs: 'ngbDatepicker',\n  selector: 'ngb-datepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker.scss'],\n  template: `\n    <ng-template #defaultDayTemplate let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\"\n                 let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <ng-template #defaultContentTemplate>\n      <div *ngFor=\"let month of model.months; let i = index;\" class=\"ngb-dp-month\">\n        <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\" class=\"ngb-dp-month-name\">\n          {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n        </div>\n        <ngb-datepicker-month [month]=\"month.firstDate\"></ngb-datepicker-month>\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate!\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div class=\"ngb-dp-content\" [class.ngb-dp-months]=\"!contentTemplate\" #content>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate?.templateRef || defaultContentTemplate\"></ng-template>\n    </div>\n\n    <ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n  `,\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService]\n})\nexport class NgbDatepicker implements OnDestroy,\n    OnChanges, OnInit, ControlValueAccessor {\n  static ngAcceptInputType_autoClose: boolean | string;\n  static ngAcceptInputType_navigation: string;\n  static ngAcceptInputType_outsideDays: string;\n\n  model: DatepickerViewModel;\n\n  @ViewChild('defaultDayTemplate', {static: true}) private _defaultDayTemplate: TemplateRef<DayTemplateContext>;\n  @ViewChild('content', {static: true}) private _contentEl: ElementRef<HTMLElement>;\n  @ContentChild(NgbDatepickerContent, {static: true}) contentTemplate: NgbDatepickerContent;\n\n  private _controlValue: NgbDate | null = null;\n  private _destroyed$ = new Subject<void>();\n  private _publicState: NgbDatepickerState = <any>{};\n\n  /**\n   * The reference to a custom template for the day.\n   *\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\n   *\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * The callback to pass any arbitrary data to the template cell via the\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current?: {year: number, month: number}) => any;\n\n  /**\n   * The number of months to display.\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * The first day of the week.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * The reference to the custom template for the datepicker footer.\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * The callback to mark some dates as disabled.\n   *\n   * It is called for each new date when navigating to a different month.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   */\n  @Input() markDisabled: (date: NgbDate, current?: {year: number, month: number}) => boolean;\n\n  /**\n   * The latest date that can be displayed or selected.\n   *\n   * If not provided, 'year' select box will display 10 years after the current month.\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * The earliest date that can be displayed or selected.\n   *\n   * If not provided, 'year' select box will display 10 years before the current month.\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * Navigation type.\n   *\n   * * `\"select\"` - select boxes for month and navigation arrows\n   * * `\"arrows\"` - only navigation arrows\n   * * `\"none\"` - no navigation visible at all\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way of displaying days that don't belong to the current month.\n   *\n   * * `\"visible\"` - days are visible\n   * * `\"hidden\"` - days are hidden, white space preserved\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n   *\n   * For the 2+ months view, days in between months are never shown.\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * If `true`, weekdays will be displayed.\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * If `true`, week numbers will be displayed.\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * The date to open calendar with.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date is provided, calendar will open with current month.\n   *\n   * You could use `navigateTo(date)` method as an alternative.\n   */\n  @Input() startDate: {year: number, month: number, day?: number};\n\n  /**\n   * An event emitted right before the navigation happens and displayed month changes.\n   *\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * @since 5.2.0\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(\n      private _service: NgbDatepickerService, private _calendar: NgbCalendar, public i18n: NgbDatepickerI18n,\n      config: NgbDatepickerConfig, cd: ChangeDetectorRef, private _elementRef: ElementRef<HTMLElement>,\n      private _ngbDateAdapter: NgbDateAdapter<any>, private _ngZone: NgZone) {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n        .forEach(input => this[input] = config[input]);\n\n    _service.dateSelect$.pipe(takeUntil(this._destroyed$)).subscribe(date => { this.dateSelect.emit(date); });\n\n    _service.model$.pipe(takeUntil(this._destroyed$)).subscribe(model => {\n      const newDate = model.firstDate !;\n      const oldDate = this.model ? this.model.firstDate : null;\n\n      // update public state\n      this._publicState = {\n        maxDate: model.maxDate,\n        minDate: model.minDate,\n        firstDate: model.firstDate !,\n        lastDate: model.lastDate !,\n        focusedDate: model.focusDate !,\n        months: model.months.map(viewModel => viewModel.firstDate)\n      };\n\n      let navigationPrevented = false;\n      // emitting navigation event if the first month changes\n      if (!newDate.equals(oldDate)) {\n        this.navigate.emit({\n          current: oldDate ? {year: oldDate.year, month: oldDate.month} : null,\n          next: {year: newDate.year, month: newDate.month},\n          preventDefault: () => navigationPrevented = true\n        });\n\n        // can't prevent the very first navigation\n        if (navigationPrevented && oldDate !== null) {\n          this._service.open(oldDate);\n          return;\n        }\n      }\n\n      const newSelectedDate = model.selectedDate;\n      const newFocusedDate = model.focusDate;\n      const oldFocusedDate = this.model ? this.model.focusDate : null;\n\n      this.model = model;\n\n      // handling selection change\n      if (isChangedDate(newSelectedDate, this._controlValue)) {\n        this._controlValue = newSelectedDate;\n        this.onTouched();\n        this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n      }\n\n      // handling focus change\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n        this.focus();\n      }\n\n      cd.markForCheck();\n    });\n  }\n\n  /**\n   *  Returns the readonly public state of the datepicker\n   *\n   * @since 5.2.0\n   */\n  get state(): NgbDatepickerState { return this._publicState; }\n\n  /**\n   *  Returns the calendar service used in the specific datepicker instance.\n   *\n   *  @since 5.3.0\n   */\n  get calendar(): NgbCalendar { return this._calendar; }\n\n  /**\n   *  Focuses on given date.\n   */\n  focusDate(date?: NgbDateStruct | null): void { this._service.focus(NgbDate.from(date)); }\n\n  /**\n   *  Selects focused date.\n   */\n  focusSelect(): void { this._service.focusSelect(); }\n\n  focus() {\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      const elementToFocus =\n          this._elementRef.nativeElement.querySelector<HTMLDivElement>('div.ngb-dp-day[tabindex=\"0\"]');\n      if (elementToFocus) {\n        elementToFocus.focus();\n      }\n    });\n  }\n\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n  navigateTo(date?: {year: number, month: number, day?: number}) {\n    this._service.open(NgbDate.from(date ? date.day ? date as NgbDateStruct : {...date, day: 1} : null));\n  }\n\n  ngAfterViewInit() {\n    this._ngZone.runOutsideAngular(() => {\n      const focusIns$ = fromEvent<FocusEvent>(this._contentEl.nativeElement, 'focusin');\n      const focusOuts$ = fromEvent<FocusEvent>(this._contentEl.nativeElement, 'focusout');\n      const {nativeElement} = this._elementRef;\n\n      // we're changing 'focusVisible' only when entering or leaving months view\n      // and ignoring all focus events where both 'target' and 'related' target are day cells\n      merge(focusIns$, focusOuts$)\n          .pipe(\n              filter(\n                  ({target, relatedTarget}) =>\n                      !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day') &&\n                        nativeElement.contains(target as Node) && nativeElement.contains(relatedTarget as Node))),\n              takeUntil(this._destroyed$))\n          .subscribe(({type}) => this._ngZone.run(() => this._service.set({focusVisible: type === 'focusin'})));\n    });\n  }\n\n  ngOnDestroy() { this._destroyed$.next(); }\n\n  ngOnInit() {\n    if (this.model === undefined) {\n      const inputs: DatepickerServiceInputs = {};\n      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n       'outsideDays']\n          .forEach(name => inputs[name] = this[name]);\n      this._service.set(inputs);\n\n      this.navigateTo(this.startDate);\n    }\n    if (!this.dayTemplate) {\n      this.dayTemplate = this._defaultDayTemplate;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const inputs: DatepickerServiceInputs = {};\n    ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n     'outsideDays']\n        .filter(name => name in changes)\n        .forEach(name => inputs[name] = this[name]);\n    this._service.set(inputs);\n\n    if ('startDate' in changes) {\n      const {currentValue, previousValue} = changes.startDate;\n      if (isChangedMonth(previousValue, currentValue)) {\n        this.navigateTo(this.startDate);\n      }\n    }\n  }\n\n  onDateSelect(date: NgbDate) {\n    this._service.focus(date);\n    this._service.select(date, {emitEvent: true});\n  }\n\n  onNavigateDateSelect(date: NgbDate) { this._service.open(date); }\n\n  onNavigateEvent(event: NavigationEvent) {\n    switch (event) {\n      case NavigationEvent.PREV:\n        this._service.open(this._calendar.getPrev(this.model.firstDate !, 'm', 1));\n        break;\n      case NavigationEvent.NEXT:\n        this._service.open(this._calendar.getNext(this.model.firstDate !, 'm', 1));\n        break;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(disabled: boolean) { this._service.set({disabled}); }\n\n  writeValue(value) {\n    this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n    this._service.select(this._controlValue);\n  }\n}\n","export enum Key {\n  Tab = 9,\n  Enter = 13,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDatepicker} from './datepicker';\nimport {Key} from '../util/key';\n\n/**\n * A service that represents the keyboard navigation.\n *\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerKeyboardService {\n  /**\n   * Processes a keyboard event.\n   */\n  processKey(event: KeyboardEvent, datepicker: NgbDatepicker) {\n    const {state, calendar} = datepicker;\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.PageUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n      case Key.PageDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n      case Key.End:\n        datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n        break;\n      case Key.Home:\n        datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n        break;\n      case Key.ArrowLeft:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n        break;\n      case Key.ArrowUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n      case Key.ArrowRight:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n        break;\n      case Key.ArrowDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n      case Key.Enter:\n      case Key.Space:\n        datepicker.focusSelect();\n        break;\n      default:\n        return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbDatepicker} from './datepicker';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {NgbDatepickerKeyboardService} from './datepicker-keyboard-service';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {MonthViewModel, DayViewModel} from './datepicker-view-model';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\n *\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\n *\n * @since 5.3.0\n */\n@Component({\n  selector: 'ngb-datepicker-month',\n  host: {'role': 'grid', '(keydown)': 'onKeyDown($event)'},\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-month.scss'],\n  template: `\n    <div *ngIf=\"datepicker.showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays\" role=\"row\">\n      <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\n      <div *ngFor=\"let w of viewModel.weekdays\" class=\"ngb-dp-weekday small\" role=\"columnheader\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"viewModel.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day); $event.preventDefault()\" class=\"ngb-dp-day\" role=\"gridcell\"\n          [class.disabled]=\"day.context.disabled\"\n          [tabindex]=\"day.tabindex\"\n          [class.hidden]=\"day.hidden\"\n          [class.ngb-dp-today]=\"day.context.today\"\n          [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"datepicker.dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbDatepickerMonth {\n  /**\n   * The first date of month to be rendered.\n   *\n   * This month must one of the months present in the\n   * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\n   */\n  @Input()\n  set month(month: NgbDateStruct) {\n    this.viewModel = this._service.getMonth(month);\n  }\n\n  viewModel: MonthViewModel;\n\n  constructor(\n      public i18n: NgbDatepickerI18n, public datepicker: NgbDatepicker,\n      private _keyboardService: NgbDatepickerKeyboardService, private _service: NgbDatepickerService) {}\n\n  onKeyDown(event: KeyboardEvent) { this._keyboardService.processKey(event, this.datepicker); }\n\n  doSelect(day: DayViewModel) {\n    if (!day.context.disabled && !day.hidden) {\n      this.datepicker.onDateSelect(day.date);\n    }\n  }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {NavigationEvent, MonthViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-navigation.scss'],\n  template: `\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickPrev($event)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickNext($event)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    `\n})\nexport class NgbDatepickerNavigation {\n  navigation = NavigationEvent;\n\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: MonthViewModel[] = [];\n  @Input() showSelect: boolean;\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() selectBoxes: {years: number[], months: number[]};\n\n  @Output() navigate = new EventEmitter<NavigationEvent>();\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  onClickPrev(event: MouseEvent) {\n    (event.currentTarget as HTMLElement).focus();\n    this.navigate.emit(this.navigation.PREV);\n  }\n\n  onClickNext(event: MouseEvent) {\n    (event.currentTarget as HTMLElement).focus();\n    this.navigate.emit(this.navigation.NEXT);\n  }\n}\n","import {NgZone} from '@angular/core';\nimport {fromEvent, Observable, race} from 'rxjs';\nimport {delay, filter, map, takeUntil, tap, withLatestFrom} from 'rxjs/operators';\nimport {Key} from './key';\nimport {closest} from './util';\n\nconst isContainedIn = (element: HTMLElement, array?: HTMLElement[]) =>\n    array ? array.some(item => item.contains(element)) : false;\n\nconst matchesSelectorIfAny = (element: HTMLElement, selector?: string) =>\n    !selector || closest(element, selector) != null;\n\n// we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\nconst isMobile = (() => {\n  const isIOS = () => /iPad|iPhone|iPod/.test(navigator.userAgent) ||\n      (/Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2);\n  const isAndroid = () => /Android/.test(navigator.userAgent);\n\n  return typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\n})();\n\n// setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\nconst wrapAsyncForMobile = fn => isMobile ? () => setTimeout(() => fn(), 100) : fn;\n\nexport const enum SOURCE {ESCAPE, CLICK}\n\nexport function ngbAutoClose(\n    zone: NgZone, document: any, type: boolean | 'inside' | 'outside', close: (source: SOURCE) => void,\n    closed$: Observable<any>, insideElements: HTMLElement[], ignoreElements?: HTMLElement[], insideSelector?: string) {\n  // closing on ESC and outside clicks\n  if (type) {\n    zone.runOutsideAngular(wrapAsyncForMobile(() => {\n\n      const shouldCloseOnClick = (event: MouseEvent) => {\n        const element = event.target as HTMLElement;\n        if (event.button === 2 || isContainedIn(element, ignoreElements)) {\n          return false;\n        }\n        if (type === 'inside') {\n          return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n        } else if (type === 'outside') {\n          return !isContainedIn(element, insideElements);\n        } else /* if (type === true) */ {\n          return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n        }\n      };\n\n      const escapes$ = fromEvent<KeyboardEvent>(document, 'keydown')\n                           .pipe(\n                               takeUntil(closed$),\n                               // tslint:disable-next-line:deprecation\n                               filter(e => e.which === Key.Escape), tap(e => e.preventDefault()));\n\n\n      // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n      // because on 'mouseup' DOM nodes might be detached\n      const mouseDowns$ =\n          fromEvent<MouseEvent>(document, 'mousedown').pipe(map(shouldCloseOnClick), takeUntil(closed$));\n\n      const closeableClicks$ = fromEvent<MouseEvent>(document, 'mouseup')\n                                   .pipe(\n                                       withLatestFrom(mouseDowns$), filter(([_, shouldClose]) => shouldClose), delay(0),\n                                       takeUntil(closed$)) as Observable<MouseEvent>;\n\n\n      race<SOURCE>([\n        escapes$.pipe(map(_ => SOURCE.ESCAPE)), closeableClicks$.pipe(map(_ => SOURCE.CLICK))\n      ]).subscribe((source: SOURCE) => zone.run(() => close(source)));\n    }));\n  }\n}\n","import {NgZone} from '@angular/core';\n\nimport {fromEvent, Observable} from 'rxjs';\nimport {filter, map, takeUntil, withLatestFrom} from 'rxjs/operators';\n\nimport {Key} from './key';\n\n\nexport const FOCUSABLE_ELEMENTS_SELECTOR = [\n  'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\n  'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\n].join(', ');\n\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nexport function getFocusableBoundaryElements(element: HTMLElement): HTMLElement[] {\n  const list: HTMLElement[] =\n      Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR) as NodeListOf<HTMLElement>)\n          .filter(el => el.tabIndex !== -1);\n  return [list[0], list[list.length - 1]];\n}\n\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param zone Angular zone\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\nexport const ngbFocusTrap =\n    (zone: NgZone, element: HTMLElement, stopFocusTrap$: Observable<any>, refocusOnClick = false) => {\n      zone.runOutsideAngular(() => {\n        // last focused element\n        const lastFocusedElement$ =\n            fromEvent<FocusEvent>(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target));\n\n        // 'tab' / 'shift+tab' stream\n        fromEvent<KeyboardEvent>(element, 'keydown')\n            .pipe(\n                takeUntil(stopFocusTrap$),\n                // tslint:disable:deprecation\n                filter(e => e.which === Key.Tab),\n                // tslint:enable:deprecation\n                withLatestFrom(lastFocusedElement$))\n            .subscribe(([tabEvent, focusedElement]) => {\n              const[first, last] = getFocusableBoundaryElements(element);\n\n              if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n                last.focus();\n                tabEvent.preventDefault();\n              }\n\n              if (focusedElement === last && !tabEvent.shiftKey) {\n                first.focus();\n                tabEvent.preventDefault();\n              }\n            });\n\n        // inside click\n        if (refocusOnClick) {\n          fromEvent(element, 'click')\n              .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1] as HTMLElement))\n              .subscribe(lastFocusedElement => lastFocusedElement.focus());\n        }\n      });\n    };\n","// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nexport class Positioning {\n  private getAllStyles(element: HTMLElement) { return window.getComputedStyle(element); }\n\n  private getStyle(element: HTMLElement, prop: string): string { return this.getAllStyles(element)[prop]; }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl = <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n\n  position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0};\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      elPosition = element.getBoundingClientRect();\n      elPosition = {\n        top: elPosition.top,\n        bottom: elPosition.bottom,\n        left: elPosition.left,\n        right: elPosition.right,\n        height: elPosition.height,\n        width: elPosition.width\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  /*\n    Return false if the element to position is outside the viewport\n  */\n  positionElements(hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean):\n      boolean {\n    const[placementPrimary = 'top', placementSecondary = 'center'] = placement.split('-');\n\n    const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n\n    const marginTop = parseFloat(targetElStyles.marginTop);\n    const marginBottom = parseFloat(targetElStyles.marginBottom);\n    const marginLeft = parseFloat(targetElStyles.marginLeft);\n    const marginRight = parseFloat(targetElStyles.marginRight);\n\n    let topPosition = 0;\n    let leftPosition = 0;\n\n    switch (placementPrimary) {\n      case 'top':\n        topPosition = (hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom));\n        break;\n      case 'bottom':\n        topPosition = (hostElPosition.top + hostElPosition.height);\n        break;\n      case 'left':\n        leftPosition = (hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight));\n        break;\n      case 'right':\n        leftPosition = (hostElPosition.left + hostElPosition.width);\n        break;\n    }\n\n    switch (placementSecondary) {\n      case 'top':\n        topPosition = hostElPosition.top;\n        break;\n      case 'bottom':\n        topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n        break;\n      case 'left':\n        leftPosition = hostElPosition.left;\n        break;\n      case 'right':\n        leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n        break;\n      case 'center':\n        if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n          leftPosition = (hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2);\n        } else {\n          topPosition = (hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2);\n        }\n        break;\n    }\n\n    /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\n    // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;\n    targetElement.style.transform = `translate(${Math.round(leftPosition)}px, ${Math.round(topPosition)}px)`;\n\n    // Check if the targetElement is inside the viewport\n    const targetElBCR = targetElement.getBoundingClientRect();\n    const html = document.documentElement;\n    const windowHeight = window.innerHeight || html.clientHeight;\n    const windowWidth = window.innerWidth || html.clientWidth;\n\n    return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth &&\n        targetElBCR.bottom <= windowHeight;\n  }\n}\n\nconst placementSeparator = /\\s+/;\nexport const positionService = new Positioning();\n\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\nexport function positionElements(\n    hostElement: HTMLElement, targetElement: HTMLElement, placement: string | Placement | PlacementArray,\n    appendToBody?: boolean, baseClass?: string): Placement |\n    null {\n  let placementVals: Array<Placement> =\n      Array.isArray(placement) ? placement : placement.split(placementSeparator) as Array<Placement>;\n\n  const allowedPlacements = [\n    'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom',\n    'right-top', 'right-bottom'\n  ];\n\n  const classList = targetElement.classList;\n  const addClassesToTarget = (targetPlacement: Placement): Array<string> => {\n    const[primary, secondary] = targetPlacement.split('-');\n    const classes: string[] = [];\n    if (baseClass) {\n      classes.push(`${baseClass}-${primary}`);\n      if (secondary) {\n        classes.push(`${baseClass}-${primary}-${secondary}`);\n      }\n\n      classes.forEach((classname) => { classList.add(classname); });\n    }\n    return classes;\n  };\n\n  // Remove old placement classes to avoid issues\n  if (baseClass) {\n    allowedPlacements.forEach((placementToRemove) => { classList.remove(`${baseClass}-${placementToRemove}`); });\n  }\n\n  // replace auto placement with other placements\n  let hasAuto = placementVals.findIndex(val => val === 'auto');\n  if (hasAuto >= 0) {\n    allowedPlacements.forEach(function(obj) {\n      if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n        placementVals.splice(hasAuto++, 1, obj as Placement);\n      }\n    });\n  }\n\n  // coordinates where to position\n\n  // Required for transform:\n  const style = targetElement.style;\n  style.position = 'absolute';\n  style.top = '0';\n  style.left = '0';\n  style['will-change'] = 'transform';\n\n  let testPlacement: Placement | null = null;\n  let isInViewport = false;\n  for (testPlacement of placementVals) {\n    let addedClasses = addClassesToTarget(testPlacement);\n\n    if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {\n      isInViewport = true;\n      break;\n    }\n\n    // Remove the baseClasses for further calculation\n    if (baseClass) {\n      addedClasses.forEach((classname) => { classList.remove(classname); });\n    }\n  }\n\n  if (!isInViewport) {\n    // If nothing match, the first placement is the default one\n    testPlacement = placementVals[0];\n    addClassesToTarget(testPlacement);\n    positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);\n  }\n\n  return testPlacement;\n}\n\nexport type Placement = 'auto' | 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' |\n    'bottom-right' | 'left-top' | 'left-bottom' | 'right-top' | 'right-bottom';\n\nexport type PlacementArray = Placement | Array<Placement>| string;\n","import {padNumber, toInteger, isNumber} from '../util/util';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {Injectable} from '@angular/core';\n\nexport function NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n  return new NgbDateISOParserFormatter();\n}\n\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY})\nexport abstract class NgbDateParserFormatter {\n  /**\n   * Parses the given `string` to an `NgbDateStruct`.\n   *\n   * Implementations should try their best to provide a result, even\n   * partial. They must return `null` if the value can't be parsed.\n   */\n  abstract parse(value: string): NgbDateStruct | null;\n\n  /**\n   * Formats the given `NgbDateStruct` to a `string`.\n   *\n   * Implementations should return an empty string if the given date is `null`,\n   * and try their best to provide a partial result if the given date is incomplete or invalid.\n   */\n  abstract format(date: NgbDateStruct | null): string;\n}\n\n@Injectable()\nexport class NgbDateISOParserFormatter extends NgbDateParserFormatter {\n  parse(value: string): NgbDateStruct | null {\n    if (value != null) {\n      const dateParts = value.trim().split('-');\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {year: toInteger(dateParts[0]), month: <any>null, day: <any>null};\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: <any>null};\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2])};\n      }\n    }\n    return null;\n  }\n\n  format(date: NgbDateStruct | null): string {\n    return date ?\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n        '';\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepicker inputs used in the application.\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbInputDatepickerConfig extends NgbDatepickerConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  container: null | 'body';\n  positionTarget: string | HTMLElement;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n  restoreFocus: true | HTMLElement | string = true;\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator\n} from '@angular/forms';\n\nimport {ngbAutoClose} from '../util/autoclose';\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {PlacementArray, positionElements} from '../util/positioning';\n\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbInputDatepickerConfig} from './datepicker-input-config';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {isString} from '../util/util';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\nconst NGB_DATEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\n@Directive({\n  selector: 'input[ngbDatepicker]',\n  exportAs: 'ngbDatepicker',\n  host: {\n    '(input)': 'manualDateChange($event.target.value)',\n    '(change)': 'manualDateChange($event.target.value, true)',\n    '(focus)': 'onFocus()',\n    '(blur)': 'onBlur()',\n    '[disabled]': 'disabled'\n  },\n  providers: [\n    NGB_DATEPICKER_VALUE_ACCESSOR, NGB_DATEPICKER_VALIDATOR,\n    {provide: NgbDatepickerConfig, useExisting: NgbInputDatepickerConfig}\n  ],\n})\nexport class NgbInputDatepicker implements OnChanges,\n    OnDestroy, ControlValueAccessor, Validator {\n  static ngAcceptInputType_autoClose: boolean | string;\n  static ngAcceptInputType_disabled: boolean | '';\n  static ngAcceptInputType_navigation: string;\n  static ngAcceptInputType_outsideDays: string;\n\n  private _cRef: ComponentRef<NgbDatepicker>| null = null;\n  private _disabled = false;\n  private _elWithFocus: HTMLElement | null = null;\n  private _model: NgbDate | null = null;\n  private _inputValue: string;\n  private _zoneSubscription: any;\n\n  /**\n   * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\n   *\n   * * `true` - the popup will close on both date selection and outside click.\n   * * `false` - the popup can only be closed manually via `close()` or `toggle()` methods.\n   * * `\"inside\"` - the popup will close on date selection, but not outside clicks.\n   * * `\"outside\"` - the popup will close only on the outside click and not on date selection/inside clicks.\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The reference to a custom template for the day.\n   *\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\n   *\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * The callback to pass any arbitrary data to the template cell via the\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current?: {year: number, month: number}) => any;\n\n  /**\n   * The number of months to display.\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * The first day of the week.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * The reference to the custom template for the datepicker footer.\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * The callback to mark some dates as disabled.\n   *\n   * It is called for each new date when navigating to a different month.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   */\n  @Input() markDisabled: (date: NgbDate, current?: {year: number, month: number}) => boolean;\n\n  /**\n   * The earliest date that can be displayed or selected. Also used for form validation.\n   *\n   * If not provided, 'year' select box will display 10 years before the current month.\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * The latest date that can be displayed or selected. Also used for form validation.\n   *\n   * If not provided, 'year' select box will display 10 years after the current month.\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * Navigation type.\n   *\n   * * `\"select\"` - select boxes for month and navigation arrows\n   * * `\"arrows\"` - only navigation arrows\n   * * `\"none\"` - no navigation visible at all\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way of displaying days that don't belong to the current month.\n   *\n   * * `\"visible\"` - days are visible\n   * * `\"hidden\"` - days are hidden, white space preserved\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n   *\n   * For the 2+ months view, days in between months are never shown.\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * The preferred placement of the datepicker popup.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * If `true`, when closing datepicker will focus element that was focused before datepicker was opened.\n   *\n   * Alternatively you could provide a selector or an `HTMLElement` to focus. If the element doesn't exist or invalid,\n   * we'll fallback to focus document body.\n   *\n   * @since 5.2.0\n   */\n  @Input() restoreFocus: true | string | HTMLElement;\n\n  /**\n   * If `true`, weekdays will be displayed.\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * If `true`, week numbers will be displayed.\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * The date to open calendar with.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date is provided, calendar will open with current month.\n   *\n   * You could use `navigateTo(date)` method as an alternative.\n   */\n  @Input() startDate: {year: number, month: number, day?: number};\n\n  /**\n   * A selector specifying the element the datepicker popup should be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * A css selector or html element specifying the element the datepicker popup should be positioned against.\n   *\n   * By default the input is used as a target.\n   *\n   * @since 4.2.0\n   */\n  @Input() positionTarget: string | HTMLElement;\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * @since 1.1.1\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  /**\n   * Event emitted right after the navigation happens and displayed month changes.\n   *\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event fired after closing datepicker window.\n   *\n   * @since 4.2.0\n   */\n  @Output() closed = new EventEmitter<void>();\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: any) {\n    this._disabled = value === '' || (value && value !== 'false');\n\n    if (this.isOpen()) {\n      this._cRef !.instance.setDisabledState(this._disabled);\n    }\n  }\n\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n  private _validatorChange = () => {};\n\n\n  constructor(\n      private _parserFormatter: NgbDateParserFormatter, private _elRef: ElementRef<HTMLInputElement>,\n      private _vcRef: ViewContainerRef, private _renderer: Renderer2, private _cfr: ComponentFactoryResolver,\n      private _ngZone: NgZone, private _calendar: NgbCalendar, private _dateAdapter: NgbDateAdapter<any>,\n      @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      config: NgbInputDatepickerConfig) {\n    ['autoClose', 'container', 'positionTarget', 'placement'].forEach(input => this[input] = config[input]);\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => this._updatePopupPosition());\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  registerOnValidatorChange(fn: () => void): void { this._validatorChange = fn; }\n\n  setDisabledState(isDisabled: boolean): void { this.disabled = isDisabled; }\n\n  validate(c: AbstractControl): ValidationErrors | null {\n    const {value} = c;\n\n    if (value != null) {\n      const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n      if (!ngbDate) {\n        return {'ngbDate': {invalid: value}};\n      }\n\n      if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n        return {'ngbDate': {minDate: {minDate: this.minDate, actual: value}}};\n      }\n\n      if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n        return {'ngbDate': {maxDate: {maxDate: this.maxDate, actual: value}}};\n      }\n    }\n\n    return null;\n  }\n\n  writeValue(value) {\n    this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n    this._writeModelValue(this._model);\n  }\n\n  manualDateChange(value: string, updateView = false) {\n    const inputValueChanged = value !== this._inputValue;\n    if (inputValueChanged) {\n      this._inputValue = value;\n      this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n    }\n    if (inputValueChanged || !updateView) {\n      this._onChange(this._model ? this._dateAdapter.toModel(this._model) : (value === '' ? null : value));\n    }\n    if (updateView && this._model) {\n      this._writeModelValue(this._model);\n    }\n  }\n\n  isOpen() { return !!this._cRef; }\n\n  /**\n   * Opens the datepicker popup.\n   *\n   * If the related form control contains a valid date, the corresponding month will be opened.\n   */\n  open() {\n    if (!this.isOpen()) {\n      const cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n      this._cRef = this._vcRef.createComponent(cf);\n\n      this._applyPopupStyling(this._cRef.location.nativeElement);\n      this._applyDatepickerInputs(this._cRef.instance);\n      this._subscribeForDatepickerOutputs(this._cRef.instance);\n      this._cRef.instance.ngOnInit();\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n\n      // date selection event handling\n      this._cRef.instance.registerOnChange((selectedDate) => {\n        this.writeValue(selectedDate);\n        this._onChange(selectedDate);\n        this._onTouched();\n      });\n\n      this._cRef.changeDetectorRef.detectChanges();\n\n      this._cRef.instance.setDisabledState(this.disabled);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n      }\n\n      // focus handling\n      this._elWithFocus = this._document.activeElement;\n      ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n      this._cRef.instance.focus();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.closed, [],\n          [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n    }\n  }\n\n  /**\n   * Closes the datepicker popup.\n   */\n  close() {\n    if (this.isOpen()) {\n      this._vcRef.remove(this._vcRef.indexOf(this._cRef !.hostView));\n      this._cRef = null;\n      this.closed.emit();\n      this._changeDetector.markForCheck();\n\n      // restore focus\n      let elementToFocus: HTMLElement | null = this._elWithFocus;\n      if (isString(this.restoreFocus)) {\n        elementToFocus = this._document.querySelector(this.restoreFocus);\n      } else if (this.restoreFocus !== undefined) {\n        elementToFocus = this.restoreFocus as HTMLElement;\n      }\n\n      // in IE document.activeElement can contain an object without 'focus()' sometimes\n      if (elementToFocus && elementToFocus['focus']) {\n        elementToFocus.focus();\n      } else {\n        this._document.body.focus();\n      }\n    }\n  }\n\n  /**\n   * Toggles the datepicker popup.\n   */\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n  navigateTo(date?: {year: number, month: number, day?: number}) {\n    if (this.isOpen()) {\n      this._cRef !.instance.navigateTo(date);\n    }\n  }\n\n  onBlur() { this._onTouched(); }\n\n  onFocus() { this._elWithFocus = this._elRef.nativeElement; }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['minDate'] || changes['maxDate']) {\n      this._validatorChange();\n\n      if (this.isOpen()) {\n        if (changes['minDate']) {\n          this._cRef !.instance.minDate = this.minDate;\n        }\n        if (changes['maxDate']) {\n          this._cRef !.instance.maxDate = this.maxDate;\n        }\n        this._cRef !.instance.ngOnChanges(changes);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _applyDatepickerInputs(datepickerInstance: NgbDatepicker): void {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n        .forEach((optionName: string) => {\n          if (this[optionName] !== undefined) {\n            datepickerInstance[optionName] = this[optionName];\n          }\n        });\n    datepickerInstance.startDate = this.startDate || this._model;\n  }\n\n  private _applyPopupStyling(nativeElement: any) {\n    this._renderer.addClass(nativeElement, 'dropdown-menu');\n    this._renderer.addClass(nativeElement, 'show');\n\n    if (this.container === 'body') {\n      this._renderer.addClass(nativeElement, 'ngb-dp-body');\n    }\n  }\n\n  private _subscribeForDatepickerOutputs(datepickerInstance: NgbDatepicker) {\n    datepickerInstance.navigate.subscribe(navigateEvent => this.navigate.emit(navigateEvent));\n    datepickerInstance.dateSelect.subscribe(date => {\n      this.dateSelect.emit(date);\n      if (this.autoClose === true || this.autoClose === 'inside') {\n        this.close();\n      }\n    });\n  }\n\n  private _writeModelValue(model: NgbDate | null) {\n    const value = this._parserFormatter.format(model);\n    this._inputValue = value;\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n    if (this.isOpen()) {\n      this._cRef !.instance.writeValue(this._dateAdapter.toModel(model));\n      this._onTouched();\n    }\n  }\n\n  private _fromDateStruct(date: NgbDateStruct | null): NgbDate | null {\n    const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n    return this._calendar.isValid(ngbDate) ? ngbDate : null;\n  }\n\n  private _updatePopupPosition() {\n    if (!this._cRef) {\n      return;\n    }\n\n    let hostElement: HTMLElement;\n    if (isString(this.positionTarget)) {\n      hostElement = this._document.querySelector(this.positionTarget);\n    } else if (this.positionTarget instanceof HTMLElement) {\n      hostElement = this.positionTarget;\n    } else {\n      hostElement = this._elRef.nativeElement;\n    }\n\n    if (this.positionTarget && !hostElement) {\n      throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n    }\n\n    positionElements(hostElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: '[ngbDatepickerDayView]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-day-view.scss'],\n  host: {\n    'class': 'btn-light',\n    '[class.bg-primary]': 'selected',\n    '[class.text-white]': 'selected',\n    '[class.text-muted]': 'isMuted()',\n    '[class.outside]': 'isMuted()',\n    '[class.active]': 'focused'\n  },\n  template: `{{ i18n.getDayNumerals(date) }}`\n})\nexport class NgbDatepickerDayView {\n  @Input() currentMonth: number;\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() focused: boolean;\n  @Input() selected: boolean;\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  isMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  AfterViewChecked,\n  ViewChild,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {toInteger} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation-select',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-navigation-select.scss'],\n  template: `\n    <select #month\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\n      (change)=\"changeMonth($any($event).target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\n    </select><select #year\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\n      (change)=\"changeYear($any($event).target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n    </select>\n  `\n})\nexport class NgbDatepickerNavigationSelect implements AfterViewChecked {\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: number[];\n  @Input() years: number[];\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  @ViewChild('month', {static: true, read: ElementRef}) monthSelect: ElementRef;\n  @ViewChild('year', {static: true, read: ElementRef}) yearSelect: ElementRef;\n\n  private _month = -1;\n  private _year = -1;\n\n  constructor(public i18n: NgbDatepickerI18n, private _renderer: Renderer2) {}\n\n  changeMonth(month: string) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n\n  changeYear(year: string) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n\n  ngAfterViewChecked() {\n    if (this.date) {\n      if (this.date.month !== this._month) {\n        this._month = this.date.month;\n        this._renderer.setProperty(this.monthSelect.nativeElement, 'value', this._month);\n      }\n      if (this.date.year !== this._year) {\n        this._year = this.date.year;\n        this._renderer.setProperty(this.yearSelect.nativeElement, 'value', this._year);\n      }\n    }\n  }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbPeriod, NgbCalendar} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\n\n@Injectable()\nexport abstract class NgbCalendarHijri extends NgbCalendar {\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  abstract getDaysPerMonth(month: number, year: number): number;\n\n  /**\n   * Returns the equivalent Hijri date value for a give input Gregorian date.\n   * `gDate` is s JS Date to be converted to Hijri.\n   */\n  abstract fromGregorian(gDate: Date): NgbDate;\n\n  /**\n   * Converts the current Hijri date to Gregorian.\n   */\n  abstract toGregorian(hDate: NgbDate): Date;\n\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = this._setYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = this._setMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return this._setDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = this.toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = this.toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));  // Compare with Muharram 1\n    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return this.fromGregorian(new Date()); }\n\n\n  isValid(date?: NgbDate | null): boolean {\n    return date != null && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n        !isNaN(this.toGregorian(date).getTime());\n  }\n\n  private _setDay(date: NgbDate, day: number): NgbDate {\n    day = +day;\n    let mDays = this.getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n      while (day <= 0) {\n        date = this._setMonth(date, date.month - 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n        day += mDays;\n      }\n    } else if (day > mDays) {\n      while (day > mDays) {\n        day -= mDays;\n        date = this._setMonth(date, date.month + 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n      }\n    }\n    date.day = day;\n    return date;\n  }\n\n  private _setMonth(date: NgbDate, month: number): NgbDate {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n  }\n\n  private _setYear(date: NgbDate, year: number): NgbDate {\n    date.year = +year;\n    return date;\n  }\n}\n","import {NgbCalendarHijri} from './ngb-calendar-hijri';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear: number): boolean {\n  return (14 + 11 * hYear) % 30 < 11;\n}\n\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear(gDate: Date): boolean {\n  const year = gDate.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear: number, hMonth: number): number {\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year: number): number {\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\n\nconst GREGORIAN_EPOCH = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\n\n@Injectable()\nexport class NgbCalendarIslamicCivil extends NgbCalendarHijri {\n  /**\n   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n   * `gDate` is a JS Date to be converted to Hijri.\n   */\n  fromGregorian(gDate: Date): NgbDate {\n    const gYear = gDate.getFullYear(), gMonth = gDate.getMonth(), gDay = gDate.getDate();\n\n    let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n        -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n        Math.floor(\n            (367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay) + 0.5;\n\n    const days = julianDay - ISLAMIC_EPOCH;\n    const hYear = Math.floor((30 * days + 10646) / 10631.0);\n    let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n    hMonth = Math.min(hMonth, 11);\n    const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n    return new NgbDate(hYear, hMonth + 1, hDay);\n  }\n\n  /**\n   * Returns the equivalent JS date value for a give input islamic(civil) date.\n   * `hDate` is an islamic(civil) date to be converted to Gregorian.\n   */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    const julianDay =\n        hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n\n    const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH,\n          quadricent = Math.floor(depoch / 146097), dqc = mod(depoch, 146097), cent = Math.floor(dqc / 36524),\n          dcent = mod(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod(dcent, 1461),\n          yindex = Math.floor(dquad / 365);\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n    if (!(cent === 4 || yindex === 4)) {\n      year++;\n    }\n\n    const gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400);\n\n    const yearday = wjd - gYearStart;\n\n    const tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n\n    const leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n\n    const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n    const tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) +\n        Math.floor(\n            (367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n            1);\n\n    const day = wjd - tjd2 + 1;\n\n    return new Date(year, month - 1, day);\n  }\n\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  getDaysPerMonth(month: number, year: number): number {\n    year = year + Math.floor(month / 13);\n    month = ((month - 1) % 12) + 1;\n    let length = 29 + month % 2;\n    if (month === 12 && isIslamicLeapYear(year)) {\n      length++;\n    }\n    return length;\n  }\n}\n","import {NgbCalendarIslamicCivil} from './ngb-calendar-islamic-civil';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\n\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\n\nconst MONTH_LENGTH = [\n  // 1300-1304\n  '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n  // 1305-1309\n  '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n  // 1310-1314\n  '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n  // 1315-1319\n  '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n  // 1320-1324\n  '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n  // 1325-1329\n  '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n  // 1330-1334\n  '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n  // 1335-1339\n  '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n  // 1340-1344\n  '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n  // 1345-1349\n  '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n  // 1350-1354\n  '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n  // 1355-1359\n  '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n  // 1360-1364\n  '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n  // 1365-1369\n  '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n  // 1370-1374\n  '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n  // 1375-1379\n  '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n  // 1380-1384\n  '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n  // 1385-1389\n  '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n  // 1390-1394\n  '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n  // 1395-1399\n  '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n  // 1400-1404\n  '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n  // 1405-1409\n  '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n  // 1410-1414\n  '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n  // 1415-1419\n  '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n  // 1420-1424\n  '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n  // 1425-1429\n  '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n  // 1430-1434\n  '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n  // 1435-1439\n  '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n  // 1440-1444\n  '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n  // 1445-1449\n  '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n  // 1450-1454\n  '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n  // 1455-1459\n  '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n  // 1460-1464\n  '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n  // 1465-1469\n  '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n  // 1470-1474\n  '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n  // 1475-1479\n  '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n  // 1480-1484\n  '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n  // 1485-1489\n  '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n  // 1490-1494\n  '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n  // 1495-1499\n  '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n  // 1500-1504\n  '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n  // 1505-1509\n  '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n  // 1510-1514\n  '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n  // 1515-1519\n  '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n  // 1520-1524\n  '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n  // 1525-1529\n  '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n  // 1530-1534\n  '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n  // 1535-1539\n  '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n  // 1540-1544\n  '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n  // 1545-1549\n  '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n  // 1550-1554\n  '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n  // 1555-1559\n  '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n  // 1560-1564\n  '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n  // 1565-1569\n  '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n  // 1570-1574\n  '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n  // 1575-1579\n  '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n  // 1580-1584\n  '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n  // 1585-1589\n  '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n  // 1590-1594\n  '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n  // 1595-1599\n  '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n  // 1600\n  '001010011101'\n];\n\nfunction getDaysDiff(date1: Date, date2: Date): number {\n  // Ignores the time part in date1 and date2:\n  const time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n  const time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n  const diff = Math.abs(time1 - time2);\n  return Math.round(diff / ONE_DAY);\n}\n\n@Injectable()\nexport class NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n  /**\n  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n  * `gdate` is s JS Date to be converted to Hijri.\n  */\n  fromGregorian(gDate: Date): NgbDate {\n    let hDay = 1, hMonth = 0, hYear = 1300;\n    let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n      let year = 1300;\n      for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n        for (let j = 0; j < 12; j++) {\n          let numOfDays = +MONTH_LENGTH[i][j] + 29;\n          if (daysDiff <= numOfDays) {\n            hDay = daysDiff + 1;\n            if (hDay > numOfDays) {\n              hDay = 1;\n              j++;\n            }\n            if (j > 11) {\n              j = 0;\n              year++;\n            }\n            hMonth = j;\n            hYear = year;\n            return new NgbDate(hYear, hMonth + 1, hDay);\n          }\n          daysDiff = daysDiff - numOfDays;\n        }\n      }\n      return null as any;\n    } else {\n      return super.fromGregorian(gDate);\n    }\n  }\n  /**\n  * Converts the current Hijri date to Gregorian.\n  */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    let gDate = new Date(GREGORIAN_FIRST_DATE);\n    let dayDiff = hDay - 1;\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n        for (let m = 0; m < 12; m++) {\n          dayDiff += +MONTH_LENGTH[y][m] + 29;\n        }\n      }\n      for (let m = 0; m < hMonth; m++) {\n        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n      }\n      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n    } else {\n      gDate = super.toGregorian(hDate);\n    }\n    return gDate;\n  }\n  /**\n  * Returns the number of days in a specific Hijri hMonth.\n  * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n  * `hYear` is any Hijri hYear.\n  */\n  getDaysPerMonth(hMonth: number, hYear: number): number {\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      const pos = hYear - HIJRI_BEGIN;\n      return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n    }\n    return super.getDaysPerMonth(hMonth, hYear);\n  }\n}\n","import {NgbDate} from '../ngb-date';\n\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nexport function toGregorian(jalaliDate: NgbDate): Date {\n  let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n  let date = julianToGregorian(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\n\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return julianToJalali(g2d);\n}\n\nexport function setJalaliYear(date: NgbDate, yearValue: number): NgbDate {\n  date.year = +yearValue;\n  return date;\n}\n\nexport function setJalaliMonth(date: NgbDate, month: number): NgbDate {\n  month = +month;\n  date.year = date.year + Math.floor((month - 1) / 12);\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n  return date;\n}\n\nexport function setJalaliDay(date: NgbDate, day: number): NgbDate {\n  let mDays = getDaysPerMonth(date.month, date.year);\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setJalaliMonth(date, date.month - 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setJalaliMonth(date, date.month + 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n    }\n  }\n  date.day = day;\n  return date;\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\nfunction div(a: number, b: number) {\n  return Math.trunc(a / b);\n}\n\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear: number) {\n  // Jalali years starting the 33-year rule.\n  let breaks =\n      [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n  const breaksLength = breaks.length;\n  const gYear = jalaliYear + 621;\n  let leapJ = -14;\n  let jp = breaks[0];\n\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n    throw new Error('Invalid Jalali year ' + jalaliYear);\n  }\n\n  // Find the limiting years for the Jalali year jalaliYear.\n  let jump;\n  for (let i = 1; i < breaksLength; i += 1) {\n    const jm = breaks[i];\n    jump = jm - jp;\n    if (jalaliYear < jm) {\n      break;\n    }\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n    jp = jm;\n  }\n  let n = jalaliYear - jp;\n\n  // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalali year in the Persian calendar.\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n  if (mod(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  }\n\n  // And the same in the Gregorian calendar (until the year gYear).\n  const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n\n  // Determine the Gregorian date of Farvardin the 1st.\n  const march = 20 + leapJ - leapG;\n\n  // Find how many years have passed since the last leap year.\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n  let leap = mod(mod(n + 1, 33) - 1, 4);\n  if (leap === -1) {\n    leap = 4;\n  }\n\n  return {leap: leap, gy: gYear, march: march};\n}\n\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian(julianDayNumber: number) {\n  let j = 4 * julianDayNumber + 139361631;\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n  const i = div(mod(j, 1461), 4) * 5 + 308;\n  const gDay = div(mod(i, 153), 5) + 1;\n  const gMonth = mod(div(i, 153), 12) + 1;\n  const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian(gy: number, gm: number, gd: number) {\n  let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber: number) {\n  let gy = julianToGregorian(julianDayNumber).getFullYear()  // Calculate Gregorian year (gy).\n      ,\n      jalaliYear = gy - 621, r = jalCal(jalaliYear), gregorianDay = gregorianToJulian(gy, 3, r.march), jalaliDay,\n      jalaliMonth, numberOfDays;\n\n  // Find number of days that passed since 1 Farvardin.\n  numberOfDays = julianDayNumber - gregorianDay;\n  if (numberOfDays >= 0) {\n    if (numberOfDays <= 185) {\n      // The first 6 months.\n      jalaliMonth = 1 + div(numberOfDays, 31);\n      jalaliDay = mod(numberOfDays, 31) + 1;\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n    } else {\n      // The remaining months.\n      numberOfDays -= 186;\n    }\n  } else {\n    // Previous Jalali year.\n    jalaliYear -= 1;\n    numberOfDays += 179;\n    if (r.leap === 1) {\n      numberOfDays += 1;\n    }\n  }\n  jalaliMonth = 7 + div(numberOfDays, 30);\n  jalaliDay = mod(numberOfDays, 30) + 1;\n\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear: number, jMonth: number, jDay: number) {\n  let r = jalCal(jYear);\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth(month: number, year: number): number {\n  if (month <= 6) {\n    return 31;\n  }\n  if (month <= 11) {\n    return 30;\n  }\n  if (jalCal(year).leap === 0) {\n    return 30;\n  }\n  return 29;\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDate} from '../ngb-date';\nimport {NgbCalendar, NgbPeriod} from '../ngb-calendar';\nimport {isInteger} from '../../util/util';\n\nimport {fromGregorian, setJalaliDay, setJalaliMonth, setJalaliYear, toGregorian} from './jalali';\n\n@Injectable()\nexport class NgbCalendarPersian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = setJalaliYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setJalaliMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setJalaliDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const startDate = toGregorian(new NgbDate(date.year, 1, 1));\n    return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  isValid(date?: NgbDate | null): boolean {\n    return date != null && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) &&\n        !isNaN(toGregorian(date).getTime());\n  }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbDateStruct} from '../ngb-date-struct';\n\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH = 1721425.5;\n\nfunction isGregorianLeapYear(year: number): boolean {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\nfunction numberOfFirstDayInYear(year: number): number {\n  let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n  let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n  let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n  let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n\n  let dayOfWeek = dayNumber % 7;  // 0 == Monday\n\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n    dayNumber++;\n    dayOfWeek = dayNumber % 7;\n  }\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n    dayNumber += 2;\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n    dayNumber++;\n  }\n  return dayNumber;\n}\n\nfunction getDaysInGregorianMonth(month: number, year: number): number {\n  let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  if (isGregorianLeapYear(year)) {\n    days[1]++;\n  }\n  return days[month - 1];\n}\n\nfunction getHebrewMonths(year: number): number {\n  return isHebrewLeapYear(year) ? 13 : 12;\n}\n\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewYear(year: number): number {\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n\nexport function isHebrewLeapYear(year?: number): boolean {\n  if (year != null) {\n    let b = (year * 12 + 17) % 19;\n    return b >= ((b < 0) ? -7 : 12);\n  }\n  return false;\n}\n\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\nexport function getDaysInHebrewMonth(month: number, year: number): number {\n  let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n  let yearType = (yearLength <= 380 ? yearLength : (yearLength - 30)) - 353;\n  let leapYear = isHebrewLeapYear(year);\n  let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] :\n                               [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n  if (yearType > 0) {\n    daysInMonth[2]++;  // Kislev gets an extra day in normal or complete years.\n  }\n  if (yearType > 1) {\n    daysInMonth[1]++;  // Heshvan gets an extra day in complete years only.\n  }\n  return daysInMonth[month - 1];\n}\n\nexport function getDayNumberInHebrewYear(date: NgbDate): number {\n  let numberOfDay = 0;\n  for (let i = 1; i < date.month; i++) {\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\n  }\n  return numberOfDay + date.day;\n}\n\nexport function setHebrewMonth(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getHebrewMonths(date.year) - date.month) {\n        val -= getHebrewMonths(date.year) - date.month + 1;\n        date.year++;\n        date.month = 1;\n      } else {\n        date.month += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.month) {\n        date.year--;\n        val -= date.month;\n        date.month = getHebrewMonths(date.year);\n      } else {\n        date.month -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\nexport function setHebrewDay(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n        date.year++;\n        date.month = 1;\n        date.day = 1;\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n        date.month++;\n        date.day = 1;\n      } else {\n        date.day += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.day) {\n        val -= date.day;\n        date.month--;\n        if (date.month === 0) {\n          date.year--;\n          date.month = getHebrewMonths(date.year);\n        }\n        date.day = getDaysInHebrewMonth(date.month, date.year);\n      } else {\n        date.day -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  const date = new Date(gdate);\n  const gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\n  let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) -\n      Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n      Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\n  julianDay = Math.floor(julianDay + 0.5);\n  let daysSinceHebEpoch = julianDay - 347997;\n  let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n  let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n  let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n  let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  while (dayOfYear < 1) {\n    hYear--;\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  }\n  let hMonth = 1;\n  let hDay = dayOfYear;\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\n    hMonth++;\n  }\n  return new NgbDate(hYear, hMonth, hDay);\n}\n\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\nexport function toGregorian(hebrewDate: NgbDateStruct | NgbDate): Date {\n  const hYear = hebrewDate.year;\n  const hMonth = hebrewDate.month;\n  const hDay = hebrewDate.day;\n  let days = numberOfFirstDayInYear(hYear);\n  for (let i = 1; i < hMonth; i++) {\n    days += getDaysInHebrewMonth(i, hYear);\n  }\n  days += hDay;\n  let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n  let after = diffDays >= 0;\n  if (!after) {\n    diffDays = -diffDays;\n  }\n  let gYear = 1970;\n  let gMonth = 1;\n  let gDay = 1;\n  while (diffDays > 0) {\n    if (after) {\n      if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\n        gYear++;\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        gMonth++;\n      } else {\n        gDay += diffDays;\n        diffDays = 0;\n      }\n    } else {\n      if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\n        gYear--;\n      } else {\n        if (gMonth > 1) {\n          gMonth--;\n        } else {\n          gMonth = 12;\n          gYear--;\n        }\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        } else {\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n          diffDays = 0;\n        }\n      }\n    }\n  }\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\nexport function hebrewNumerals(numerals: number): string {\n  if (!numerals) {\n    return '';\n  }\n  const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n  const hArray10_19 = [\n    '\\u05d9', '\\u05d9\\u05d0', '\\u05d9\\u05d1', '\\u05d9\\u05d2', '\\u05d9\\u05d3', '\\u05d8\\u05d5', '\\u05d8\\u05d6',\n    '\\u05d9\\u05d6', '\\u05d9\\u05d7', '\\u05d9\\u05d8'\n  ];\n  const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n  const hArray100_900 = [\n    '', '\\u05e7', '\\u05e8', '\\u05e9', '\\u05ea', '\\u05ea\\u05e7', '\\u05ea\\u05e8', '\\u05ea\\u05e9', '\\u05ea\\u05ea',\n    '\\u05ea\\u05ea\\u05e7'\n  ];\n  const hArray1000_9000 = [\n    '', '\\u05d0', '\\u05d1', '\\u05d1\\u05d0', '\\u05d1\\u05d1', '\\u05d4', '\\u05d4\\u05d0', '\\u05d4\\u05d1',\n    '\\u05d4\\u05d1\\u05d0', '\\u05d4\\u05d1\\u05d1'\n  ];\n  const geresh = '\\u05f3', gershaim = '\\u05f4';\n  let mem = 0;\n  let result: string[] = [];\n  let step = 0;\n  while (numerals > 0) {\n    let m = numerals % 10;\n    if (step === 0) {\n      mem = m;\n    } else if (step === 1) {\n      if (m !== 1) {\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\n      } else {\n        result.unshift(hArray10_19[mem]);\n      }\n    } else if (step === 2) {\n      result.unshift(hArray100_900[m]);\n    } else {\n      if (m !== 5) {\n        result.unshift(hArray1000_9000[m], geresh, ' ');\n      }\n      break;\n    }\n    numerals = Math.floor(numerals / 10);\n    if (step === 0 && numerals === 0) {\n      result.unshift(hArray0_9[m]);\n    }\n    step++;\n  }\n  result = result.join('').split('');\n  if (result.length === 1) {\n    result.push(geresh);\n  } else if (result.length > 1) {\n    result.splice(result.length - 1, 0, gershaim);\n  }\n  return result.join('');\n}\n","import {NgbDate} from '../ngb-date';\nimport {fromJSDate, NgbCalendar, NgbPeriod, toJSDate} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\nimport {\n  fromGregorian,\n  getDayNumberInHebrewYear,\n  getDaysInHebrewMonth,\n  isHebrewLeapYear,\n  toGregorian,\n  setHebrewDay,\n  setHebrewMonth\n} from './hebrew';\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbCalendarHebrew extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths(year?: number) {\n    if (year && isHebrewLeapYear(year)) {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    } else {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }\n\n  getWeeksPerMonth() { return 6; }\n\n  isValid(date?: NgbDate | null): boolean {\n    if (date != null) {\n      let b = isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n      b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n      b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n      return b && !isNaN(toGregorian(date).getTime());\n    }\n\n    return false;\n  }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date.year += number;\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setHebrewMonth(date, number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setHebrewDay(date, number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    const date = week[week.length - 1];\n    return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  /**\n   * @since 3.4.0\n   */\n  toGregorian(date: NgbDate): NgbDate { return fromJSDate(toGregorian(date)); }\n\n  /**\n   * @since 3.4.0\n   */\n  fromGregorian(date: NgbDate): NgbDate { return fromGregorian(toJSDate(date)); }\n}\n","import {NgbDatepickerI18n} from '../datepicker-i18n';\nimport {NgbDateStruct} from '../../index';\nimport {hebrewNumerals, isHebrewLeapYear} from './hebrew';\nimport {Injectable} from '@angular/core';\n\n\nconst WEEKDAYS = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];\nconst MONTHS = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\nconst MONTHS_LEAP =\n    ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר א׳', 'אדר ב׳', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n  getMonthShortName(month: number, year?: number): string { return this.getMonthFullName(month, year); }\n\n  getMonthFullName(month: number, year?: number): string {\n    return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] || '' : MONTHS[month - 1] || '';\n  }\n\n  getWeekdayShortName(weekday: number): string { return WEEKDAYS[weekday - 1] || ''; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n  }\n\n  getDayNumerals(date: NgbDateStruct): string { return hebrewNumerals(date.day); }\n\n  getWeekNumerals(weekNumber: number): string { return hebrewNumerals(weekNumber); }\n\n  getYearNumerals(year: number): string { return hebrewNumerals(year); }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateAdapter} from './ngb-date-adapter';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter<Date> {\n  /**\n   * Converts a native `Date` to a `NgbDateStruct`.\n   */\n  fromModel(date: Date | null): NgbDateStruct | null {\n    return (date instanceof Date && !isNaN(date.getTime())) ? this._fromNativeDate(date) : null;\n  }\n\n  /**\n   * Converts a `NgbDateStruct` to a native `Date`.\n   */\n  toModel(date: NgbDateStruct | null): Date | null {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) :\n                                                                                          null;\n  }\n\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // avoid 30 -> 1930 conversion\n    jsDate.setFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {NgbDateNativeAdapter} from './ngb-date-native-adapter';\n\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n    // avoid 30 -> 1930 conversion\n    jsDate.setUTCFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {NgbDatepicker, NgbDatepickerContent} from './datepicker';\nimport {NgbDatepickerMonth} from './datepicker-month';\nimport {NgbDatepickerNavigation} from './datepicker-navigation';\nimport {NgbInputDatepicker} from './datepicker-input';\nimport {NgbDatepickerDayView} from './datepicker-day-view';\nimport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\n\nexport {NgbDatepicker, NgbDatepickerContent, NgbDatepickerNavigateEvent, NgbDatepickerState} from './datepicker';\nexport {NgbInputDatepicker} from './datepicker-input';\nexport {NgbCalendar, NgbPeriod, NgbCalendarGregorian} from './ngb-calendar';\nexport {NgbCalendarIslamicCivil} from './hijri/ngb-calendar-islamic-civil';\nexport {NgbCalendarIslamicUmalqura} from './hijri/ngb-calendar-islamic-umalqura';\nexport {NgbCalendarPersian} from './jalali/ngb-calendar-persian';\nexport {NgbCalendarHebrew} from './hebrew/ngb-calendar-hebrew';\nexport {NgbDatepickerI18nHebrew} from './hebrew/datepicker-i18n-hebrew';\nexport {NgbDatepickerMonth} from './datepicker-month';\nexport {NgbDatepickerDayView} from './datepicker-day-view';\nexport {NgbDatepickerNavigation} from './datepicker-navigation';\nexport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\nexport {NgbDatepickerConfig} from './datepicker-config';\nexport {NgbInputDatepickerConfig} from './datepicker-input-config';\nexport {NgbDatepickerI18n} from './datepicker-i18n';\nexport {NgbDateStruct} from './ngb-date-struct';\nexport {NgbDate} from './ngb-date';\nexport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nexport {NgbDateNativeAdapter} from './adapters/ngb-date-native-adapter';\nexport {NgbDateNativeUTCAdapter} from './adapters/ngb-date-native-utc-adapter';\nexport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\nexport {NgbDatepickerKeyboardService} from './datepicker-keyboard-service';\n\n@NgModule({\n  declarations: [\n    NgbDatepicker, NgbDatepickerContent, NgbDatepickerMonth, NgbDatepickerNavigation, NgbDatepickerNavigationSelect,\n    NgbDatepickerDayView, NgbInputDatepicker\n  ],\n  exports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth],\n  imports: [CommonModule, FormsModule],\n  entryComponents: [NgbDatepicker]\n})\nexport class NgbDatepickerModule {\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDropdownConfig {\n  autoClose: boolean | 'outside' | 'inside' = true;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n  container: null | 'body';\n}\n","import {\n  ChangeDetectorRef,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  AfterContentInit,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n  SimpleChanges,\n  Optional\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {fromEvent, Subject, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {Placement, PlacementArray, positionElements} from '../util/positioning';\nimport {ngbAutoClose, SOURCE} from '../util/autoclose';\nimport {Key} from '../util/key';\n\nimport {NgbDropdownConfig} from './dropdown-config';\nimport {FOCUSABLE_ELEMENTS_SELECTOR} from '../util/focus-trap';\n\n@Directive({selector: '.navbar'})\nexport class NgbNavbar {\n}\n\n/**\n * A directive you should put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\n@Directive({selector: '[ngbDropdownItem]', host: {'class': 'dropdown-item', '[class.disabled]': 'disabled'}})\nexport class NgbDropdownItem {\n  static ngAcceptInputType_disabled: boolean | '';\n\n  private _disabled = false;\n\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = <any>value === '' || value === true;  // accept an empty attribute as true\n  }\n\n  get disabled(): boolean { return this._disabled; }\n\n  constructor(public elementRef: ElementRef<HTMLElement>) {}\n}\n\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\n@Directive({\n  selector: '[ngbDropdownMenu]',\n  host: {\n    '[class.dropdown-menu]': 'true',\n    '[class.show]': 'dropdown.isOpen()',\n    '[attr.x-placement]': 'placement',\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n    '(keydown.End)': 'dropdown.onKeyDown($event)',\n    '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n    '(keydown.Space)': 'dropdown.onKeyDown($event)',\n    '(keydown.Tab)': 'dropdown.onKeyDown($event)',\n    '(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)'\n  }\n})\nexport class NgbDropdownMenu {\n  nativeElement: HTMLElement;\n  placement: Placement | null = 'bottom';\n  isOpen = false;\n\n  @ContentChildren(NgbDropdownItem) menuItems: QueryList<NgbDropdownItem>;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown, _elementRef: ElementRef<HTMLElement>) {\n    this.nativeElement = _elementRef.nativeElement;\n  }\n}\n\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\n@Directive(\n    {selector: '[ngbDropdownAnchor]', host: {'class': 'dropdown-toggle', '[attr.aria-expanded]': 'dropdown.isOpen()'}})\nexport class NgbDropdownAnchor {\n  nativeElement: HTMLElement;\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown, _elementRef: ElementRef<HTMLElement>) {\n    this.nativeElement = _elementRef.nativeElement;\n  }\n}\n\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\n@Directive({\n  selector: '[ngbDropdownToggle]',\n  host: {\n    'class': 'dropdown-toggle',\n    '[attr.aria-expanded]': 'dropdown.isOpen()',\n    '(click)': 'dropdown.toggle()',\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n    '(keydown.End)': 'dropdown.onKeyDown($event)',\n    '(keydown.Tab)': 'dropdown.onKeyDown($event)',\n    '(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)'\n  },\n  providers: [{provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle)}]\n})\nexport class NgbDropdownToggle extends NgbDropdownAnchor {\n  constructor(@Inject(forwardRef(() => NgbDropdown)) dropdown, elementRef: ElementRef<HTMLElement>) {\n    super(dropdown, elementRef);\n  }\n}\n\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\n@Directive({selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: {'[class.show]': 'isOpen()'}})\nexport class NgbDropdown implements AfterContentInit, OnDestroy {\n  static ngAcceptInputType_autoClose: boolean | string;\n  static ngAcceptInputType_display: string;\n  private _closed$ = new Subject<void>();\n  private _zoneSubscription: Subscription;\n  private _bodyContainer: HTMLElement | null = null;\n\n  @ContentChild(NgbDropdownMenu, {static: false}) private _menu: NgbDropdownMenu;\n  @ContentChild(NgbDropdownAnchor, {static: false}) private _anchor: NgbDropdownAnchor;\n\n  /**\n   * Indicates whether the dropdown should be closed when clicking one of dropdown items or pressing ESC.\n   *\n   * * `true` - the dropdown will close on both outside and inside (menu) clicks.\n   * * `false` - the dropdown can only be closed manually via `close()` or `toggle()` methods.\n   * * `\"inside\"` - the dropdown will close on inside menu clicks, but not outside clicks.\n   * * `\"outside\"` - the dropdown will close only on the outside clicks and not on menu clicks.\n   */\n  @Input() autoClose: boolean | 'outside' | 'inside';\n\n  /**\n   * Defines whether or not the dropdown menu is opened initially.\n   */\n  @Input('open') _open = false;\n\n  /**\n   * The preferred placement of the dropdown.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n  * A selector specifying the element the dropdown should be appended to.\n  * Currently only supports \"body\".\n  *\n  * @since 4.1.0\n  */\n  @Input() container: null | 'body';\n\n  /**\n   * Enable or disable the dynamic positioning. The default value is dynamic unless the dropdown is used\n   * inside a Bootstrap navbar. If you need custom placement for a dropdown in a navbar, set it to\n   * dynamic explicitly. See the [positioning of dropdown](#/positioning#dropdown)\n   * and the [navbar demo](/#/components/dropdown/examples#navbar) for more details.\n   *\n   * @since 4.2.0\n   */\n  @Input() display: 'dynamic' | 'static';\n\n  /**\n   * An event fired when the dropdown is opened or closed.\n   *\n   * The event payload is a `boolean`:\n   * * `true` - the dropdown was opened\n   * * `false` - the dropdown was closed\n   */\n  @Output() openChange = new EventEmitter<boolean>();\n\n  constructor(\n      private _changeDetector: ChangeDetectorRef, config: NgbDropdownConfig, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone, private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2,\n      @Optional() ngbNavbar: NgbNavbar) {\n    this.placement = config.placement;\n    this.container = config.container;\n    this.autoClose = config.autoClose;\n\n    this.display = ngbNavbar ? 'static' : 'dynamic';\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => { this._positionMenu(); });\n  }\n\n  ngAfterContentInit() {\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this._applyPlacementClasses();\n      if (this._open) {\n        this._setCloseHandlers();\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.container && this._open) {\n      this._applyContainer(this.container);\n    }\n\n    if (changes.placement && !changes.placement.isFirstChange) {\n      this._applyPlacementClasses();\n    }\n  }\n\n  /**\n   * Checks if the dropdown menu is open.\n   */\n  isOpen(): boolean { return this._open; }\n\n  /**\n   * Opens the dropdown menu.\n   */\n  open(): void {\n    if (!this._open) {\n      this._open = true;\n      this._applyContainer(this.container);\n      this.openChange.emit(true);\n      this._setCloseHandlers();\n      if (this._anchor) {\n        this._anchor.nativeElement.focus();\n      }\n    }\n  }\n\n  private _setCloseHandlers() {\n    ngbAutoClose(\n        this._ngZone, this._document, this.autoClose,\n        (source: SOURCE) => {\n          this.close();\n          if (source === SOURCE.ESCAPE) {\n            this._anchor.nativeElement.focus();\n          }\n        },\n        this._closed$, this._menu ? [this._menu.nativeElement] : [], this._anchor ? [this._anchor.nativeElement] : [],\n        '.dropdown-item,.dropdown-divider');\n  }\n\n  /**\n   * Closes the dropdown menu.\n   */\n  close(): void {\n    if (this._open) {\n      this._open = false;\n      this._resetContainer();\n      this._closed$.next();\n      this.openChange.emit(false);\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the dropdown menu.\n   */\n  toggle(): void {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  ngOnDestroy() {\n    this._resetContainer();\n\n    this._closed$.next();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    const key = event.which;\n    const itemElements = this._getMenuElements();\n\n    let position = -1;\n    let itemElement: HTMLElement | null = null;\n    const isEventFromToggle = this._isEventFromToggle(event);\n\n    if (!isEventFromToggle && itemElements.length) {\n      itemElements.forEach((item, index) => {\n        if (item.contains(event.target as HTMLElement)) {\n          itemElement = item;\n        }\n        if (item === this._document.activeElement) {\n          position = index;\n        }\n      });\n    }\n\n    // closing on Enter / Space\n    if (key === Key.Space || key === Key.Enter) {\n      if (itemElement && (this.autoClose === true || this.autoClose === 'inside')) {\n        // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n        // So we have to register a one-time click handler that will fire after any user defined click handlers\n        // to close the dropdown\n        fromEvent(itemElement, 'click').pipe(take(1)).subscribe(() => this.close());\n      }\n      return;\n    }\n\n    if (key === Key.Tab) {\n      if (event.target && this.isOpen() && this.autoClose) {\n        if (this._anchor.nativeElement === event.target) {\n          if (this.container === 'body' && !event.shiftKey) {\n            /* This case is special: user is using [Tab] from the anchor/toggle.\n               User expects the next focusable element in the dropdown menu to get focus.\n               But the menu is not a sibling to anchor/toggle, it is at the end of the body.\n               Trick is to synchronously focus the menu element, and let the [keydown.Tab] go\n               so that browser will focus the proper element (first one focusable in the menu) */\n            this._renderer.setAttribute(this._menu.nativeElement, 'tabindex', '0');\n            this._menu.nativeElement.focus();\n            this._renderer.removeAttribute(this._menu.nativeElement, 'tabindex');\n          } else if (event.shiftKey) {\n            this.close();\n          }\n          return;\n        } else if (this.container === 'body') {\n          const focusableElements = this._menu.nativeElement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);\n          if (event.shiftKey && event.target === focusableElements[0]) {\n            this._anchor.nativeElement.focus();\n            event.preventDefault();\n          } else if (!event.shiftKey && event.target === focusableElements[focusableElements.length - 1]) {\n            this._anchor.nativeElement.focus();\n            this.close();\n          }\n        } else {\n          fromEvent<FocusEvent>(event.target as HTMLElement, 'focusout').pipe(take(1)).subscribe(({relatedTarget}) => {\n            if (!this._elementRef.nativeElement.contains(relatedTarget as HTMLElement)) {\n              this.close();\n            }\n          });\n        }\n      }\n      return;\n    }\n\n    // opening / navigating\n    if (isEventFromToggle || itemElement) {\n      this.open();\n\n      if (itemElements.length) {\n        switch (key) {\n          case Key.ArrowDown:\n            position = Math.min(position + 1, itemElements.length - 1);\n            break;\n          case Key.ArrowUp:\n            if (this._isDropup() && position === -1) {\n              position = itemElements.length - 1;\n              break;\n            }\n            position = Math.max(position - 1, 0);\n            break;\n          case Key.Home:\n            position = 0;\n            break;\n          case Key.End:\n            position = itemElements.length - 1;\n            break;\n        }\n        itemElements[position].focus();\n      }\n      event.preventDefault();\n    }\n  }\n\n  private _isDropup(): boolean { return this._elementRef.nativeElement.classList.contains('dropup'); }\n\n  private _isEventFromToggle(event: KeyboardEvent) {\n    return this._anchor.nativeElement.contains(event.target as HTMLElement);\n  }\n\n  private _getMenuElements(): HTMLElement[] {\n    const menu = this._menu;\n    if (menu == null) {\n      return [];\n    }\n    return menu.menuItems.filter(item => !item.disabled).map(item => item.elementRef.nativeElement);\n  }\n\n  private _positionMenu() {\n    const menu = this._menu;\n    if (this.isOpen() && menu) {\n      this._applyPlacementClasses(\n          this.display === 'dynamic' ? positionElements(\n                                           this._anchor.nativeElement, this._bodyContainer || this._menu.nativeElement,\n                                           this.placement, this.container === 'body') :\n                                       this._getFirstPlacement(this.placement));\n    }\n  }\n\n  private _getFirstPlacement(placement: PlacementArray): Placement {\n    return Array.isArray(placement) ? placement[0] : placement.split(' ')[0] as Placement;\n  }\n\n  private _resetContainer() {\n    const renderer = this._renderer;\n    if (this._menu) {\n      const dropdownElement = this._elementRef.nativeElement;\n      const dropdownMenuElement = this._menu.nativeElement;\n\n      renderer.appendChild(dropdownElement, dropdownMenuElement);\n      renderer.removeStyle(dropdownMenuElement, 'position');\n      renderer.removeStyle(dropdownMenuElement, 'transform');\n    }\n    if (this._bodyContainer) {\n      renderer.removeChild(this._document.body, this._bodyContainer);\n      this._bodyContainer = null;\n    }\n  }\n\n  private _applyContainer(container: null | 'body' = null) {\n    this._resetContainer();\n    if (container === 'body') {\n      const renderer = this._renderer;\n      const dropdownMenuElement = this._menu.nativeElement;\n      const bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div');\n\n      // Override some styles to have the positionning working\n      renderer.setStyle(bodyContainer, 'position', 'absolute');\n      renderer.setStyle(dropdownMenuElement, 'position', 'static');\n      renderer.setStyle(bodyContainer, 'z-index', '1050');\n\n      renderer.appendChild(bodyContainer, dropdownMenuElement);\n      renderer.appendChild(this._document.body, bodyContainer);\n    }\n  }\n\n  private _applyPlacementClasses(placement?: Placement | null) {\n    const menu = this._menu;\n    if (menu) {\n      if (!placement) {\n        placement = this._getFirstPlacement(this.placement);\n      }\n\n      const renderer = this._renderer;\n      const dropdownElement = this._elementRef.nativeElement;\n\n      // remove the current placement classes\n      renderer.removeClass(dropdownElement, 'dropup');\n      renderer.removeClass(dropdownElement, 'dropdown');\n      menu.placement = this.display === 'static' ? null : placement;\n\n      /*\n      * apply the new placement\n      * in case of top use up-arrow or down-arrow otherwise\n      */\n      const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n      renderer.addClass(dropdownElement, dropdownClass);\n\n      const bodyContainer = this._bodyContainer;\n      if (bodyContainer) {\n        renderer.removeClass(bodyContainer, 'dropup');\n        renderer.removeClass(bodyContainer, 'dropdown');\n        renderer.addClass(bodyContainer, dropdownClass);\n      }\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownToggle,\n  NgbDropdownMenu,\n  NgbDropdownItem,\n  NgbNavbar\n} from './dropdown';\n\nexport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownToggle,\n  NgbDropdownMenu,\n  NgbDropdownItem,\n  NgbNavbar\n} from './dropdown';\nexport {NgbDropdownConfig} from './dropdown-config';\n\nconst NGB_DROPDOWN_DIRECTIVES =\n    [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar];\n\n@NgModule({declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES})\nexport class NgbDropdownModule {\n}\n","import {Injectable, Injector} from '@angular/core';\nimport {NgbConfig} from '../ngb-config';\n\n/**\n * Options available when opening new modal windows with `NgbModal.open()` method.\n */\nexport interface NgbModalOptions {\n  /**\n   * If `true`, modal opening and closing will be animated.\n   *\n   * @since 8.0.0\n   */\n  animation?: boolean;\n\n  /**\n   * `aria-labelledby` attribute value to set on the modal window.\n   *\n   * @since 2.2.0\n   */\n  ariaLabelledBy?: string;\n\n  /**\n   * `aria-describedby` attribute value to set on the modal window.\n   *\n   * @since 6.1.0\n   */\n  ariaDescribedBy?: string;\n\n  /**\n   * If `true`, the backdrop element will be created for a given modal.\n   *\n   * Alternatively, specify `'static'` for a backdrop which doesn't close the modal on click.\n   *\n   * Default value is `true`.\n   */\n  backdrop?: boolean | 'static';\n\n  /**\n   * Callback right before the modal will be dismissed.\n   *\n   * If this function returns:\n   * * `false`\n   * * a promise resolved with `false`\n   * * a promise that is rejected\n   *\n   * then the modal won't be dismissed.\n   */\n  beforeDismiss?: () => boolean | Promise<boolean>;\n\n  /**\n   * If `true`, the modal will be centered vertically.\n   *\n   * Default value is `false`.\n   *\n   * @since 1.1.0\n   */\n  centered?: boolean;\n\n  /**\n   * A selector specifying the element all new modal windows should be appended to.\n   * Since v5.3.0 it is also possible to pass the reference to an `HTMLElement`.\n   *\n   * If not specified, will be `body`.\n   */\n  container?: string | HTMLElement;\n\n  /**\n   * The `Injector` to use for modal content.\n   */\n  injector?: Injector;\n\n  /**\n   * If `true`, the modal will be closed when `Escape` key is pressed\n   *\n   * Default value is `true`.\n   */\n  keyboard?: boolean;\n\n  /**\n   * Scrollable modal content (false by default).\n   *\n   * @since 5.0.0\n   */\n  scrollable?: boolean;\n\n  /**\n   * Size of a new modal window.\n   */\n  size?: 'sm' | 'lg' | 'xl' | string;\n\n  /**\n   * A custom class to append to the modal window.\n   */\n  windowClass?: string;\n\n  /**\n   * A custom class to append to the modal backdrop.\n   *\n   * @since 1.1.0\n   */\n  backdropClass?: string;\n}\n\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n*\n* @since 3.1.0\n*/\n@Injectable({providedIn: 'root'})\nexport class NgbModalConfig implements Required<NgbModalOptions> {\n  animation: boolean;\n  ariaLabelledBy: string;\n  ariaDescribedBy: string;\n  backdrop: boolean | 'static' = true;\n  beforeDismiss: () => boolean | Promise<boolean>;\n  centered: boolean;\n  container: string;\n  injector: Injector;\n  keyboard = true;\n  scrollable: boolean;\n  size: 'sm' | 'lg' | 'xl' | string;\n  windowClass: string;\n  backdropClass: string;\n\n  constructor(ngbConfig: NgbConfig) { this.animation = ngbConfig.animation; }\n}\n","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Injector,\n  NgZone,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n  ViewRef\n} from '@angular/core';\n\nimport {Observable, of} from 'rxjs';\nimport {mergeMap, take, tap} from 'rxjs/operators';\n\nimport {ngbRunTransition} from './transition/ngbTransition';\n\nexport class ContentRef {\n  constructor(public nodes: any[], public viewRef?: ViewRef, public componentRef?: ComponentRef<any>) {}\n}\n\nexport class PopupService<T> {\n  private _windowRef: ComponentRef<T>| null = null;\n  private _contentRef: ContentRef | null = null;\n\n  constructor(\n      private _type: any, private _injector: Injector, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _ngZone: NgZone,\n      private _componentFactoryResolver: ComponentFactoryResolver, private _applicationRef: ApplicationRef) {}\n\n  open(content?: string | TemplateRef<any>, context?: any, animation = false):\n      {windowRef: ComponentRef<T>, transition$: Observable<void>} {\n    if (!this._windowRef) {\n      this._contentRef = this._getContentRef(content, context);\n      this._windowRef = this._viewContainerRef.createComponent(\n          this._componentFactoryResolver.resolveComponentFactory<T>(this._type), this._viewContainerRef.length,\n          this._injector, this._contentRef.nodes);\n    }\n\n    const {nativeElement} = this._windowRef.location;\n    const onStable$ = this._ngZone.onStable.asObservable().pipe(take(1));\n    const transition$ = onStable$.pipe(\n        mergeMap(\n            () => ngbRunTransition(\n                nativeElement, ({classList}) => classList.add('show'), {animation, runningTransition: 'continue'})));\n\n    return {windowRef: this._windowRef, transition$};\n  }\n\n  close(animation = false): Observable<void> {\n    if (!this._windowRef) {\n      return of(undefined);\n    }\n\n    return ngbRunTransition(\n               this._windowRef.location.nativeElement, ({classList}) => classList.remove('show'),\n               {animation, runningTransition: 'stop'})\n        .pipe(tap(() => {\n          if (this._windowRef) {\n            // this is required because of the container='body' option\n            this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n            this._windowRef = null;\n          }\n          if (this._contentRef?.viewRef) {\n            this._applicationRef.detachView(this._contentRef.viewRef);\n            this._contentRef.viewRef.destroy();\n            this._contentRef = null;\n          }\n        }));\n  }\n\n  private _getContentRef(content?: string | TemplateRef<any>, context?: any): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const viewRef = content.createEmbeddedView(context);\n      this._applicationRef.attachView(viewRef);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else {\n      return new ContentRef([[this._renderer.createText(`${content}`)]]);\n    }\n  }\n}\n","import {Injectable, Inject} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\nconst noop = () => {};\n\n\n\n/** Type for the callback used to revert the scrollbar compensation. */\nexport type CompensationReverter = () => void;\n\n\n\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to compensate the lack of a vertical scrollbar by adding an\n * equivalent padding on the right of the body, and to remove this compensation.\n */\n@Injectable({providedIn: 'root'})\nexport class ScrollBar {\n  constructor(@Inject(DOCUMENT) private _document: any) {}\n\n  /**\n   * To be called right before a potential vertical scrollbar would be removed:\n   *\n   * - if there was a scrollbar, adds some compensation padding to the body\n   * to keep the same layout as when the scrollbar is there\n   * - if there was none, there is nothing to do\n   *\n   * @return a callback used to revert the compensation (noop if there was none,\n   * otherwise a function removing the padding)\n   */\n  compensate(): CompensationReverter {\n    const width = this._getWidth();\n    return !this._isPresent(width) ? noop : this._adjustBody(width);\n  }\n\n  /**\n   * Adds a padding of the given width on the right of the body.\n   *\n   * @return a callback used to revert the padding to its previous value\n   */\n  private _adjustBody(scrollbarWidth: number): CompensationReverter {\n    const body = this._document.body;\n    const userSetPaddingStyle = body.style.paddingRight;\n    const actualPadding = parseFloat(window.getComputedStyle(body)['padding-right']);\n    body.style['padding-right'] = `${actualPadding + scrollbarWidth}px`;\n    return () => body.style['padding-right'] = userSetPaddingStyle;\n  }\n\n  /**\n   * Tells whether a scrollbar is currently present on the body.\n   *\n   * @return true if scrollbar is present, false otherwise\n   */\n  private _isPresent(scrollbarWidth: number): boolean {\n    const rect = this._document.body.getBoundingClientRect();\n    const bodyToViewportGap = window.innerWidth - (rect.left + rect.right);\n    const uncertainty = 0.1 * scrollbarWidth;\n    return bodyToViewportGap >= scrollbarWidth - uncertainty;\n  }\n\n  /**\n   * Calculates and returns the width of a scrollbar.\n   *\n   * @return the width of a scrollbar on this page\n   */\n  private _getWidth(): number {\n    const measurer = this._document.createElement('div');\n    measurer.className = 'modal-scrollbar-measure';\n\n    const body = this._document.body;\n    body.appendChild(measurer);\n    const width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n    body.removeChild(measurer);\n\n    return width;\n  }\n}\n","import {Component, ElementRef, Input, NgZone, OnInit, ViewEncapsulation} from '@angular/core';\n\nimport {Observable} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {ngbRunTransition} from '../util/transition/ngbTransition';\n\n@Component({\n  selector: 'ngb-modal-backdrop',\n  encapsulation: ViewEncapsulation.None,\n  template: '',\n  host: {\n    '[class]': '\"modal-backdrop\" + (backdropClass ? \" \" + backdropClass : \"\")',\n    '[class.show]': '!animation',\n    '[class.fade]': 'animation',\n    'style': 'z-index: 1050'\n  }\n})\nexport class NgbModalBackdrop implements OnInit {\n  @Input() animation: boolean;\n  @Input() backdropClass: string;\n\n  constructor(private _el: ElementRef<HTMLElement>, private _zone: NgZone) {}\n\n  ngOnInit() {\n    this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      ngbRunTransition(\n          this._el.nativeElement, ({classList}) => classList.add('show'),\n          {animation: this.animation, runningTransition: 'continue'});\n    });\n  }\n\n  hide(): Observable<void> {\n    return ngbRunTransition(\n        this._el.nativeElement, ({classList}) => classList.remove('show'),\n        {animation: this.animation, runningTransition: 'stop'});\n  }\n}\n","import {ComponentRef} from '@angular/core';\n\nimport {Observable, of, Subject, zip} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nimport {ContentRef} from '../util/popup';\n\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.close()` or `.dismiss()` the modal window from your component.\n */\nexport class NgbActiveModal {\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbModalRef.result` promise will be resolved with the provided value.\n   */\n  close(result?: any): void {}\n\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason?: any): void {}\n}\n\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nexport class NgbModalRef {\n  private _closed = new Subject<any>();\n  private _dismissed = new Subject<any>();\n  private _hidden = new Subject<void>();\n  private _resolve: (result?: any) => void;\n  private _reject: (reason?: any) => void;\n\n  /**\n   * The instance of a component used for the modal content.\n   *\n   * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n   */\n  get componentInstance(): any {\n    if (this._contentRef && this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n\n  /**\n   * The promise that is resolved when the modal is closed and rejected when the modal is dismissed.\n   */\n  result: Promise<any>;\n\n  /**\n   * The observable that emits when the modal is closed via the `.close()` method.\n   *\n   * It will emit the result passed to the `.close()` method.\n   *\n   * @since 8.0.0\n   */\n  get closed(): Observable<any> { return this._closed.asObservable().pipe(takeUntil(this._hidden)); }\n\n  /**\n   * The observable that emits when the modal is dismissed via the `.dismiss()` method.\n   *\n   * It will emit the reason passed to the `.dismissed()` method by the user, or one of the internal\n   * reasons like backdrop click or ESC key press.\n   *\n   * @since 8.0.0\n   */\n  get dismissed(): Observable<any> { return this._dismissed.asObservable().pipe(takeUntil(this._hidden)); }\n\n  /**\n   * The observable that emits when both modal window and backdrop are closed and animations were finished.\n   * At this point modal and backdrop elements will be removed from the DOM tree.\n   *\n   * This observable will be completed after emitting.\n   *\n   * @since 8.0.0\n   */\n  get hidden(): Observable<void> { return this._hidden.asObservable(); }\n\n  /**\n   * The observable that emits when modal is fully visible and animation was finished.\n   * Modal DOM element is always available synchronously after calling 'modal.open()' service.\n   *\n   * This observable will be completed after emitting.\n   * It will not emit, if modal is closed before open animation is finished.\n   *\n   * @since 8.0.0\n   */\n  get shown(): Observable<void> { return this._windowCmptRef.instance.shown.asObservable(); }\n\n  constructor(\n      private _windowCmptRef: ComponentRef<NgbModalWindow>, private _contentRef: ContentRef,\n      private _backdropCmptRef?: ComponentRef<NgbModalBackdrop>, private _beforeDismiss?: Function) {\n    _windowCmptRef.instance.dismissEvent.subscribe((reason: any) => { this.dismiss(reason); });\n\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n  close(result?: any): void {\n    if (this._windowCmptRef) {\n      this._closed.next(result);\n      this._resolve(result);\n      this._removeModalElements();\n    }\n  }\n\n  private _dismiss(reason?: any) {\n    this._dismissed.next(reason);\n    this._reject(reason);\n    this._removeModalElements();\n  }\n\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason?: any): void {\n    if (this._windowCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n        if (dismiss && dismiss.then) {\n          dismiss.then(\n              result => {\n                if (result !== false) {\n                  this._dismiss(reason);\n                }\n              },\n              () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n\n  private _removeModalElements() {\n    const windowTransition$ = this._windowCmptRef.instance.hide();\n    const backdropTransition$ = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : of(undefined);\n\n    // hiding window\n    windowTransition$.subscribe(() => {\n      const {nativeElement} = this._windowCmptRef.location;\n      nativeElement.parentNode.removeChild(nativeElement);\n      this._windowCmptRef.destroy();\n\n      if (this._contentRef && this._contentRef.viewRef) {\n        this._contentRef.viewRef.destroy();\n      }\n\n      this._windowCmptRef = <any>null;\n      this._contentRef = <any>null;\n    });\n\n    // hiding backdrop\n    backdropTransition$.subscribe(() => {\n      if (this._backdropCmptRef) {\n        const {nativeElement} = this._backdropCmptRef.location;\n        nativeElement.parentNode.removeChild(nativeElement);\n        this._backdropCmptRef.destroy();\n        this._backdropCmptRef = <any>null;\n      }\n    });\n\n    // all done\n    zip(windowTransition$, backdropTransition$).subscribe(() => {\n      this._hidden.next();\n      this._hidden.complete();\n    });\n  }\n}\n","export enum ModalDismissReasons {\n  BACKDROP_CLICK,\n  ESC\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {fromEvent, Observable, Subject, zip} from 'rxjs';\nimport {filter, switchMap, take, takeUntil, tap} from 'rxjs/operators';\n\nimport {getFocusableBoundaryElements} from '../util/focus-trap';\nimport {Key} from '../util/key';\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\nimport {ngbRunTransition, NgbTransitionOptions} from '../util/transition/ngbTransition';\n\n@Component({\n  selector: 'ngb-modal-window',\n  host: {\n    '[class]': '\"modal d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n    '[class.fade]': 'animation',\n    'role': 'dialog',\n    'tabindex': '-1',\n    '[attr.aria-modal]': 'true',\n    '[attr.aria-labelledby]': 'ariaLabelledBy',\n    '[attr.aria-describedby]': 'ariaDescribedBy'\n  },\n  template: `\n    <div #dialog [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '') +\n     (scrollable ? ' modal-dialog-scrollable' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./modal.scss']\n})\nexport class NgbModalWindow implements OnInit,\n    AfterViewInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _elWithFocus: Element | null = null;  // element that is focused prior to modal opening\n\n  @ViewChild('dialog', {static: true}) private _dialogEl: ElementRef<HTMLElement>;\n\n  @Input() animation: boolean;\n  @Input() ariaLabelledBy: string;\n  @Input() ariaDescribedBy: string;\n  @Input() backdrop: boolean | string = true;\n  @Input() centered: string;\n  @Input() keyboard = true;\n  @Input() scrollable: string;\n  @Input() size: string;\n  @Input() windowClass: string;\n\n  @Output('dismiss') dismissEvent = new EventEmitter();\n\n  shown = new Subject<void>();\n  hidden = new Subject<void>();\n\n  constructor(\n      @Inject(DOCUMENT) private _document: any, private _elRef: ElementRef<HTMLElement>, private _zone: NgZone) {}\n\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\n\n  ngOnInit() { this._elWithFocus = this._document.activeElement; }\n\n  ngAfterViewInit() { this._show(); }\n\n  ngOnDestroy() { this._disableEventHandling(); }\n\n  hide(): Observable<any> {\n    const {nativeElement} = this._elRef;\n    const context: NgbTransitionOptions<any> = {animation: this.animation, runningTransition: 'stop'};\n\n    const windowTransition$ = ngbRunTransition(nativeElement, () => nativeElement.classList.remove('show'), context);\n    const dialogTransition$ = ngbRunTransition(this._dialogEl.nativeElement, () => {}, context);\n\n    const transitions$ = zip(windowTransition$, dialogTransition$);\n    transitions$.subscribe(() => {\n      this.hidden.next();\n      this.hidden.complete();\n    });\n\n    this._disableEventHandling();\n    this._restoreFocus();\n\n    return transitions$;\n  }\n\n  private _show() {\n    const {nativeElement} = this._elRef;\n    const context: NgbTransitionOptions<any> = {animation: this.animation, runningTransition: 'continue'};\n\n    const windowTransition$ = ngbRunTransition(nativeElement, () => nativeElement.classList.add('show'), context);\n    const dialogTransition$ = ngbRunTransition(this._dialogEl.nativeElement, () => {}, context);\n\n    zip(windowTransition$, dialogTransition$).subscribe(() => {\n      this.shown.next();\n      this.shown.complete();\n    });\n\n    this._enableEventHandling();\n    this._setFocus();\n  }\n\n  private _enableEventHandling() {\n    const {nativeElement} = this._elRef;\n    this._zone.runOutsideAngular(() => {\n      fromEvent<KeyboardEvent>(nativeElement, 'keydown')\n          .pipe(\n              takeUntil(this._closed$),\n              // tslint:disable-next-line:deprecation\n              filter(e => e.which === Key.Escape))\n          .subscribe(event => {\n            if (this.keyboard) {\n              requestAnimationFrame(() => {\n                if (!event.defaultPrevented) {\n                  this._zone.run(() => this.dismiss(ModalDismissReasons.ESC));\n                }\n              });\n            } else if (this.backdrop === 'static') {\n              this._bumpBackdrop();\n            }\n          });\n\n      // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n      // inside the modal dialog and releasing it outside\n      let preventClose = false;\n      fromEvent<MouseEvent>(this._dialogEl.nativeElement, 'mousedown')\n          .pipe(\n              takeUntil(this._closed$), tap(() => preventClose = false),\n              switchMap(() => fromEvent<MouseEvent>(nativeElement, 'mouseup').pipe(takeUntil(this._closed$), take(1))),\n              filter(({target}) => nativeElement === target))\n          .subscribe(() => { preventClose = true; });\n\n      // We're listening to 'click' to dismiss modal on modal window click, except when:\n      // 1. clicking on modal dialog itself\n      // 2. closing was prevented by mousedown/up handlers\n      // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n      fromEvent<MouseEvent>(nativeElement, 'click').pipe(takeUntil(this._closed$)).subscribe(({target}) => {\n        if (nativeElement === target) {\n          if (this.backdrop === 'static') {\n            this._bumpBackdrop();\n          } else if (this.backdrop === true && !preventClose) {\n            this._zone.run(() => this.dismiss(ModalDismissReasons.BACKDROP_CLICK));\n          }\n        }\n\n        preventClose = false;\n      });\n    });\n  }\n\n  private _disableEventHandling() { this._closed$.next(); }\n\n  private _setFocus() {\n    const {nativeElement} = this._elRef;\n    if (!nativeElement.contains(document.activeElement)) {\n      const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`) as HTMLElement;\n      const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n\n      const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n      elementToFocus.focus();\n    }\n  }\n\n  private _restoreFocus() {\n    const body = this._document.body;\n    const elWithFocus = this._elWithFocus;\n\n    let elementToFocus;\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n    this._zone.runOutsideAngular(() => {\n      setTimeout(() => elementToFocus.focus());\n      this._elWithFocus = null;\n    });\n  }\n\n  private _bumpBackdrop() {\n    if (this.backdrop === 'static') {\n      ngbRunTransition(this._elRef.nativeElement, ({classList}) => {\n        classList.add('modal-static');\n        return () => classList.remove('modal-static');\n      }, {animation: this.animation, runningTransition: 'continue'});\n    }\n  }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EventEmitter,\n  Inject,\n  Injectable,\n  Injector,\n  NgZone,\n  RendererFactory2,\n  TemplateRef\n} from '@angular/core';\nimport {Subject} from 'rxjs';\n\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {ContentRef} from '../util/popup';\nimport {ScrollBar} from '../util/scrollbar';\nimport {isDefined, isString} from '../util/util';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalOptions} from './modal-config';\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\nimport {NgbModalWindow} from './modal-window';\n\n@Injectable({providedIn: 'root'})\nexport class NgbModalStack {\n  private _activeWindowCmptHasChanged = new Subject();\n  private _ariaHiddenValues: Map<Element, string | null> = new Map();\n  private _backdropAttributes = ['animation', 'backdropClass'];\n  private _modalRefs: NgbModalRef[] = [];\n  private _windowAttributes = [\n    'animation', 'ariaLabelledBy', 'ariaDescribedBy', 'backdrop', 'centered', 'keyboard', 'scrollable', 'size',\n    'windowClass'\n  ];\n  private _windowCmpts: ComponentRef<NgbModalWindow>[] = [];\n  private _activeInstances: EventEmitter<NgbModalRef[]> = new EventEmitter();\n\n  constructor(\n      private _applicationRef: ApplicationRef, private _injector: Injector, @Inject(DOCUMENT) private _document: any,\n      private _scrollBar: ScrollBar, private _rendererFactory: RendererFactory2, private _ngZone: NgZone) {\n    // Trap focus on active WindowCmpt\n    this._activeWindowCmptHasChanged.subscribe(() => {\n      if (this._windowCmpts.length) {\n        const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n        ngbFocusTrap(this._ngZone, activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n        this._revertAriaHidden();\n        this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n      }\n    });\n  }\n\n  open(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options): NgbModalRef {\n    const containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ?\n                                                                   this._document.querySelector(options.container) :\n                                                                   this._document.body;\n    const renderer = this._rendererFactory.createRenderer(null, null);\n\n    const revertPaddingForScrollBar = this._scrollBar.compensate();\n    const removeBodyClass = () => {\n      if (!this._modalRefs.length) {\n        renderer.removeClass(this._document.body, 'modal-open');\n        this._revertAriaHidden();\n      }\n    };\n\n    if (!containerEl) {\n      throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n    }\n\n    const activeModal = new NgbActiveModal();\n    const contentRef =\n        this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal, options);\n\n    let backdropCmptRef: ComponentRef<NgbModalBackdrop>| undefined =\n        options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : undefined;\n    let windowCmptRef: ComponentRef<NgbModalWindow> = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n    let ngbModalRef: NgbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n    this._registerModalRef(ngbModalRef);\n    this._registerWindowCmpt(windowCmptRef);\n    ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n    ngbModalRef.result.then(removeBodyClass, removeBodyClass);\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\n\n    this._applyWindowOptions(windowCmptRef.instance, options);\n    if (this._modalRefs.length === 1) {\n      renderer.addClass(this._document.body, 'modal-open');\n    }\n\n    if (backdropCmptRef && backdropCmptRef.instance) {\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\n    }\n    return ngbModalRef;\n  }\n\n  get activeInstances() { return this._activeInstances; }\n\n  dismissAll(reason?: any) { this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason)); }\n\n  hasOpenModals(): boolean { return this._modalRefs.length > 0; }\n\n  private _attachBackdrop(moduleCFR: ComponentFactoryResolver, containerEl: any): ComponentRef<NgbModalBackdrop> {\n    let backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n    let backdropCmptRef = backdropFactory.create(this._injector);\n    this._applicationRef.attachView(backdropCmptRef.hostView);\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    return backdropCmptRef;\n  }\n\n  private _attachWindowComponent(moduleCFR: ComponentFactoryResolver, containerEl: any, contentRef: any):\n      ComponentRef<NgbModalWindow> {\n    let windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n    let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n    this._applicationRef.attachView(windowCmptRef.hostView);\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\n    return windowCmptRef;\n  }\n\n  private _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\n    this._windowAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _applyBackdropOptions(backdropInstance: NgbModalBackdrop, options: Object): void {\n    this._backdropAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        backdropInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _getContentRef(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, activeModal: NgbActiveModal,\n      options: NgbModalOptions): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      return this._createFromTemplateRef(content, activeModal);\n    } else if (isString(content)) {\n      return this._createFromString(content);\n    } else {\n      return this._createFromComponent(moduleCFR, contentInjector, content, activeModal, options);\n    }\n  }\n\n  private _createFromTemplateRef(content: TemplateRef<any>, activeModal: NgbActiveModal): ContentRef {\n    const context = {\n      $implicit: activeModal,\n      close(result) { activeModal.close(result); },\n      dismiss(reason) { activeModal.dismiss(reason); }\n    };\n    const viewRef = content.createEmbeddedView(context);\n    this._applicationRef.attachView(viewRef);\n    return new ContentRef([viewRef.rootNodes], viewRef);\n  }\n\n  private _createFromString(content: string): ContentRef {\n    const component = this._document.createTextNode(`${content}`);\n    return new ContentRef([[component]]);\n  }\n\n  private _createFromComponent(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, context: NgbActiveModal,\n      options: NgbModalOptions): ContentRef {\n    const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n    const modalContentInjector =\n        Injector.create({providers: [{provide: NgbActiveModal, useValue: context}], parent: contentInjector});\n    const componentRef = contentCmptFactory.create(modalContentInjector);\n    const componentNativeEl = componentRef.location.nativeElement;\n    if (options.scrollable) {\n      (componentNativeEl as HTMLElement).classList.add('component-host-scrollable');\n    }\n    this._applicationRef.attachView(componentRef.hostView);\n    // FIXME: we should here get rid of the component nativeElement\n    // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n    return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n  }\n\n  private _setAriaHidden(element: Element) {\n    const parent = element.parentElement;\n    if (parent && element !== this._document.body) {\n      Array.from(parent.children).forEach(sibling => {\n        if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n          this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      });\n\n      this._setAriaHidden(parent);\n    }\n  }\n\n  private _revertAriaHidden() {\n    this._ariaHiddenValues.forEach((value, element) => {\n      if (value) {\n        element.setAttribute('aria-hidden', value);\n      } else {\n        element.removeAttribute('aria-hidden');\n      }\n    });\n    this._ariaHiddenValues.clear();\n  }\n\n  private _registerModalRef(ngbModalRef: NgbModalRef) {\n    const unregisterModalRef = () => {\n      const index = this._modalRefs.indexOf(ngbModalRef);\n      if (index > -1) {\n        this._modalRefs.splice(index, 1);\n        this._activeInstances.emit(this._modalRefs);\n      }\n    };\n    this._modalRefs.push(ngbModalRef);\n    this._activeInstances.emit(this._modalRefs);\n    ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n  }\n\n  private _registerWindowCmpt(ngbWindowCmpt: ComponentRef<NgbModalWindow>) {\n    this._windowCmpts.push(ngbWindowCmpt);\n    this._activeWindowCmptHasChanged.next();\n\n    ngbWindowCmpt.onDestroy(() => {\n      const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n      if (index > -1) {\n        this._windowCmpts.splice(index, 1);\n        this._activeWindowCmptHasChanged.next();\n      }\n    });\n  }\n}\n","import {Injectable, Injector, ComponentFactoryResolver} from '@angular/core';\n\nimport {NgbModalOptions, NgbModalConfig} from './modal-config';\nimport {NgbModalRef} from './modal-ref';\nimport {NgbModalStack} from './modal-stack';\n\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbModal {\n  constructor(\n      private _moduleCFR: ComponentFactoryResolver, private _injector: Injector, private _modalStack: NgbModalStack,\n      private _config: NgbModalConfig) {}\n\n  /**\n   * Opens a new modal window with the specified content and supplied options.\n   *\n   * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n   * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n   * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n   *\n   * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n   */\n  open(content: any, options: NgbModalOptions = {}): NgbModalRef {\n    const combinedOptions = Object.assign({}, this._config, options);\n    return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n  }\n\n  /**\n   * Returns an observable that holds the active modal instances.\n   */\n  get activeInstances() { return this._modalStack.activeInstances; }\n\n  /**\n   * Dismisses all currently displayed modal windows with the supplied reason.\n   *\n   * @since 3.1.0\n   */\n  dismissAll(reason?: any) { this._modalStack.dismissAll(reason); }\n\n  /**\n   * Indicates if there are currently any open modal windows in the application.\n   *\n   * @since 3.3.0\n   */\n  hasOpenModals(): boolean { return this._modalStack.hasOpenModals(); }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbModal} from './modal';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nexport {NgbModal} from './modal';\nexport {NgbModalConfig, NgbModalOptions} from './modal-config';\nexport {NgbModalRef, NgbActiveModal} from './modal-ref';\nexport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@NgModule({\n  declarations: [NgbModalBackdrop, NgbModalWindow],\n  entryComponents: [NgbModalBackdrop, NgbModalWindow],\n  providers: [NgbModal]\n})\nexport class NgbModalModule {\n}\n","import {Injectable} from '@angular/core';\nimport {NgbConfig} from '../ngb-config';\n\n/**\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the navs used in the application.\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbNavConfig {\n  animation: boolean;\n  destroyOnHide = true;\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  roles: 'tablist' | false = 'tablist';\n  keyboard: boolean | 'changeWithArrows' = false;\n\n  constructor(ngbConfig: NgbConfig) { this.animation = ngbConfig.animation; }\n}\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  Attribute,\n  ChangeDetectorRef,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {Subject} from 'rxjs';\n\nimport {isDefined} from '../util/util';\nimport {NgbNavConfig} from './nav-config';\nimport {Key} from '../util/key';\n\nconst isValidNavId = (id: any) => isDefined(id) && id !== '';\n\nlet navCounter = 0;\n\n/**\n * Context passed to the nav content template.\n *\n * See [this demo](#/components/nav/examples#keep-content) as the example.\n *\n * @since 5.2.0\n */\nexport interface NgbNavContentContext {\n  /**\n   * If `true`, current nav content is visible and active\n   */\n  $implicit: boolean;\n}\n\n\n/**\n * This directive must be used to wrap content to be displayed in the nav.\n *\n * @since 5.2.0\n */\n@Directive({selector: 'ng-template[ngbNavContent]'})\nexport class NgbNavContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n\n/**\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\n *\n * @since 5.2.0\n */\n@Directive({selector: '[ngbNavItem]', exportAs: 'ngbNavItem', host: {'[class.nav-item]': 'true'}})\nexport class NgbNavItem implements AfterContentChecked, OnInit {\n  private _nav: NgbNav;\n\n  /**\n   * If `true`, non-active current nav item content will be removed from DOM\n   * Otherwise it will just be hidden\n   */\n  @Input() destroyOnHide;\n\n  /**\n   * If `true`, the current nav item is disabled and can't be toggled by user.\n   *\n   * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\n   */\n  @Input() disabled = false;\n\n  /**\n   * The id used for the DOM elements.\n   * Must be unique inside the document in case you have multiple `ngbNav`s on the page.\n   *\n   * Autogenerated as `ngb-nav-XXX` if not provided.\n   */\n  @Input() domId: string;\n\n  /**\n   * The id used as a model for active nav.\n   * It can be anything, but must be unique inside one `ngbNav`.\n   *\n   * The only limitation is that it is not possible to have the `''` (empty string) as id,\n   * because ` ngbNavItem `, `ngbNavItem=''` and `[ngbNavItem]=\"''\"` are indistinguishable\n   */\n  @Input('ngbNavItem') _id: any;\n\n  /**\n   * An event emitted when the fade in transition is finished on the related nav content\n   *\n   * @since 8.0.0\n   */\n  @Output() shown = new EventEmitter<void>();\n\n  /**\n   * An event emitted when the fade out transition is finished on the related nav content\n   *\n   * @since 8.0.0\n   */\n  @Output() hidden = new EventEmitter<void>();\n\n  contentTpl: NgbNavContent | null;\n\n  @ContentChildren(NgbNavContent, {descendants: false}) contentTpls: QueryList<NgbNavContent>;\n\n  constructor(@Inject(forwardRef(() => NgbNav)) nav, public elementRef: ElementRef<any>) {\n    // TODO: cf https://github.com/angular/angular/issues/30106\n    this._nav = nav;\n  }\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.contentTpl = this.contentTpls.first;\n  }\n\n  ngOnInit() {\n    if (!isDefined(this.domId)) {\n      this.domId = `ngb-nav-${navCounter++}`;\n    }\n  }\n\n  get active() { return this._nav.activeId === this.id; }\n\n  get id() { return isValidNavId(this._id) ? this._id : this.domId; }\n\n  get panelDomId() { return `${this.domId}-panel`; }\n\n  isPanelInDom() {\n    return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n  }\n}\n\n\n/**\n * A nav directive that helps with implementing tabbed navigation components.\n *\n * @since 5.2.0\n */\n@Directive({\n  selector: '[ngbNav]',\n  exportAs: 'ngbNav',\n  host: {\n    '[class.nav]': 'true',\n    '[class.flex-column]': `orientation === 'vertical'`,\n    '[attr.aria-orientation]': `orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined`,\n    '[attr.role]': `role ? role : roles ? 'tablist' : undefined`,\n    '(keydown.arrowLeft)': 'onKeyDown($event)',\n    '(keydown.arrowRight)': 'onKeyDown($event)',\n    '(keydown.arrowDown)': 'onKeyDown($event)',\n    '(keydown.arrowUp)': 'onKeyDown($event)',\n    '(keydown.Home)': 'onKeyDown($event)',\n    '(keydown.End)': 'onKeyDown($event)'\n  }\n})\nexport class NgbNav implements AfterContentInit {\n  static ngAcceptInputType_orientation: string;\n  static ngAcceptInputType_roles: boolean | string;\n\n  /**\n   * The id of the nav that should be active\n   *\n   * You could also use the `.select()` method and the `(navChange)` event\n   */\n  @Input() activeId: any;\n\n  /**\n   * The event emitted after the active nav changes\n   * The payload of the event is the newly active nav id\n   *\n   * If you want to prevent nav change, you should use `(navChange)` event\n   */\n  @Output() activeIdChange = new EventEmitter<any>();\n\n  /**\n   * If `true`, nav change will be animated.\n   *\n   * @since 8.0.0\n   */\n  @Input() animation: boolean;\n\n  /**\n   * If `true`, non-active nav content will be removed from DOM\n   * Otherwise it will just be hidden\n   */\n  @Input() destroyOnHide;\n\n  /**\n   * The orientation of navs.\n   *\n   * Using `vertical` will also add the `aria-orientation` attribute\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Role attribute generating strategy:\n   * - `false` - no role attributes will be generated\n   * - `'tablist'` - 'tablist', 'tab' and 'tabpanel' will be generated (default)\n   */\n  @Input() roles: 'tablist' | false;\n\n  /**\n   * Keyboard support for nav focus/selection using arrow keys.\n   *\n   * * `false` - no keyboard support.\n   * * `true` - navs will be focused using keyboard arrow keys\n   * * `'changeWithArrows'` -  nav will be selected using keyboard arrow keys\n   *\n   * See the [list of available keyboard shortcuts](#/components/nav/overview#keyboard-shortcuts).\n   *\n   * @since 6.1.0\n */\n  @Input() keyboard: boolean | 'changeWithArrows';\n\n  /**\n   * An event emitted when the fade in transition is finished for one of the items.\n   *\n   * Payload of the event is the nav id that was just shown.\n   *\n   * @since 8.0.0\n   */\n  @Output() shown = new EventEmitter<any>();\n\n  /**\n   * An event emitted when the fade out transition is finished for one of the items.\n   *\n   * Payload of the event is the nav id that was just hidden.\n   *\n   * @since 8.0.0\n   */\n  @Output() hidden = new EventEmitter<any>();\n\n  @ContentChildren(NgbNavItem) items: QueryList<NgbNavItem>;\n  @ContentChildren(forwardRef(() => NgbNavLink), {descendants: true}) links: QueryList<NgbNavLink>;\n\n  navItemChange$ = new Subject<NgbNavItem | null>();\n\n  constructor(\n      @Attribute('role') public role: string, config: NgbNavConfig, private _cd: ChangeDetectorRef,\n      @Inject(DOCUMENT) private _document: any) {\n    this.animation = config.animation;\n    this.destroyOnHide = config.destroyOnHide;\n    this.orientation = config.orientation;\n    this.roles = config.roles;\n    this.keyboard = config.keyboard;\n  }\n\n  /**\n   * The nav change event emitted right before the nav change happens on user click.\n   *\n   * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n   *\n   * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\n   */\n  @Output() navChange = new EventEmitter<NgbNavChangeEvent>();\n\n  click(item: NgbNavItem) {\n    if (!item.disabled) {\n      this._updateActiveId(item.id);\n    }\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    if (this.roles !== 'tablist' || !this.keyboard) {\n      return;\n    }\n    // tslint:disable-next-line: deprecation\n    const key = event.which;\n    const enabledLinks = this.links.filter(link => !link.navItem.disabled);\n    const {length} = enabledLinks;\n\n    let position = -1;\n\n    enabledLinks.forEach((link, index) => {\n      if (link.elRef.nativeElement === this._document.activeElement) {\n        position = index;\n      }\n    });\n\n    if (length) {\n      switch (key) {\n        case Key.ArrowLeft:\n          if (this.orientation === 'vertical') {\n            return;\n          }\n          position = (position - 1 + length) % length;\n          break;\n        case Key.ArrowRight:\n          if (this.orientation === 'vertical') {\n            return;\n          }\n          position = (position + 1) % length;\n          break;\n        case Key.ArrowDown:\n          if (this.orientation === 'horizontal') {\n            return;\n          }\n          position = (position + 1) % length;\n          break;\n        case Key.ArrowUp:\n          if (this.orientation === 'horizontal') {\n            return;\n          }\n          position = (position - 1 + length) % length;\n          break;\n        case Key.Home:\n          position = 0;\n          break;\n        case Key.End:\n          position = length - 1;\n          break;\n      }\n      if (this.keyboard === 'changeWithArrows') {\n        this.select(enabledLinks[position].navItem.id);\n      }\n      enabledLinks[position].elRef.nativeElement.focus();\n\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Selects the nav with the given id and shows its associated pane.\n   * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n   */\n  select(id: any) { this._updateActiveId(id, false); }\n\n  ngAfterContentInit() {\n    if (!isDefined(this.activeId)) {\n      const nextId = this.items.first ? this.items.first.id : null;\n      if (isValidNavId(nextId)) {\n        this._updateActiveId(nextId, false);\n        this._cd.detectChanges();\n      }\n    }\n  }\n\n  ngOnChanges({activeId}: SimpleChanges): void {\n    if (activeId && !activeId.firstChange) {\n      this._notifyItemChanged(activeId.currentValue);\n    }\n  }\n\n  private _updateActiveId(nextId: any, emitNavChange = true) {\n    if (this.activeId !== nextId) {\n      let defaultPrevented = false;\n\n      if (emitNavChange) {\n        this.navChange.emit({activeId: this.activeId, nextId, preventDefault: () => { defaultPrevented = true; }});\n      }\n\n      if (!defaultPrevented) {\n        this.activeId = nextId;\n        this.activeIdChange.emit(nextId);\n        this._notifyItemChanged(nextId);\n      }\n    }\n  }\n\n  private _notifyItemChanged(nextItemId: any) { this.navItemChange$.next(this._getItemById(nextItemId)); }\n\n  private _getItemById(itemId: any): NgbNavItem | null {\n    return this.items && this.items.find(item => item.id === itemId) || null;\n  }\n}\n\n\n/**\n * A directive to put on the nav link.\n *\n * @since 5.2.0\n */\n@Directive({\n  selector: 'a[ngbNavLink]',\n  host: {\n    '[id]': 'navItem.domId',\n    '[class.nav-link]': 'true',\n    '[class.nav-item]': 'hasNavItemClass()',\n    '[attr.role]': `role ? role : nav.roles ? 'tab' : undefined`,\n    'href': '',\n    '[class.active]': 'navItem.active',\n    '[class.disabled]': 'navItem.disabled',\n    '[attr.tabindex]': 'navItem.disabled ? -1 : undefined',\n    '[attr.aria-controls]': 'navItem.isPanelInDom() ? navItem.panelDomId : null',\n    '[attr.aria-selected]': 'navItem.active',\n    '[attr.aria-disabled]': 'navItem.disabled',\n    '(click)': 'nav.click(navItem); $event.preventDefault()'\n  }\n})\nexport class NgbNavLink {\n  constructor(\n      @Attribute('role') public role: string, public navItem: NgbNavItem, public nav: NgbNav,\n      public elRef: ElementRef) {}\n\n  hasNavItemClass() {\n    // with alternative markup we have to add `.nav-item` class, because `ngbNavItem` is on the ng-container\n    return this.navItem.elementRef.nativeElement.nodeType === Node.COMMENT_NODE;\n  }\n}\n\n\n/**\n * The payload of the change event emitted right before the nav change happens on user click.\n *\n * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n *\n * @since 5.2.0\n */\nexport interface NgbNavChangeEvent<T = any> {\n  /**\n   * Id of the currently active nav.\n   */\n  activeId: T;\n\n  /**\n   * Id of the newly selected nav.\n   */\n  nextId: T;\n\n  /**\n   * Function that will prevent nav change if called.\n   */\n  preventDefault: () => void;\n}\n","import {NgbTransitionStartFn} from '../util/transition/ngbTransition';\nimport {reflow} from '../util/util';\n\nexport const ngbNavFadeOutTransition: NgbTransitionStartFn = ({classList}) => {\n  classList.remove('show');\n  return () => classList.remove('active');\n};\n\nexport const ngbNavFadeInTransition: NgbTransitionStartFn = (element: HTMLElement) => {\n  element.classList.add('active');\n  reflow(element);\n  element.classList.add('show');\n};\n\nexport const ngbNavFadeInNoReflowTransition: NgbTransitionStartFn = (element: HTMLElement) => {\n  element.classList.add('active');\n  element.classList.add('show');\n};\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  Input,\n  QueryList,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {distinctUntilChanged, skip, startWith} from 'rxjs/operators';\n\nimport {ngbNavFadeInNoReflowTransition, ngbNavFadeInTransition, ngbNavFadeOutTransition} from './nav-transition';\nimport {ngbRunTransition, NgbTransitionOptions} from '../util/transition/ngbTransition';\nimport {NgbNav, NgbNavItem} from './nav';\n\n@Directive({\n  selector: '[ngbNavPane]',\n  host: {\n    '[id]': 'item.panelDomId',\n    'class': 'tab-pane',\n    '[class.fade]': 'nav.animation',\n    '[attr.role]': 'role ? role : nav.roles ? \"tabpanel\" : undefined',\n    '[attr.aria-labelledby]': 'item.domId'\n  }\n})\nexport class NgbNavPane {\n  @Input() item: NgbNavItem;\n  @Input() nav: NgbNav;\n  @Input() role: string;\n\n  constructor(public elRef: ElementRef<HTMLElement>) {}\n}\n\n/**\n * The outlet where currently active nav content will be displayed.\n *\n * @since 5.2.0\n */\n@Component({\n  selector: '[ngbNavOutlet]',\n  host: {'[class.tab-content]': 'true'},\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-template ngFor let-item [ngForOf]=\"nav.items\">\n      <div ngbNavPane *ngIf=\"item.isPanelInDom() || isPanelTransitioning(item)\" [item]=\"item\" [nav]=\"nav\" [role]=\"paneRole\">\n        <ng-template [ngTemplateOutlet]=\"item.contentTpl?.templateRef || null\"\n                     [ngTemplateOutletContext]=\"{$implicit: item.active || isPanelTransitioning(item)}\"></ng-template>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbNavOutlet implements AfterViewInit {\n  private _activePane: NgbNavPane | null = null;\n\n  @ViewChildren(NgbNavPane) private _panes: QueryList<NgbNavPane>;\n\n  /**\n   * A role to set on the nav pane\n   */\n  @Input() paneRole;\n\n  /**\n   * Reference to the `NgbNav`\n   */\n  @Input('ngbNavOutlet') nav: NgbNav;\n\n  constructor(private _cd: ChangeDetectorRef) {}\n\n  isPanelTransitioning(item: NgbNavItem) { return this._activePane ?.item === item; }\n\n  ngAfterViewInit() {\n    // initial display\n    this._activePane = this._getActivePane();\n    this._activePane ?.elRef.nativeElement.classList.add('show');\n    this._activePane ?.elRef.nativeElement.classList.add('active');\n\n    // this will be emitted for all 3 types of nav changes: .select(), [activeId] or (click)\n    this.nav.navItemChange$\n      .pipe(startWith(this._activePane ?.item || null), distinctUntilChanged(), skip(1))\n      .subscribe(nextItem => {\n      const options: NgbTransitionOptions<undefined> = {animation: this.nav.animation, runningTransition: 'stop'};\n\n      // fading out\n      if (this._activePane) {\n        ngbRunTransition(this._activePane.elRef.nativeElement, ngbNavFadeOutTransition, options).subscribe(() => {\n          const activeItem = this._activePane ?.item;\n\n          // next panel we're switching to will only appear in DOM after the change detection is done\n          // and `this._panes` will be updated\n          this._cd.detectChanges();\n\n          this._activePane = this._getPaneForItem(nextItem);\n\n          // fading in\n          if (this._activePane) {\n            const fadeInTransition = this.nav.animation ? ngbNavFadeInTransition : ngbNavFadeInNoReflowTransition;\n            ngbRunTransition(this._activePane.elRef.nativeElement, fadeInTransition, options).subscribe(() => {\n              if (nextItem) {\n                nextItem.shown.emit();\n                this.nav.shown.emit(nextItem.id);\n              }\n            });\n          }\n\n          if (activeItem) {\n            activeItem.hidden.emit();\n            this.nav.hidden.emit(activeItem.id);\n          }\n        });\n      }\n      });\n  }\n\n  private _getPaneForItem(item: NgbNavItem | null) {\n    return this._panes && this._panes.find(pane => pane.item === item) || null;\n  }\n\n  private _getActivePane(): NgbNavPane | null {\n    return this._panes && this._panes.find(pane => pane.item.active) || null;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbNav, NgbNavContent, NgbNavItem, NgbNavLink} from './nav';\nimport {NgbNavOutlet, NgbNavPane} from './nav-outlet';\n\nexport {NgbNav, NgbNavContent, NgbNavContentContext, NgbNavItem, NgbNavLink, NgbNavChangeEvent} from './nav';\nexport {NgbNavOutlet, NgbNavPane} from './nav-outlet';\nexport {NgbNavConfig} from './nav-config';\n\nconst NGB_NAV_DIRECTIVES = [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet, NgbNavPane];\n\n@NgModule({declarations: NGB_NAV_DIRECTIVES, exports: NGB_NAV_DIRECTIVES, imports: [CommonModule]})\nexport class NgbNavModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPaginationConfig {\n  disabled = false;\n  boundaryLinks = false;\n  directionLinks = true;\n  ellipses = true;\n  maxSize = 0;\n  pageSize = 10;\n  rotate = false;\n  size: 'sm' | 'lg';\n}\n","import {\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  OnChanges,\n  ChangeDetectionStrategy,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbPaginationConfig} from './pagination-config';\n\n/**\n * A context for the\n * * `NgbPaginationFirst`\n * * `NgbPaginationPrevious`\n * * `NgbPaginationNext`\n * * `NgbPaginationLast`\n * * `NgbPaginationEllipsis`\n *\n * link templates in case you want to override one.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationLinkContext {\n  /**\n   * The currently selected page number\n   */\n  currentPage: number;\n\n  /**\n   * If `true`, the current link is disabled\n   */\n  disabled: boolean;\n}\n\n/**\n * A context for the `NgbPaginationNumber` link template in case you want to override one.\n *\n * Extends `NgbPaginationLinkContext`.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationNumberContext extends NgbPaginationLinkContext {\n  /**\n   * The page number, displayed by the current page link.\n   */\n  $implicit: number;\n}\n\n/**\n * A directive to match the 'ellipsis' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationEllipsis]'})\nexport class NgbPaginationEllipsis {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'first' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationFirst]'})\nexport class NgbPaginationFirst {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'last' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationLast]'})\nexport class NgbPaginationLast {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'next' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationNext]'})\nexport class NgbPaginationNext {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the page 'number' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationNumber]'})\nexport class NgbPaginationNumber {\n  constructor(public templateRef: TemplateRef<NgbPaginationNumberContext>) {}\n}\n\n/**\n * A directive to match the 'previous' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationPrevious]'})\nexport class NgbPaginationPrevious {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\n@Component({\n  selector: 'ngb-pagination',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'role': 'navigation'},\n  template: `\n    <ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n    <ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n    <ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n    <ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n    <ng-template #ellipsis>...</ng-template>\n    <ng-template #defaultNumber let-page let-currentPage=\"currentPage\">\n      {{ page }}\n      <span *ngIf=\"page === currentPage\" class=\"sr-only\">(current)</span>\n    </ng-template>\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"selectPage(1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page-1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled()}\"></ng-template>\n        </a>\n      </li>\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\" [attr.aria-current]=\"(pageNumber === page ? 'page' : null)\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\" tabindex=\"-1\" aria-disabled=\"true\">\n          <ng-template [ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n                       [ngTemplateOutletContext]=\"{disabled: true, currentPage: page}\"></ng-template>\n        </a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"selectPage(pageNumber); $event.preventDefault()\"\n          [attr.tabindex]=\"disabled ? '-1' : null\" [attr.aria-disabled]=\"disabled ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n                       [ngTemplateOutletContext]=\"{disabled: disabled, $implicit: pageNumber, currentPage: page}\"></ng-template>\n        </a>\n      </li>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page+1); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"selectPage(pageCount); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n    </ul>\n  `\n})\nexport class NgbPagination implements OnChanges {\n  pageCount = 0;\n  pages: number[] = [];\n\n  @ContentChild(NgbPaginationEllipsis, {static: false}) tplEllipsis: NgbPaginationEllipsis;\n  @ContentChild(NgbPaginationFirst, {static: false}) tplFirst: NgbPaginationFirst;\n  @ContentChild(NgbPaginationLast, {static: false}) tplLast: NgbPaginationLast;\n  @ContentChild(NgbPaginationNext, {static: false}) tplNext: NgbPaginationNext;\n  @ContentChild(NgbPaginationNumber, {static: false}) tplNumber: NgbPaginationNumber;\n  @ContentChild(NgbPaginationPrevious, {static: false}) tplPrevious: NgbPaginationPrevious;\n\n  /**\n   * If `true`, pagination links will be disabled.\n   */\n  @Input() disabled: boolean;\n\n  /**\n   * If `true`, the \"First\" and \"Last\" page links are shown.\n   */\n  @Input() boundaryLinks: boolean;\n\n  /**\n   * If `true`, the \"Next\" and \"Previous\" page links are shown.\n   */\n  @Input() directionLinks: boolean;\n\n  /**\n   * If `true`, the ellipsis symbols and first/last page numbers will be shown when `maxSize` > number of pages.\n   */\n  @Input() ellipses: boolean;\n\n  /**\n   * Whether to rotate pages when `maxSize` > number of pages.\n   *\n   * The current page always stays in the middle if `true`.\n   */\n  @Input() rotate: boolean;\n\n  /**\n   *  The number of items in your paginated collection.\n   *\n   *  Note, that this is not the number of pages. Page numbers are calculated dynamically based on\n   *  `collectionSize` and `pageSize`. Ex. if you have 100 items in your collection and displaying 20 items per page,\n   *  you'll end up with 5 pages.\n   */\n  @Input() collectionSize: number;\n\n  /**\n   *  The maximum number of pages to display.\n   */\n  @Input() maxSize: number;\n\n  /**\n   *  The current page.\n   *\n   *  Page numbers start with `1`.\n   */\n  @Input() page = 1;\n\n  /**\n   *  The number of items per page.\n   */\n  @Input() pageSize: number;\n\n  /**\n   *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n   *\n   *  Event payload is the number of the newly selected page.\n   *\n   *  Page numbers start with `1`.\n   */\n  @Output() pageChange = new EventEmitter<number>(true);\n\n  /**\n   * The pagination display size.\n   *\n   * Bootstrap currently supports small and large sizes.\n   */\n  @Input() size: 'sm' | 'lg';\n\n  constructor(config: NgbPaginationConfig) {\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n\n  hasPrevious(): boolean { return this.page > 1; }\n\n  hasNext(): boolean { return this.page < this.pageCount; }\n\n  nextDisabled(): boolean { return !this.hasNext() || this.disabled; }\n\n  previousDisabled(): boolean { return !this.hasPrevious() || this.disabled; }\n\n  selectPage(pageNumber: number): void { this._updatePages(pageNumber); }\n\n  ngOnChanges(changes: SimpleChanges): void { this._updatePages(this.page); }\n\n  isEllipsis(pageNumber): boolean { return pageNumber === -1; }\n\n  /**\n   * Appends ellipses and first/last page number to the displayed pages\n   */\n  private _applyEllipses(start: number, end: number) {\n    if (this.ellipses) {\n      if (start > 0) {\n        // The first page will always be included. If the displayed range\n        // starts after the third page, then add ellipsis. But if the range\n        // starts on the third page, then add the second page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (start > 2) {\n          this.pages.unshift(-1);\n        } else if (start === 2) {\n          this.pages.unshift(2);\n        }\n        this.pages.unshift(1);\n      }\n      if (end < this.pageCount) {\n        // The last page will always be included. If the displayed range\n        // ends before the third-last page, then add ellipsis. But if the range\n        // ends on third-last page, then add the second-last page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (end < (this.pageCount - 2)) {\n          this.pages.push(-1);\n        } else if (end === (this.pageCount - 2)) {\n          this.pages.push(this.pageCount - 1);\n        }\n        this.pages.push(this.pageCount);\n      }\n    }\n  }\n\n  /**\n   * Rotates page numbers based on maxSize items visible.\n   * Currently selected page stays in the middle:\n   *\n   * Ex. for selected page = 6:\n   * [5,*6*,7] for maxSize = 3\n   * [4,5,*6*,7] for maxSize = 4\n   */\n  private _applyRotation(): [number, number] {\n    let start = 0;\n    let end = this.pageCount;\n    let leftOffset = Math.floor(this.maxSize / 2);\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n    if (this.page <= leftOffset) {\n      // very beginning, no rotation -> [0..maxSize]\n      end = this.maxSize;\n    } else if (this.pageCount - this.page < leftOffset) {\n      // very end, no rotation -> [len-maxSize..len]\n      start = this.pageCount - this.maxSize;\n    } else {\n      // rotate\n      start = this.page - leftOffset - 1;\n      end = this.page + rightOffset;\n    }\n\n    return [start, end];\n  }\n\n  /**\n   * Paginates page numbers based on maxSize items per page.\n   */\n  private _applyPagination(): [number, number] {\n    let page = Math.ceil(this.page / this.maxSize) - 1;\n    let start = page * this.maxSize;\n    let end = start + this.maxSize;\n\n    return [start, end];\n  }\n\n  private _setPageInRange(newPageNo) {\n    const prevPageNo = this.page;\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  private _updatePages(newPage: number) {\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n    if (!isNumber(this.pageCount)) {\n      this.pageCount = 0;\n    }\n\n    // fill-in model needed to render pages\n    this.pages.length = 0;\n    for (let i = 1; i <= this.pageCount; i++) {\n      this.pages.push(i);\n    }\n\n    // set page within 1..max range\n    this._setPageInRange(newPage);\n\n    // apply maxSize if necessary\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n      let start = 0;\n      let end = this.pageCount;\n\n      // either paginating or rotating page numbers\n      if (this.rotate) {\n        [start, end] = this._applyRotation();\n      } else {\n        [start, end] = this._applyPagination();\n      }\n\n      this.pages = this.pages.slice(start, end);\n\n      // adding ellipses\n      this._applyEllipses(start, end);\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination';\n\nexport {\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination';\nexport {NgbPaginationConfig} from './pagination-config';\n\nconst DIRECTIVES = [\n  NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber,\n  NgbPaginationPrevious\n];\n\n@NgModule({declarations: DIRECTIVES, exports: DIRECTIVES, imports: [CommonModule]})\nexport class NgbPaginationModule {\n}\n","import {Observable, merge} from 'rxjs';\nimport {share, filter, delay, map} from 'rxjs/operators';\nimport {Renderer2} from '@angular/core';\n\nexport class Trigger {\n  constructor(public open: string, public close?: string) {\n    if (!close) {\n      this.close = open;\n    }\n  }\n\n  isManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\n\nconst DEFAULT_ALIASES = {\n  'hover': ['mouseenter', 'mouseleave'],\n  'focus': ['focusin', 'focusout'],\n};\n\nexport function parseTriggers(triggers: string, aliases = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n    let alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nexport function observeTriggers(\n    renderer: Renderer2, nativeElement: HTMLElement, triggers: Trigger[], isOpenedFn: () => boolean) {\n  return new Observable<boolean>(subscriber => {\n    const listeners: Function[] = [];\n    const openFn = () => subscriber.next(true);\n    const closeFn = () => subscriber.next(false);\n    const toggleFn = () => subscriber.next(!isOpenedFn());\n\n    triggers.forEach((trigger: Trigger) => {\n      if (trigger.open === trigger.close) {\n        listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n      } else {\n        listeners.push(\n            renderer.listen(nativeElement, trigger.open, openFn),\n            renderer.listen(nativeElement, trigger.close !, closeFn));\n      }\n    });\n\n    return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\n  });\n}\n\nconst delayOrNoop = <T>(time: number) => time > 0 ? delay<T>(time) : (a: Observable<T>) => a;\n\nexport function triggerDelay(openDelay: number, closeDelay: number, isOpenedFn: () => boolean) {\n  return (input$: Observable<boolean>) => {\n    let pending: {open: boolean} | null = null;\n    const filteredInput$ = input$.pipe(\n        map(open => ({open})), filter(event => {\n          const currentlyOpen = isOpenedFn();\n          if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n            pending = event;\n            return true;\n          }\n          if (pending && pending.open !== event.open) {\n            pending = null;\n          }\n          return false;\n        }),\n        share());\n    const delayedOpen$ = filteredInput$.pipe(filter(event => event.open), delayOrNoop(openDelay));\n    const delayedClose$ = filteredInput$.pipe(filter(event => !event.open), delayOrNoop(closeDelay));\n    return merge(delayedOpen$, delayedClose$)\n        .pipe(\n            filter(event => {\n              if (event === pending) {\n                pending = null;\n                return event.open !== isOpenedFn();\n              }\n              return false;\n            }),\n            map(event => event.open));\n  };\n}\n\nexport function listenToTriggers(\n    renderer: Renderer2, nativeElement: HTMLElement, triggers: string, isOpenedFn: () => boolean, openFn: Function,\n    closeFn: Function, openDelay = 0, closeDelay = 0) {\n  const parsedTriggers = parseTriggers(triggers);\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return () => {};\n  }\n\n  const subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn)\n                           .pipe(triggerDelay(openDelay, closeDelay, isOpenedFn))\n                           .subscribe(open => (open ? openFn() : closeFn()));\n\n  return () => subscription.unsubscribe();\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\nimport {NgbConfig} from '../ngb-config';\n\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPopoverConfig {\n  animation: boolean;\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'auto';\n  triggers = 'click';\n  container: string;\n  disablePopover = false;\n  popoverClass: string;\n  openDelay = 0;\n  closeDelay = 0;\n\n  constructor(ngbConfig: NgbConfig) { this.animation = ngbConfig.animation; }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  ApplicationRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\n\nimport {NgbPopoverConfig} from './popover-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-popover-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")',\n    '[class.fade]': 'animation',\n    'role': 'tooltip',\n    '[id]': 'id'\n  },\n  template: `\n    <div class=\"arrow\"></div>\n    <h3 class=\"popover-header\" *ngIf=\"title\">\n      <ng-template #simpleTitle>{{title}}</ng-template>\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? $any(title) : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\n    </h3>\n    <div class=\"popover-body\"><ng-content></ng-content></div>`,\n  styleUrls: ['./popover.scss']\n})\nexport class NgbPopoverWindow {\n  @Input() animation: boolean;\n  @Input() title: string | TemplateRef<any>| null | undefined;\n  @Input() id: string;\n  @Input() popoverClass: string;\n  @Input() context: any;\n\n  isTitleTemplate() { return this.title instanceof TemplateRef; }\n}\n\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\n@Directive({selector: '[ngbPopover]', exportAs: 'ngbPopover'})\nexport class NgbPopover implements OnInit, OnDestroy, OnChanges {\n  static ngAcceptInputType_autoClose: boolean | string;\n\n  /**\n   * If `true`, popover opening and closing will be animated.\n   *\n   * @since 8.0.0\n   */\n  @Input() animation: boolean;\n\n  /**\n   * Indicates whether the popover should be closed on `Escape` key and inside/outside clicks:\n   *\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n   * as well as `Escape` presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the popover.\n   *\n   * If the title and the content are falsy, the popover won't open.\n   */\n  @Input() ngbPopover: string | TemplateRef<any>| null | undefined;\n\n  /**\n   * The title of the popover.\n   *\n   * If the title and the content are falsy, the popover won't open.\n   */\n  @Input() popoverTitle: string | TemplateRef<any>| null | undefined;\n\n  /**\n   * The preferred placement of the popover.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"auto\"` (same as the sequence above).\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * Specifies events that should trigger the tooltip.\n   *\n   * Supports a space separated list of event names.\n   * For more details see the [triggers demo](#/components/popover/examples#triggers).\n   */\n  @Input() triggers: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   *\n   * Currently only supports `body`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, popover is disabled and won't be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disablePopover: boolean;\n\n  /**\n   * An optional class applied to the popover window element.\n   *\n   * @since 2.2.0\n   */\n  @Input() popoverClass: string;\n\n  /**\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() openDelay: number;\n\n  /**\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() closeDelay: number;\n\n  /**\n   * An event emitted when the popover opening animation has finished. Contains no payload.\n   */\n  @Output() shown = new EventEmitter<void>();\n\n  /**\n   * An event emitted when the popover closing animation has finished. Contains no payload.\n   *\n   * At this point popover is not in the DOM anymore.\n   */\n  @Output() hidden = new EventEmitter<void>();\n\n  private _ngbPopoverWindowId = `ngb-popover-${nextId++}`;\n  private _popupService: PopupService<NgbPopoverWindow>;\n  private _windowRef: ComponentRef<NgbPopoverWindow>| null = null;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n  private _isDisabled(): boolean {\n    if (this.disablePopover) {\n      return true;\n    }\n    if (!this.ngbPopover && !this.popoverTitle) {\n      return true;\n    }\n    return false;\n  }\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbPopoverConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      applicationRef: ApplicationRef) {\n    this.animation = config.animation;\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disablePopover = config.disablePopover;\n    this.popoverClass = config.popoverClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService<NgbPopoverWindow>(\n        NgbPopoverWindow, injector, viewContainerRef, _renderer, this._ngZone, componentFactoryResolver,\n        applicationRef);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body', 'bs-popover');\n      }\n    });\n  }\n\n  /**\n   * Opens the popover.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the popover template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && !this._isDisabled()) {\n      // this type assertion is safe because otherwise _isDisabled would return true\n      const {windowRef, transition$} =\n          this._popupService.open(this.ngbPopover as(string | TemplateRef<any>), context, this.animation);\n      this._windowRef = windowRef;\n      this._windowRef.instance.animation = this.animation;\n      this._windowRef.instance.title = this.popoverTitle;\n      this._windowRef.instance.context = context;\n      this._windowRef.instance.popoverClass = this.popoverClass;\n      this._windowRef.instance.id = this._ngbPopoverWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening popover from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n      this._windowRef.changeDetectorRef.detectChanges();\n\n      // We need to mark for check, because popover won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the popover from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\n          [this._windowRef.location.nativeElement]);\n\n      transition$.subscribe(() => this.shown.emit());\n    }\n  }\n\n  /**\n   * Closes the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n  close() {\n    if (this._windowRef) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close(this.animation).subscribe(() => {\n        this._windowRef = null;\n        this.hidden.emit();\n        this._changeDetector.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * Toggles the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({ngbPopover, popoverTitle, disablePopover, popoverClass}: SimpleChanges) {\n    if (popoverClass && this.isOpen()) {\n      this._windowRef !.instance.popoverClass = popoverClass.currentValue;\n    }\n    // close popover if title and content become empty, or disablePopover set to true\n    if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n      this.close();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbPopover, NgbPopoverWindow} from './popover';\nimport {CommonModule} from '@angular/common';\n\nexport {NgbPopover} from './popover';\nexport {NgbPopoverConfig} from './popover-config';\nexport {Placement} from '../util/positioning';\n\n@NgModule({\n  declarations: [NgbPopover, NgbPopoverWindow],\n  exports: [NgbPopover],\n  imports: [CommonModule],\n  entryComponents: [NgbPopoverWindow]\n})\nexport class NgbPopoverModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbProgressbarConfig {\n  max = 100;\n  animated = false;\n  striped = false;\n  textType: string;\n  type: string;\n  showValue = false;\n  height: string;\n}\n","import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation, HostBinding} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbProgressbarConfig} from './progressbar-config';\n\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\n@Component({\n  selector: 'ngb-progressbar',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {class: 'progress'},\n  template: `\n    <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{textType ? ' text-' + textType : ''}}\n    {{animated ? ' progress-bar-animated' : ''}}{{striped ? ' progress-bar-striped' : ''}}\"\n    role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n    [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n      <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getValue() / max | percent}}</span><ng-content></ng-content>\n    </div>\n  `\n})\nexport class NgbProgressbar {\n  private _max: number;\n\n  /**\n   * The maximal value to be displayed in the progress bar.\n   *\n   * Should be a positive number. Will default to 100 otherwise.\n   */\n  @Input()\n  set max(max: number) {\n    this._max = !isNumber(max) || max <= 0 ? 100 : max;\n  }\n\n  get max(): number { return this._max; }\n\n  /**\n   * If `true`, the stripes on the progress bar are animated.\n   *\n   * Takes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\n   */\n  @Input() animated: boolean;\n\n  /**\n   * If `true`, the progress bars will be displayed as striped.\n   */\n  @Input() striped: boolean;\n\n  /**\n   * If `true`, the current percentage will be shown in the `xx%` format.\n   */\n  @Input() showValue: boolean;\n\n  /**\n   * Optional text variant type of the progress bar.\n   *\n   * Supports types based on Bootstrap background color variants, like:\n   *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n   *\n   * @since 5.2.0\n   */\n  @Input() textType: string;\n\n  /**\n   * The type of the progress bar.\n   *\n   * Supports types based on Bootstrap background color variants, like:\n   *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n   */\n  @Input() type: string;\n\n  /**\n   * The current value for the progress bar.\n   *\n   * Should be in the `[0, max]` range.\n   */\n  @Input() value = 0;\n\n  /**\n   * The height of the progress bar.\n   *\n   * Accepts any valid CSS height values, ex. `\"2rem\"`\n   */\n  @Input() @HostBinding('style.height') height: string;\n\n  constructor(config: NgbProgressbarConfig) {\n    this.max = config.max;\n    this.animated = config.animated;\n    this.striped = config.striped;\n    this.textType = config.textType;\n    this.type = config.type;\n    this.showValue = config.showValue;\n    this.height = config.height;\n  }\n\n  getValue() { return getValueInRange(this.value, this.max); }\n\n  getPercentValue() { return 100 * this.getValue() / this.max; }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbProgressbar} from './progressbar';\n\nexport {NgbProgressbar} from './progressbar';\nexport {NgbProgressbarConfig} from './progressbar-config';\n\n@NgModule({declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule]})\nexport class NgbProgressbarModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbRatingConfig {\n  max = 10;\n  readonly = false;\n  resettable = false;\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgbRatingConfig} from './rating-config';\nimport {getValueInRange} from '../util/util';\nimport {Key} from '../util/key';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/**\n * The context for the custom star display template defined in the `starTemplate`.\n */\nexport interface StarTemplateContext {\n  /**\n   * The star fill percentage, an integer in the `[0, 100]` range.\n   */\n  fill: number;\n\n  /**\n   * Index of the star, starts with `0`.\n   */\n  index: number;\n}\n\nconst NGB_RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRating),\n  multi: true\n};\n\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\n@Component({\n  selector: 'ngb-rating',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'd-inline-flex',\n    '[tabindex]': 'disabled ? -1 : 0',\n    'role': 'slider',\n    'aria-valuemin': '0',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuenow]': 'nextRate',\n    '[attr.aria-valuetext]': 'ariaValueText()',\n    '[attr.aria-disabled]': 'readonly ? true : null',\n    '(blur)': 'handleBlur()',\n    '(keydown)': 'handleKeyDown($event)',\n    '(mouseleave)': 'reset()'\n  },\n  template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"isInteractive() ? 'pointer' : 'default'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\" [ngTemplateOutletContext]=\"contexts[index]\">\n        </ng-template>\n      </span>\n    </ng-template>\n  `,\n  providers: [NGB_RATING_VALUE_ACCESSOR]\n})\nexport class NgbRating implements ControlValueAccessor,\n    OnInit, OnChanges {\n  contexts: StarTemplateContext[] = [];\n  disabled = false;\n  nextRate: number;\n\n\n  /**\n   * The maximal rating that can be given.\n   */\n  @Input() max: number;\n\n  /**\n   * The current rating. Could be a decimal value like `3.75`.\n   */\n  @Input() rate: number;\n\n  /**\n   * If `true`, the rating can't be changed.\n   */\n  @Input() readonly: boolean;\n\n  /**\n   * If `true`, the rating can be reset to `0` by mouse clicking currently set rating.\n   */\n  @Input() resettable: boolean;\n\n  /**\n   * The template to override the way each star is displayed.\n   *\n   * Alternatively put an `<ng-template>` as the only child of your `<ngb-rating>` element\n   */\n  @Input() starTemplate: TemplateRef<StarTemplateContext>;\n  @ContentChild(TemplateRef, {static: false}) starTemplateFromContent: TemplateRef<StarTemplateContext>;\n\n  /**\n   * An event emitted when the user is hovering over a given rating.\n   *\n   * Event payload equals to the rating being hovered over.\n   */\n  @Output() hover = new EventEmitter<number>();\n\n  /**\n   * An event emitted when the user stops hovering over a given rating.\n   *\n   * Event payload equals to the rating of the last item being hovered over.\n   */\n  @Output() leave = new EventEmitter<number>();\n\n  /**\n   * An event emitted when the user selects a new rating.\n   *\n   * Event payload equals to the newly selected rating.\n   */\n  @Output() rateChange = new EventEmitter<number>(true);\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(config: NgbRatingConfig, private _changeDetectorRef: ChangeDetectorRef) {\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n\n  ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\n\n  isInteractive(): boolean { return !this.readonly && !this.disabled; }\n\n  enter(value: number): void {\n    if (this.isInteractive()) {\n      this._updateState(value);\n    }\n    this.hover.emit(value);\n  }\n\n  handleBlur() { this.onTouched(); }\n\n  handleClick(value: number) {\n    if (this.isInteractive()) {\n      this.update(this.resettable && this.rate === value ? 0 : value);\n    }\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.ArrowDown:\n      case Key.ArrowLeft:\n        this.update(this.rate - 1);\n        break;\n      case Key.ArrowUp:\n      case Key.ArrowRight:\n        this.update(this.rate + 1);\n        break;\n      case Key.Home:\n        this.update(0);\n        break;\n      case Key.End:\n        this.update(this.max);\n        break;\n      default:\n        return;\n    }\n\n    // note 'return' in default case\n    event.preventDefault();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit(): void {\n    this.contexts = Array.from({length: this.max}, (v, k) => ({fill: 0, index: k}));\n    this._updateState(this.rate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  reset(): void {\n    this.leave.emit(this.nextRate);\n    this._updateState(this.rate);\n  }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  update(value: number, internalChange = true): void {\n    const newRate = getValueInRange(value, this.max, 0);\n    if (this.isInteractive() && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this._updateState(this.rate);\n  }\n\n  writeValue(value) {\n    this.update(value, false);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _updateState(nextValue: number) {\n    this.nextRate = nextValue;\n    this.contexts.forEach(\n        (context, index) => context.fill = Math.round(getValueInRange(nextValue - index, 1, 0) * 100));\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbRating} from './rating';\n\nexport {NgbRating} from './rating';\nexport {NgbRatingConfig} from './rating-config';\n\n@NgModule({declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule]})\nexport class NgbRatingModule {\n}\n","import {isNumber, toInteger} from '../util/util';\n\nexport class NgbTime {\n  hour: number;\n  minute: number;\n  second: number;\n\n  constructor(hour?: number, minute?: number, second?: number) {\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n\n  changeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\n\n  updateHour(hour: number) {\n    if (isNumber(hour)) {\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n    } else {\n      this.hour = NaN;\n    }\n  }\n\n  changeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\n\n  updateMinute(minute: number) {\n    if (isNumber(minute)) {\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n      this.changeHour(Math.floor(minute / 60));\n    } else {\n      this.minute = NaN;\n    }\n  }\n\n  changeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\n\n  updateSecond(second: number) {\n    if (isNumber(second)) {\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\n      this.changeMinute(Math.floor(second / 60));\n    } else {\n      this.second = NaN;\n    }\n  }\n\n  isValid(checkSecs = true) {\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n  }\n\n  toString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTimepickerConfig {\n  meridian = false;\n  spinners = true;\n  seconds = false;\n  hourStep = 1;\n  minuteStep = 1;\n  secondStep = 1;\n  disabled = false;\n  readonlyInputs = false;\n  size: 'small' | 'medium' | 'large' = 'medium';\n}\n","import {Injectable} from '@angular/core';\nimport {NgbTimeStruct} from './ngb-time-struct';\nimport {isInteger} from '../util/util';\n\nexport function NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n  return new NgbTimeStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * @since 2.2.0\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY})\nexport abstract class NgbTimeAdapter<T> {\n  /**\n   * Converts a user-model time of type `T` to an `NgbTimeStruct` for internal use.\n   */\n  abstract fromModel(value: T | null): NgbTimeStruct | null;\n\n  /**\n   * Converts an internal `NgbTimeStruct` time to a user-model time of type `T`.\n   */\n  abstract toModel(time: NgbTimeStruct | null): T | null;\n}\n\n@Injectable()\nexport class NgbTimeStructAdapter extends NgbTimeAdapter<NgbTimeStruct> {\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  fromModel(time: NgbTimeStruct | null): NgbTimeStruct | null {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : <any>null} :\n        null;\n  }\n\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  toModel(time: NgbTimeStruct | null): NgbTimeStruct | null {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : <any>null} :\n        null;\n  }\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayPeriods, TranslationWidth} from '@angular/common';\n\nexport function NGB_TIMEPICKER_I18N_FACTORY(locale) {\n  return new NgbTimepickerI18nDefault(locale);\n}\n\n/**\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_TIMEPICKER_I18N_FACTORY, deps: [LOCALE_ID]})\nexport abstract class NgbTimepickerI18n {\n  /**\n   * Returns the name for the period before midday.\n   */\n  abstract getMorningPeriod(): string;\n\n  /**\n   * Returns the name for the period after midday.\n   */\n  abstract getAfternoonPeriod(): string;\n}\n\n@Injectable()\nexport class NgbTimepickerI18nDefault extends NgbTimepickerI18n {\n  private _periods: [string, string];\n\n  constructor(@Inject(LOCALE_ID) locale: string) {\n    super();\n\n    this._periods = getLocaleDayPeriods(locale, FormStyle.Standalone, TranslationWidth.Narrow);\n  }\n\n  getMorningPeriod(): string { return this._periods[0]; }\n\n  getAfternoonPeriod(): string { return this._periods[1]; }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  forwardRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {isInteger, isNumber, padNumber, toInteger} from '../util/util';\nimport {NgbTime} from './ngb-time';\nimport {NgbTimepickerConfig} from './timepicker-config';\nimport {NgbTimeAdapter} from './ngb-time-adapter';\nimport {NgbTimepickerI18n} from './timepicker-i18n';\n\nconst FILTER_REGEX = /[^0-9]/g;\n\nconst NGB_TIMEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTimepicker),\n  multi: true\n};\n\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\n@Component({\n  selector: 'ngb-timepicker',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./timepicker.scss'],\n  template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\"\n            [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($any($event).target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\"\n            (input)=\"formatInput($any($event).target)\"\n            (keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(-hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($any($event).target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\"\n            (input)=\"formatInput($any($event).target)\"\n            (keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($any($event).target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\"\n            (input)=\"formatInput($any($event).target)\"\n            (keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model && model.hour >= 12; else am\"\n                          i18n=\"@@ngb.timepicker.PM\">{{ i18n.getAfternoonPeriod() }}</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">{{ i18n.getMorningPeriod() }}</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  `,\n  providers: [NGB_TIMEPICKER_VALUE_ACCESSOR]\n})\nexport class NgbTimepicker implements ControlValueAccessor,\n    OnChanges {\n  static ngAcceptInputType_size: string;\n\n  disabled: boolean;\n  model: NgbTime;\n\n  private _hourStep: number;\n  private _minuteStep: number;\n  private _secondStep: number;\n\n  /**\n   * Whether to display 12H or 24H mode.\n   */\n  @Input() meridian: boolean;\n\n  /**\n   * If `true`, the spinners above and below inputs are visible.\n   */\n  @Input() spinners: boolean;\n\n  /**\n   * If `true`, it is possible to select seconds.\n   */\n  @Input() seconds: boolean;\n\n  /**\n   * The number of hours to add/subtract when clicking hour spinners.\n   */\n  @Input()\n  set hourStep(step: number) {\n    this._hourStep = isInteger(step) ? step : this._config.hourStep;\n  }\n\n  get hourStep(): number { return this._hourStep; }\n\n  /**\n   * The number of minutes to add/subtract when clicking minute spinners.\n   */\n  @Input()\n  set minuteStep(step: number) {\n    this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n  }\n\n  get minuteStep(): number { return this._minuteStep; }\n\n  /**\n   * The number of seconds to add/subtract when clicking second spinners.\n   */\n  @Input()\n  set secondStep(step: number) {\n    this._secondStep = isInteger(step) ? step : this._config.secondStep;\n  }\n\n  get secondStep(): number { return this._secondStep; }\n\n  /**\n   * If `true`, the timepicker is readonly and can't be changed.\n   */\n  @Input() readonlyInputs: boolean;\n\n  /**\n   * The size of inputs and buttons.\n   */\n  @Input() size: 'small' | 'medium' | 'large';\n\n  constructor(\n      private readonly _config: NgbTimepickerConfig, private _ngbTimeAdapter: NgbTimeAdapter<any>,\n      private _cd: ChangeDetectorRef, public i18n: NgbTimepickerI18n) {\n    this.meridian = _config.meridian;\n    this.spinners = _config.spinners;\n    this.seconds = _config.seconds;\n    this.hourStep = _config.hourStep;\n    this.minuteStep = _config.minuteStep;\n    this.secondStep = _config.secondStep;\n    this.disabled = _config.disabled;\n    this.readonlyInputs = _config.readonlyInputs;\n    this.size = _config.size;\n  }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  writeValue(value) {\n    const structValue = this._ngbTimeAdapter.fromModel(value);\n    this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n    if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n      this.model.second = 0;\n    }\n    this._cd.markForCheck();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  changeHour(step: number) {\n    this.model.changeHour(step);\n    this.propagateModelChange();\n  }\n\n  changeMinute(step: number) {\n    this.model.changeMinute(step);\n    this.propagateModelChange();\n  }\n\n  changeSecond(step: number) {\n    this.model.changeSecond(step);\n    this.propagateModelChange();\n  }\n\n  updateHour(newVal: string) {\n    const isPM = this.model.hour >= 12;\n    const enteredHour = toInteger(newVal);\n    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n      this.model.updateHour(enteredHour + 12);\n    } else {\n      this.model.updateHour(enteredHour);\n    }\n    this.propagateModelChange();\n  }\n\n  updateMinute(newVal: string) {\n    this.model.updateMinute(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  updateSecond(newVal: string) {\n    this.model.updateSecond(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  toggleMeridian() {\n    if (this.meridian) {\n      this.changeHour(12);\n    }\n  }\n\n  formatInput(input: HTMLInputElement) { input.value = input.value.replace(FILTER_REGEX, ''); }\n\n  formatHour(value?: number) {\n    if (isNumber(value)) {\n      if (this.meridian) {\n        return padNumber(value % 12 === 0 ? 12 : value % 12);\n      } else {\n        return padNumber(value % 24);\n      }\n    } else {\n      return padNumber(NaN);\n    }\n  }\n\n  formatMinSec(value?: number) { return padNumber(isNumber(value) ? value : NaN); }\n\n  get isSmallSize(): boolean { return this.size === 'small'; }\n\n  get isLargeSize(): boolean { return this.size === 'large'; }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n      this.model.second = 0;\n      this.propagateModelChange(false);\n    }\n  }\n\n  private propagateModelChange(touched = true) {\n    if (touched) {\n      this.onTouched();\n    }\n    if (this.model.isValid(this.seconds)) {\n      this.onChange(\n          this._ngbTimeAdapter.toModel({hour: this.model.hour, minute: this.model.minute, second: this.model.second}));\n    } else {\n      this.onChange(this._ngbTimeAdapter.toModel(null));\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTimepicker} from './timepicker';\n\nexport {NgbTimepicker} from './timepicker';\nexport {NgbTimepickerConfig} from './timepicker-config';\nexport {NgbTimeStruct} from './ngb-time-struct';\nexport {NgbTimeAdapter} from './ngb-time-adapter';\nexport {NgbTimepickerI18n} from './timepicker-i18n';\n\n@NgModule({declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule]})\nexport class NgbTimepickerModule {\n}\n","import {Injectable} from '@angular/core';\nimport {NgbConfig} from '../ngb-config';\n\n/**\n * Interface used to type all toast config options. See `NgbToastConfig`.\n *\n * @since 5.0.0\n */\nexport interface NgbToastOptions {\n  /**\n   * Specify if the toast component should emit the `hide()` output\n   * after a certain `delay` in ms.\n   */\n  autohide?: boolean;\n\n  /**\n   * Delay in ms after which the `hide()` output should be emitted.\n   */\n  delay?: number;\n\n  /**\n   * Type of aria-live attribute to be used.\n   *\n   * Could be one of these 2 values (as string):\n   * - `polite` (default)\n   * - `alert`\n   */\n  ariaLive?: 'polite' | 'alert';\n}\n\n/**\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n * and customize the values of its properties in order to provide default values for all the toasts used in the\n * application.\n *\n * @since 5.0.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbToastConfig implements NgbToastOptions {\n  animation: boolean;\n  autohide = true;\n  delay = 500;\n  ariaLive: 'polite' | 'alert' = 'polite';\n\n  constructor(ngbConfig: NgbConfig) { this.animation = ngbConfig.animation; }\n}\n","import {NgbTransitionStartFn} from '../util/transition/ngbTransition';\n\nexport const ngbToastFadeInTransition: NgbTransitionStartFn = ({classList}: HTMLElement) => {\n  classList.remove('hide');\n  classList.add('showing');\n\n  return () => {\n    classList.remove('showing');\n    classList.add('show');\n  };\n};\n\nexport const ngbToastFadeOutTransition: NgbTransitionStartFn = ({classList}: HTMLElement) => {\n  classList.remove('show');\n  return () => { classList.add('hide'); };\n};\n","import {\n  AfterContentInit,\n  Attribute,\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n  ElementRef,\n  NgZone,\n} from '@angular/core';\n\nimport {Observable} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {NgbToastConfig} from './toast-config';\nimport {ngbRunTransition} from '../util/transition/ngbTransition';\nimport {ngbToastFadeInTransition, ngbToastFadeOutTransition} from './toast-transition';\n\n\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * @since 5.0.0\n */\n@Directive({selector: '[ngbToastHeader]'})\nexport class NgbToastHeader {\n}\n\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * @since 5.0.0\n */\n@Component({\n  selector: 'ngb-toast',\n  exportAs: 'ngbToast',\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'role': 'alert',\n    '[attr.aria-live]': 'ariaLive',\n    'aria-atomic': 'true',\n    'class': 'toast',\n    '[class.fade]': 'animation',\n  },\n  template: `\n    <ng-template #headerTpl>\n      <strong class=\"mr-auto\">{{header}}</strong>\n    </ng-template>\n    <ng-template [ngIf]=\"contentHeaderTpl || header\">\n      <div class=\"toast-header\">\n        <ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\"></ng-template>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.toast.close-aria\" (click)=\"hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n    </ng-template>\n    <div class=\"toast-body\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  styleUrls: ['./toast.scss']\n})\nexport class NgbToast implements AfterContentInit,\n    OnChanges {\n  /**\n   * If `true`, toast opening and closing will be animated.\n   *\n   * Animation is triggered only when the `.hide()` or `.show()` functions are called\n   *\n   * @since 8.0.0\n   */\n  @Input() animation: boolean;\n\n  private _timeoutID;\n\n  /**\n   * Delay after which the toast will hide (ms).\n   * default: `500` (ms) (inherited from NgbToastConfig)\n   */\n  @Input() delay: number;\n\n  /**\n   * Auto hide the toast after a delay in ms.\n   * default: `true` (inherited from NgbToastConfig)\n   */\n  @Input() autohide: boolean;\n\n  /**\n   * Text to be used as toast's header.\n   * Ignored if a ContentChild template is specified at the same time.\n   */\n  @Input() header: string;\n\n  /**\n   * A template like `<ng-template ngbToastHeader></ng-template>` can be\n   * used in the projected content to allow markup usage.\n   */\n  @ContentChild(NgbToastHeader, {read: TemplateRef, static: true}) contentHeaderTpl: TemplateRef<any>| null = null;\n\n  /**\n   * An event fired after the animation triggered by calling `.show()` method has finished.\n   *\n   * @since 8.0.0\n   */\n  @Output() shown = new EventEmitter<void>();\n\n  /**\n   * An event fired after the animation triggered by calling `.hide()` method has finished.\n   *\n   * It can only occur in 2 different scenarios:\n   * - `autohide` timeout fires\n   * - user clicks on a closing cross\n   *\n   * Additionally this output is purely informative. The toast won't be removed from DOM automatically, it's up\n   * to the user to take care of that.\n   *\n   * @since 8.0.0\n   */\n  @Output() hidden = new EventEmitter<void>();\n\n  constructor(\n      @Attribute('aria-live') public ariaLive: string, config: NgbToastConfig, private _zone: NgZone,\n      private _element: ElementRef) {\n    if (this.ariaLive == null) {\n      this.ariaLive = config.ariaLive;\n    }\n    this.delay = config.delay;\n    this.autohide = config.autohide;\n    this.animation = config.animation;\n  }\n\n  ngAfterContentInit() {\n    this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      this._init();\n      this.show();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('autohide' in changes) {\n      this._clearTimeout();\n      this._init();\n    }\n  }\n\n  /**\n   * Triggers toast closing programmatically.\n   *\n   * The returned observable will emit and be completed once the closing transition has finished.\n   * If the animations are turned off this happens synchronously.\n   *\n   * Alternatively you could listen or subscribe to the `(hidden)` output\n   *\n   * @since 8.0.0\n   */\n  hide(): Observable<void> {\n    this._clearTimeout();\n    const transition = ngbRunTransition(\n        this._element.nativeElement, ngbToastFadeOutTransition, {animation: this.animation, runningTransition: 'stop'});\n    transition.subscribe(() => { this.hidden.emit(); });\n    return transition;\n  }\n\n  /**\n   * Triggers toast opening programmatically.\n   *\n   * The returned observable will emit and be completed once the opening transition has finished.\n   * If the animations are turned off this happens synchronously.\n   *\n   * Alternatively you could listen or subscribe to the `(shown)` output\n   *\n   * @since 8.0.0\n   */\n  show(): Observable<void> {\n    const transition = ngbRunTransition(this._element.nativeElement, ngbToastFadeInTransition, {\n      animation: this.animation,\n      runningTransition: 'continue',\n    });\n    transition.subscribe(() => { this.shown.emit(); });\n    return transition;\n  }\n\n  private _init() {\n    if (this.autohide && !this._timeoutID) {\n      this._timeoutID = setTimeout(() => this.hide(), this.delay);\n    }\n  }\n\n  private _clearTimeout() {\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {NgbToast, NgbToastHeader} from './toast';\n\nexport {NgbToast, NgbToastHeader} from './toast';\nexport {NgbToastConfig, NgbToastOptions} from './toast-config';\n\n@NgModule({declarations: [NgbToast, NgbToastHeader], imports: [CommonModule], exports: [NgbToast, NgbToastHeader]})\nexport class NgbToastModule {\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\nimport {NgbConfig} from '../ngb-config';\n\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTooltipConfig {\n  animation: boolean;\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'auto';\n  triggers = 'hover focus';\n  container: string;\n  disableTooltip = false;\n  tooltipClass: string;\n  openDelay = 0;\n  closeDelay = 0;\n\n  constructor(ngbConfig: NgbConfig) { this.animation = ngbConfig.animation; }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  ApplicationRef,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\n\nimport {NgbTooltipConfig} from './tooltip-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-tooltip-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class]': '\"tooltip\" + (tooltipClass ? \" \" + tooltipClass : \"\")',\n    '[class.fade]': 'animation',\n    'role': 'tooltip',\n    '[id]': 'id'\n  },\n  template: `<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`,\n  styleUrls: ['./tooltip.scss']\n})\nexport class NgbTooltipWindow {\n  @Input() animation: boolean;\n  @Input() id: string;\n  @Input() tooltipClass: string;\n}\n\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\n@Directive({selector: '[ngbTooltip]', exportAs: 'ngbTooltip'})\nexport class NgbTooltip implements OnInit, OnDestroy, OnChanges {\n  static ngAcceptInputType_autoClose: boolean | string;\n\n  /**\n   * If `true`, tooltip opening and closing will be animated.\n   *\n   * @since 8.0.0\n   */\n  @Input() animation: boolean;\n\n  /**\n   * Indicates whether the tooltip should be closed on `Escape` key and inside/outside clicks:\n   *\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n   * as well as `Escape` presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The preferred placement of the tooltip.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"auto\"` (same as the sequence above).\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * Specifies events that should trigger the tooltip.\n   *\n   * Supports a space separated list of event names.\n   * For more details see the [triggers demo](#/components/tooltip/examples#triggers).\n   */\n  @Input() triggers: string;\n\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, tooltip is disabled and won't be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disableTooltip: boolean;\n\n  /**\n   * An optional class applied to the tooltip window element.\n   *\n   * @since 3.2.0\n   */\n  @Input() tooltipClass: string;\n\n  /**\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() openDelay: number;\n\n  /**\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() closeDelay: number;\n\n  /**\n   * An event emitted when the tooltip opening animation has finished. Contains no payload.\n   */\n  @Output() shown = new EventEmitter();\n\n  /**\n   * An event emitted when the tooltip closing animation has finished. Contains no payload.\n   */\n  @Output() hidden = new EventEmitter();\n\n  private _ngbTooltip: string | TemplateRef<any>| null | undefined;\n  private _ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n  private _popupService: PopupService<NgbTooltipWindow>;\n  private _windowRef: ComponentRef<NgbTooltipWindow>| null = null;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbTooltipConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      applicationRef: ApplicationRef) {\n    this.animation = config.animation;\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disableTooltip = config.disableTooltip;\n    this.tooltipClass = config.tooltipClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService<NgbTooltipWindow>(\n        NgbTooltipWindow, injector, viewContainerRef, _renderer, this._ngZone, componentFactoryResolver,\n        applicationRef);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body', 'bs-tooltip');\n      }\n    });\n  }\n\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n   *\n   * If the content if falsy, the tooltip won't open.\n   */\n  @Input()\n  set ngbTooltip(value: string | TemplateRef<any>| null | undefined) {\n    this._ngbTooltip = value;\n    if (!value && this._windowRef) {\n      this.close();\n    }\n  }\n\n  get ngbTooltip() { return this._ngbTooltip; }\n\n  /**\n   * Opens the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the tooltip template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n      const {windowRef, transition$} = this._popupService.open(this._ngbTooltip, context, this.animation);\n      this._windowRef = windowRef;\n      this._windowRef.instance.animation = this.animation;\n      this._windowRef.instance.tooltipClass = this.tooltipClass;\n      this._windowRef.instance.id = this._ngbTooltipWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n      this._windowRef.changeDetectorRef.detectChanges();\n\n      // We need to mark for check, because tooltip won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the tooltip from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\n          [this._windowRef.location.nativeElement]);\n\n      transition$.subscribe(() => this.shown.emit());\n    }\n  }\n\n  /**\n   * Closes the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n  close(): void {\n    if (this._windowRef != null) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close(this.animation).subscribe(() => {\n        this._windowRef = null;\n        this.hidden.emit();\n        this._changeDetector.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * Toggles the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({tooltipClass}: SimpleChanges) {\n    if (tooltipClass && this.isOpen()) {\n      this._windowRef !.instance.tooltipClass = tooltipClass.currentValue;\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbTooltip, NgbTooltipWindow} from './tooltip';\n\nexport {NgbTooltipConfig} from './tooltip-config';\nexport {NgbTooltip} from './tooltip';\nexport {Placement} from '../util/positioning';\n\n@NgModule({declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow]})\nexport class NgbTooltipModule {\n}\n","import {Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport {regExpEscape, toString} from '../util/util';\n\n/**\n * A component that helps with text highlighting.\n *\n * If splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\n@Component({\n  selector: 'ngb-highlight',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\n      `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` +\n      `</ng-template>`,  // template needs to be formatted in a certain way so we don't add empty text nodes\n  styleUrls: ['./highlight.scss']\n})\nexport class NgbHighlight implements OnChanges {\n  parts: string[];\n\n  /**\n   * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n   */\n  @Input() highlightClass = 'ngb-highlight';\n\n  /**\n   * The text highlighting is added to.\n   *\n   * If the `term` is found inside this text, it will be highlighted.\n   * If the `term` contains array then all the items from it will be highlighted inside the text.\n   */\n  @Input() result?: string | null;\n\n  /**\n   * The term or array of terms to be highlighted.\n   * Since version `v4.2.0` term could be a `string[]`\n   */\n  @Input() term: string | readonly string[];\n\n  ngOnChanges(changes: SimpleChanges) {\n    const result = toString(this.result);\n\n    const terms = Array.isArray(this.term) ? this.term : [this.term];\n    const escapedTerms = terms.map(term => regExpEscape(toString(term))).filter(term => term);\n\n    this.parts = escapedTerms.length ? result.split(new RegExp(`(${escapedTerms.join('|')})`, 'gmi')) : [result];\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewEncapsulation} from '@angular/core';\n\nimport {toString} from '../util/util';\n\n/**\n * The context for the typeahead result template in case you want to override the default one.\n */\nexport interface ResultTemplateContext {\n  /**\n   * Your typeahead result item.\n   */\n  result: any;\n\n  /**\n   * Search term from the `<input>` used to get current result.\n   */\n  term: string;\n}\n\n@Component({\n  selector: 'ngb-typeahead-window',\n  exportAs: 'ngbTypeaheadWindow',\n  encapsulation: ViewEncapsulation.None,\n  host: {'(mousedown)': '$event.preventDefault()', 'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id'},\n  template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  `\n})\nexport class NgbTypeaheadWindow implements OnInit {\n  activeIdx = 0;\n\n  /**\n   *  The id for the typeahead window. The id should be unique and the same\n   *  as the associated typeahead's id.\n   */\n  @Input() id: string;\n\n  /**\n   * Flag indicating if the first row should be active initially\n   */\n  @Input() focusFirst = true;\n\n  /**\n   * Typeahead match results to be displayed\n   */\n  @Input() results;\n\n  /**\n   * Search term used to get current results\n   */\n  @Input() term: string;\n\n  /**\n   * A function used to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() formatter = toString;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Event raised when user selects a particular result row\n   */\n  @Output('select') selectEvent = new EventEmitter();\n\n  @Output('activeChange') activeChangeEvent = new EventEmitter();\n\n  hasActive() { return this.activeIdx > -1 && this.activeIdx < this.results.length; }\n\n  getActive() { return this.results[this.activeIdx]; }\n\n  markActive(activeIdx: number) {\n    this.activeIdx = activeIdx;\n    this._activeChanged();\n  }\n\n  next() {\n    if (this.activeIdx === this.results.length - 1) {\n      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n    } else {\n      this.activeIdx++;\n    }\n    this._activeChanged();\n  }\n\n  prev() {\n    if (this.activeIdx < 0) {\n      this.activeIdx = this.results.length - 1;\n    } else if (this.activeIdx === 0) {\n      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n    } else {\n      this.activeIdx--;\n    }\n    this._activeChanged();\n  }\n\n  resetActive() {\n    this.activeIdx = this.focusFirst ? 0 : -1;\n    this._activeChanged();\n  }\n\n  select(item) { this.selectEvent.emit(item); }\n\n  ngOnInit() { this.resetActive(); }\n\n  private _activeChanged() {\n    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n  }\n}\n","import {Injectable, Inject, InjectionToken, OnDestroy} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\n\n// usefulness (and default value) of delay documented in Material's CDK\n// https://github.com/angular/material2/blob/6405da9b8e8532a7e5c854c920ee1815c275d734/src/cdk/a11y/live-announcer/live-announcer.ts#L50\nexport type ARIA_LIVE_DELAY_TYPE = number | null;\nexport const ARIA_LIVE_DELAY = new InjectionToken<ARIA_LIVE_DELAY_TYPE>(\n    'live announcer delay', {providedIn: 'root', factory: ARIA_LIVE_DELAY_FACTORY});\nexport function ARIA_LIVE_DELAY_FACTORY(): number {\n  return 100;\n}\n\n\nfunction getLiveElement(document: any, lazyCreate = false): HTMLElement | null {\n  let element = document.body.querySelector('#ngb-live') as HTMLElement;\n\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n\n    element.classList.add('sr-only');\n\n    document.body.appendChild(element);\n  }\n\n  return element;\n}\n\n\n\n@Injectable({providedIn: 'root'})\nexport class Live implements OnDestroy {\n  constructor(@Inject(DOCUMENT) private _document: any, @Inject(ARIA_LIVE_DELAY) private _delay: any) {}\n\n  ngOnDestroy() {\n    const element = getLiveElement(this._document);\n    if (element) {\n      // if exists, it will always be attached to the <body>\n      element.parentElement !.removeChild(element);\n    }\n  }\n\n  say(message: string) {\n    const element = getLiveElement(this._document, true);\n    const delay = this._delay;\n\n    if (element != null) {\n      element.textContent = '';\n      const setText = () => element.textContent = message;\n      if (delay === null) {\n        setText();\n      } else {\n        setTimeout(setText, delay);\n      }\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTypeaheadConfig {\n  container;\n  editable = true;\n  focusFirst = true;\n  showHint = false;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n  ApplicationRef\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\nimport {BehaviorSubject, fromEvent, Observable, Subject, Subscription} from 'rxjs';\nimport {map, switchMap, tap} from 'rxjs/operators';\n\nimport {Live} from '../util/accessibility/live';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {Key} from '../util/key';\nimport {PopupService} from '../util/popup';\nimport {PlacementArray, positionElements} from '../util/positioning';\nimport {isDefined, toString} from '../util/util';\n\nimport {NgbTypeaheadConfig} from './typeahead-config';\nimport {NgbTypeaheadWindow, ResultTemplateContext} from './typeahead-window';\n\n\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTypeahead),\n  multi: true\n};\n\n/**\n * An event emitted right before an item is selected from the result list.\n */\nexport interface NgbTypeaheadSelectItemEvent<T = any> {\n  /**\n   * The item from the result list about to be selected.\n   */\n  item: T;\n\n  /**\n   * Calling this function will prevent item selection from happening.\n   */\n  preventDefault: () => void;\n}\n\nlet nextWindowId = 0;\n\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\n@Directive({\n  selector: 'input[ngbTypeahead]',\n  exportAs: 'ngbTypeahead',\n  host: {\n    '(blur)': 'handleBlur()',\n    '[class.open]': 'isPopupOpen()',\n    '(keydown)': 'handleKeyDown($event)',\n    '[autocomplete]': 'autocomplete',\n    'autocapitalize': 'off',\n    'autocorrect': 'off',\n    'role': 'combobox',\n    'aria-multiline': 'false',\n    '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n    '[attr.aria-activedescendant]': 'activeDescendant',\n    '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n    '[attr.aria-expanded]': 'isPopupOpen()'\n  },\n  providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n})\nexport class NgbTypeahead implements ControlValueAccessor,\n    OnInit, OnDestroy {\n  private _popupService: PopupService<NgbTypeaheadWindow>;\n  private _subscription: Subscription | null = null;\n  private _closed$ = new Subject();\n  private _inputValueBackup: string | null = null;\n  private _valueChanges: Observable<string>;\n  private _resubscribeTypeahead: BehaviorSubject<any>;\n  private _windowRef: ComponentRef<NgbTypeaheadWindow>| null = null;\n  private _zoneSubscription: any;\n\n  /**\n   * The value for the `autocomplete` attribute for the `<input>` element.\n   *\n   * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n   *\n   * @since 2.1.0\n   */\n  @Input() autocomplete = 'off';\n\n  /**\n   * A selector specifying the element the typeahead popup will be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, model values will not be restricted only to items selected from the popup.\n   */\n  @Input() editable: boolean;\n\n  /**\n   * If `true`, the first item in the result list will always stay focused while typing.\n   */\n  @Input() focusFirst: boolean;\n\n  /**\n   * The function that converts an item from the result list to a `string` to display in the `<input>` field.\n   *\n   * It is called when the user selects something in the popup or the model value changes, so the input needs to\n   * be updated.\n   */\n  @Input() inputFormatter: (item: any) => string;\n\n  /**\n   * The function that converts a stream of text values from the `<input>` element to the stream of the array of items\n   * to display in the typeahead popup.\n   *\n   * If the resulting observable emits a non-empty array - the popup will be shown. If it emits an empty array - the\n   * popup will be closed.\n   *\n   * See the [basic example](#/components/typeahead/examples#basic) for more details.\n   *\n   * Note that the `this` argument is `undefined` so you need to explicitly bind it to a desired \"this\" target.\n   */\n  @Input() ngbTypeahead: (text: Observable<string>) => Observable<readonly any[]>;\n\n  /**\n   * The function that converts an item from the result list to a `string` to display in the popup.\n   *\n   * Must be provided, if your `ngbTypeahead` returns something other than `Observable<string[]>`.\n   *\n   * Alternatively for more complex markup in the popup you should use `resultTemplate`.\n   */\n  @Input() resultFormatter: (item: any) => string;\n\n  /**\n   * The template to override the way resulting items are displayed in the popup.\n   *\n   * See the [ResultTemplateContext](#/components/typeahead/api#ResultTemplateContext) for the template context.\n   *\n   * Also see the [template for results demo](#/components/typeahead/examples#template) for more details.\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * If `true`, will show the hint in the `<input>` when an item in the result list matches.\n   */\n  @Input() showHint: boolean;\n\n  /**\n   * The preferred placement of the typeahead.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray = 'bottom-left';\n\n  /**\n   * An event emitted right before an item is selected from the result list.\n   *\n   * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n   */\n  @Output() selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\n\n  activeDescendant: string | null = null;\n  popupId = `ngb-typeahead-${nextWindowId++}`;\n\n  private _onTouched = () => {};\n  private _onChange = (_: any) => {};\n\n  constructor(\n      private _elementRef: ElementRef<HTMLInputElement>, viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, injector: Injector, componentFactoryResolver: ComponentFactoryResolver,\n      config: NgbTypeaheadConfig, ngZone: NgZone, private _live: Live, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone, private _changeDetector: ChangeDetectorRef, applicationRef: ApplicationRef) {\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n    this.placement = config.placement;\n\n    this._valueChanges = fromEvent<Event>(_elementRef.nativeElement, 'input')\n                             .pipe(map($event => ($event.target as HTMLInputElement).value));\n\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\n        NgbTypeaheadWindow, injector, viewContainerRef, _renderer, this._ngZone, componentFactoryResolver,\n        applicationRef);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this.isPopupOpen()) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef !.location.nativeElement, this.placement,\n            this.container === 'body');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    const inputValues$ = this._valueChanges.pipe(tap(value => {\n      this._inputValueBackup = this.showHint ? value : null;\n      this._onChange(this.editable ? value : undefined);\n    }));\n    const results$ = inputValues$.pipe(this.ngbTypeahead);\n    const userInput$ = this._resubscribeTypeahead.pipe(switchMap(() => results$));\n    this._subscription = this._subscribeToUserInput(userInput$);\n  }\n\n  ngOnDestroy(): void {\n    this._closePopup();\n    this._unsubscribeFromUserInput();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  writeValue(value) {\n    this._writeInputValue(this._formatItemForInput(value));\n    if (this.showHint) {\n      this._inputValueBackup = value;\n    }\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  /**\n   * Dismisses typeahead popup window\n   */\n  dismissPopup() {\n    if (this.isPopupOpen()) {\n      this._resubscribeTypeahead.next(null);\n      this._closePopup();\n      if (this.showHint && this._inputValueBackup !== null) {\n        this._writeInputValue(this._inputValueBackup);\n      }\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Returns true if the typeahead popup window is displayed\n   */\n  isPopupOpen() { return this._windowRef != null; }\n\n  handleBlur() {\n    this._resubscribeTypeahead.next(null);\n    this._onTouched();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this.isPopupOpen()) {\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.ArrowDown:\n        event.preventDefault();\n        this._windowRef !.instance.next();\n        this._showHint();\n        break;\n      case Key.ArrowUp:\n        event.preventDefault();\n        this._windowRef !.instance.prev();\n        this._showHint();\n        break;\n      case Key.Enter:\n      case Key.Tab:\n        const result = this._windowRef !.instance.getActive();\n        if (isDefined(result)) {\n          event.preventDefault();\n          event.stopPropagation();\n          this._selectResult(result);\n        }\n        this._closePopup();\n        break;\n    }\n  }\n\n  private _openPopup() {\n    if (!this.isPopupOpen()) {\n      this._inputValueBackup = this._elementRef.nativeElement.value;\n      const {windowRef} = this._popupService.open();\n      this._windowRef = windowRef;\n      this._windowRef.instance.id = this.popupId;\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\n      this._windowRef.instance.activeChangeEvent.subscribe((activeId: string) => this.activeDescendant = activeId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      this._changeDetector.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$,\n          [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\n    }\n  }\n\n  private _closePopup() {\n    this._popupService.close().subscribe(() => {\n      this._closed$.next();\n      this._windowRef = null;\n      this.activeDescendant = null;\n    });\n  }\n\n  private _selectResult(result: any) {\n    let defaultPrevented = false;\n    this.selectItem.emit({item: result, preventDefault: () => { defaultPrevented = true; }});\n    this._resubscribeTypeahead.next(null);\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n      this._onChange(result);\n    }\n  }\n\n  private _selectResultClosePopup(result: any) {\n    this._selectResult(result);\n    this._closePopup();\n  }\n\n  private _showHint() {\n    if (this.showHint && this._windowRef?.instance.hasActive() && this._inputValueBackup != null) {\n      const userInputLowerCase = this._inputValueBackup.toLowerCase();\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n        this._elementRef.nativeElement['setSelectionRange'].apply(\n            this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n      } else {\n        this._writeInputValue(formattedVal);\n      }\n    }\n  }\n\n  private _formatItemForInput(item: any): string {\n    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n\n  private _writeInputValue(value: string): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n  }\n\n  private _subscribeToUserInput(userInput$: Observable<readonly any[]>): Subscription {\n    return userInput$.subscribe((results) => {\n      if (!results || results.length === 0) {\n        this._closePopup();\n      } else {\n        this._openPopup();\n        this._windowRef !.instance.focusFirst = this.focusFirst;\n        this._windowRef !.instance.results = results;\n        this._windowRef !.instance.term = this._elementRef.nativeElement.value;\n        if (this.resultFormatter) {\n          this._windowRef !.instance.formatter = this.resultFormatter;\n        }\n        if (this.resultTemplate) {\n          this._windowRef !.instance.resultTemplate = this.resultTemplate;\n        }\n        this._windowRef !.instance.resetActive();\n\n        // The observable stream we are subscribing to might have async steps\n        // and if a component containing typeahead is using the OnPush strategy\n        // the change detection turn wouldn't be invoked automatically.\n        this._windowRef !.changeDetectorRef.detectChanges();\n\n        this._showHint();\n      }\n\n      // live announcer\n      const count = results ? results.length : 0;\n      this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n    });\n  }\n\n  private _unsubscribeFromUserInput() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n    this._subscription = null;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbHighlight} from './highlight';\nimport {NgbTypeaheadWindow} from './typeahead-window';\nimport {NgbTypeahead} from './typeahead';\n\nexport {NgbHighlight} from './highlight';\nexport {NgbTypeaheadWindow} from './typeahead-window';\nexport {NgbTypeaheadConfig} from './typeahead-config';\nexport {NgbTypeahead, NgbTypeaheadSelectItemEvent} from './typeahead';\n\n@NgModule({\n  declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n  exports: [NgbTypeahead, NgbHighlight],\n  imports: [CommonModule],\n  entryComponents: [NgbTypeaheadWindow]\n})\nexport class NgbTypeaheadModule {\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbAccordionModule} from './accordion/accordion.module';\nimport {NgbAlertModule} from './alert/alert.module';\nimport {NgbButtonsModule} from './buttons/buttons.module';\nimport {NgbCarouselModule} from './carousel/carousel.module';\nimport {NgbCollapseModule} from './collapse/collapse.module';\nimport {NgbDatepickerModule} from './datepicker/datepicker.module';\nimport {NgbDropdownModule} from './dropdown/dropdown.module';\nimport {NgbModalModule} from './modal/modal.module';\nimport {NgbNavModule} from './nav/nav.module';\nimport {NgbPaginationModule} from './pagination/pagination.module';\nimport {NgbPopoverModule} from './popover/popover.module';\nimport {NgbProgressbarModule} from './progressbar/progressbar.module';\nimport {NgbRatingModule} from './rating/rating.module';\nimport {NgbTimepickerModule} from './timepicker/timepicker.module';\nimport {NgbToastModule} from './toast/toast.module';\nimport {NgbTooltipModule} from './tooltip/tooltip.module';\nimport {NgbTypeaheadModule} from './typeahead/typeahead.module';\n\n\n\nexport {\n  NgbAccordion,\n  NgbAccordionConfig,\n  NgbAccordionModule,\n  NgbPanel,\n  NgbPanelChangeEvent,\n  NgbPanelContent,\n  NgbPanelHeader,\n  NgbPanelHeaderContext,\n  NgbPanelTitle,\n  NgbPanelToggle\n} from './accordion/accordion.module';\nexport {NgbAlert, NgbAlertConfig, NgbAlertModule} from './alert/alert.module';\nexport {NgbButtonLabel, NgbButtonsModule, NgbCheckBox, NgbRadio, NgbRadioGroup} from './buttons/buttons.module';\nexport {\n  NgbCarousel,\n  NgbCarouselConfig,\n  NgbCarouselModule,\n  NgbSlide,\n  NgbSlideEvent,\n  NgbSlideEventDirection,\n  NgbSlideEventSource\n} from './carousel/carousel.module';\nexport {NgbCollapse, NgbCollapseConfig, NgbCollapseModule} from './collapse/collapse.module';\nexport {\n  NgbCalendar,\n  NgbCalendarGregorian,\n  NgbCalendarHebrew,\n  NgbCalendarIslamicCivil,\n  NgbCalendarIslamicUmalqura,\n  NgbCalendarPersian,\n  NgbDate,\n  NgbDateAdapter,\n  NgbDateNativeAdapter,\n  NgbDateNativeUTCAdapter,\n  NgbDateParserFormatter,\n  NgbDatepicker,\n  NgbDatepickerConfig,\n  NgbInputDatepickerConfig,\n  NgbDatepickerContent,\n  NgbDatepickerI18n,\n  NgbDatepickerI18nHebrew,\n  NgbDatepickerKeyboardService,\n  NgbDatepickerModule,\n  NgbDatepickerMonth,\n  NgbDatepickerNavigateEvent,\n  NgbDatepickerState,\n  NgbDateStruct,\n  NgbInputDatepicker,\n  NgbPeriod\n} from './datepicker/datepicker.module';\nexport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownConfig,\n  NgbDropdownItem,\n  NgbDropdownMenu,\n  NgbDropdownModule,\n  NgbDropdownToggle,\n  NgbNavbar\n} from './dropdown/dropdown.module';\nexport {\n  ModalDismissReasons,\n  NgbActiveModal,\n  NgbModal,\n  NgbModalConfig,\n  NgbModalModule,\n  NgbModalOptions,\n  NgbModalRef\n} from './modal/modal.module';\nexport {\n  NgbNavChangeEvent,\n  NgbNavConfig,\n  NgbNav,\n  NgbNavContent,\n  NgbNavContentContext,\n  NgbNavItem,\n  NgbNavLink,\n  NgbNavModule,\n  NgbNavOutlet,\n  NgbNavPane\n} from './nav/nav.module';\nexport {\n  NgbPagination,\n  NgbPaginationConfig,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationModule,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination/pagination.module';\nexport {NgbPopover, NgbPopoverConfig, NgbPopoverModule} from './popover/popover.module';\nexport {NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule} from './progressbar/progressbar.module';\nexport {NgbRating, NgbRatingConfig, NgbRatingModule} from './rating/rating.module';\nexport {\n  NgbTimeAdapter,\n  NgbTimepickerI18n,\n  NgbTimepicker,\n  NgbTimepickerConfig,\n  NgbTimepickerModule,\n  NgbTimeStruct\n} from './timepicker/timepicker.module';\nexport {NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule} from './toast/toast.module';\nexport {NgbTooltip, NgbTooltipConfig, NgbTooltipModule} from './tooltip/tooltip.module';\nexport {\n  NgbHighlight,\n  NgbTypeahead,\n  NgbTypeaheadConfig,\n  NgbTypeaheadModule,\n  NgbTypeaheadSelectItemEvent\n} from './typeahead/typeahead.module';\nexport {Placement} from './util/positioning';\n\nexport {NgbConfig} from './ngb-config';\n\n\nconst NGB_MODULES = [\n  NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n  NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule,\n  NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule\n];\n\n@NgModule({imports: NGB_MODULES, exports: NGB_MODULES})\nexport class NgbModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {NGB_CAROUSEL_DIRECTIVES as ɵa} from './carousel/carousel';\nexport {NGB_DATEPICKER_DATE_ADAPTER_FACTORY as ɵi,NgbDateStructAdapter as ɵj} from './datepicker/adapters/ngb-date-adapter';\nexport {NGB_DATEPICKER_VALUE_ACCESSOR as ɵb} from './datepicker/datepicker';\nexport {NgbDatepickerDayView as ɵd} from './datepicker/datepicker-day-view';\nexport {NGB_DATEPICKER_18N_FACTORY as ɵg,NgbDatepickerI18nDefault as ɵh} from './datepicker/datepicker-i18n';\nexport {NgbDatepickerNavigation as ɵe} from './datepicker/datepicker-navigation';\nexport {NgbDatepickerNavigationSelect as ɵf} from './datepicker/datepicker-navigation-select';\nexport {NgbDatepickerService as ɵt} from './datepicker/datepicker-service';\nexport {NgbCalendarHijri as ɵbb} from './datepicker/hijri/ngb-calendar-hijri';\nexport {NGB_DATEPICKER_CALENDAR_FACTORY as ɵc} from './datepicker/ngb-calendar';\nexport {NGB_DATEPICKER_PARSER_FORMATTER_FACTORY as ɵk,NgbDateISOParserFormatter as ɵl} from './datepicker/ngb-date-parser-formatter';\nexport {NgbModalBackdrop as ɵu} from './modal/modal-backdrop';\nexport {NgbModalStack as ɵw} from './modal/modal-stack';\nexport {NgbModalWindow as ɵv} from './modal/modal-window';\nexport {NgbPopoverWindow as ɵm} from './popover/popover';\nexport {NGB_DATEPICKER_TIME_ADAPTER_FACTORY as ɵn,NgbTimeStructAdapter as ɵo} from './timepicker/ngb-time-adapter';\nexport {NGB_TIMEPICKER_I18N_FACTORY as ɵp,NgbTimepickerI18nDefault as ɵq} from './timepicker/timepicker-i18n';\nexport {NgbTooltipWindow as ɵr} from './tooltip/tooltip';\nexport {NgbTypeaheadWindow as ɵs} from './typeahead/typeahead-window';\nexport {ARIA_LIVE_DELAY as ɵy,ARIA_LIVE_DELAY_FACTORY as ɵz,Live as ɵba} from './util/accessibility/live';\nexport {ContentRef as ɵbc} from './util/popup';\nexport {ScrollBar as ɵx} from './util/scrollbar';"]},"metadata":{},"sourceType":"module"}