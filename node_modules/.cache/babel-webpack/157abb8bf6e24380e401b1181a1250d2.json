{"ast":null,"code":"import { FormControl } from \"@angular/forms\";\nimport { map, startWith } from 'rxjs/operators';\nimport { MatTable } from \"@angular/material/table\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/form-field\";\nimport * as i2 from \"@angular/material/input\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/autocomplete\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/chips\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/table\";\nimport * as i11 from \"@angular/material/core\";\n\nfunction PrescriptionComponent_mat_option_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 45, 46);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r15 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r15.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", option_r15.name, \" \");\n  }\n}\n\nfunction PrescriptionComponent_mat_chip_39_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 49);\n    i0.ɵɵtext(1, \"cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PrescriptionComponent_mat_chip_39_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-chip\", 47);\n    i0.ɵɵlistener(\"removed\", function PrescriptionComponent_mat_chip_39_Template_mat_chip_removed_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const symptom_r17 = ctx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.remove(symptom_r17);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, PrescriptionComponent_mat_chip_39_mat_icon_2_Template, 2, 0, \"mat-icon\", 48);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const symptom_r17 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"selectable\", ctx_r3.selectable)(\"removable\", ctx_r3.removable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", symptom_r17.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.removable);\n  }\n}\n\nfunction PrescriptionComponent_mat_option_73_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 45);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const frequency_r21 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", frequency_r21);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", frequency_r21, \" \");\n  }\n}\n\nfunction PrescriptionComponent_th_80_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 50);\n    i0.ɵɵtext(1, \" Title \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PrescriptionComponent_td_81_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 51);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r22 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r22.title, \" \");\n  }\n}\n\nfunction PrescriptionComponent_th_83_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 50);\n    i0.ɵɵtext(1, \" Brand \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PrescriptionComponent_td_84_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 51);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r23 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r23.brand, \" \");\n  }\n}\n\nfunction PrescriptionComponent_th_86_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 50);\n    i0.ɵɵtext(1, \" Weight \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PrescriptionComponent_td_87_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 51);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r24 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r24.weight, \" \");\n  }\n}\n\nfunction PrescriptionComponent_th_89_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 50);\n    i0.ɵɵtext(1, \" Frequency \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PrescriptionComponent_td_90_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 51);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r25 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r25.frequency, \" \");\n  }\n}\n\nfunction PrescriptionComponent_tr_91_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 52);\n  }\n}\n\nfunction PrescriptionComponent_tr_92_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 53);\n  }\n}\n\nexport class PrescriptionComponent {\n  constructor() {\n    this.ELEMENT_DATA = [];\n    this.displayedColumns = ['title', 'brand', 'weight', 'frequency'];\n    this.dataSource = this.ELEMENT_DATA;\n    this.patient = {\n      name: 'Faisal Saleh',\n      age: 45,\n      mobile: 923032424141\n    };\n    this.frequencies = [6, 12, 24];\n    this.medNameControl = new FormControl();\n    this.medWeightControl = new FormControl();\n    this.medFrequencyControl = new FormControl();\n    this.myControl = new FormControl();\n    this.visible = true;\n    this.selectable = true;\n    this.removable = true;\n    this.addOnBlur = true;\n    this.symptoms = [{\n      name: 'Headache'\n    }, {\n      name: 'Fever'\n    }, {\n      name: 'Sneezing'\n    }, {\n      name: 'Itching'\n    }, {\n      name: 'Red Skin'\n    }, {\n      name: 'Watery Eyes'\n    }, {\n      name: 'Cough'\n    }, {\n      name: 'Joint Pain'\n    }, {\n      name: 'Muscular Pain'\n    }];\n    this.selectedSymptoms = [];\n  }\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), map(value => this._filter(value)));\n  }\n\n  addMedicine() {\n    var _a, _b;\n\n    let medicine = {\n      title: '',\n      brand: '',\n      weight: 0,\n      frequency: 0\n    };\n    let name, formula, frequency;\n    let weight;\n    name = this.medNameControl.value;\n    formula = 'N/A';\n    weight = this.medWeightControl.value;\n    frequency = (_a = document.getElementById('fr')) === null || _a === void 0 ? void 0 : _a.innerText.trim();\n\n    if (name != null && weight != null && frequency != null) {\n      medicine.brand = formula;\n      medicine.title = name;\n      medicine.frequency = +frequency;\n      medicine.weight = weight;\n      this.ELEMENT_DATA.push(medicine);\n      this.medNameControl.reset();\n      this.medWeightControl.reset();\n      (_b = document.getElementById('medName')) === null || _b === void 0 ? void 0 : _b.focus();\n    }\n\n    this.table.renderRows();\n  }\n\n  onAddition() {\n    let symptom;\n    let temp;\n    let index;\n    temp = this.myControl.value;\n    symptom = this.symptoms.filter(s => s.name == temp)[0];\n    index = this.symptoms.findIndex(s => s.name == temp);\n\n    if (index >= 0) {\n      symptom = this.symptoms[index];\n      this.symptoms.splice(index, 1);\n      this.selectedSymptoms.push(symptom);\n      this.myControl.reset();\n      this.ngOnInit();\n    } //    let temp = this.myControl.value;\n    //    symptom.name = temp;   \n    //    if(this.symptoms.indexOf(symptom) < 0){\n    //      this.symptoms.push(symptom);\n    //    }\n    //this.options.splice(this.options.indexOf(temp),1);\n\n  }\n\n  _filter(value) {\n    const filterValue = value.toLowerCase();\n    return this.symptoms.filter(symptom => symptom.name.toLowerCase().includes(filterValue));\n  }\n\n  remove(symptom) {\n    const index = this.selectedSymptoms.indexOf(symptom);\n\n    if (index >= 0) {\n      this.symptoms.push(symptom);\n      this.selectedSymptoms.splice(index, 1);\n    }\n  }\n\n}\n\nPrescriptionComponent.ɵfac = function PrescriptionComponent_Factory(t) {\n  return new (t || PrescriptionComponent)();\n};\n\nPrescriptionComponent.ɵcmp = i0.ɵɵdefineComponent({\n  type: PrescriptionComponent,\n  selectors: [[\"app-prescription\"]],\n  viewQuery: function PrescriptionComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatTable, 1);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n    }\n  },\n  decls: 93,\n  vars: 15,\n  consts: [[1, \"row\", \"mx-0\"], [1, \"col-lg-11\", \"mt-2\", \"mx-auto\"], [1, \"h1\", \"mt-2\"], [1, \"p-3\"], [1, \"table\", \"w-25\"], [1, \"text-success\"], [1, \"row\"], [1, \"col-lg-6\", \"mx-auto\", \"p-3\", \"mt-3\", \"row\"], [1, \"col-lg-12\", \"my-card\"], [1, \"my-card-header\", \"my-card-header-primary\"], [1, \"my-card-title\"], [1, \"example-full-width\"], [\"type\", \"text\", \"placeholder\", \"Pick one\", \"aria-label\", \"Number\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat-fab\", \"\", \"color\", \"accent\", \"aria-label\", \"Add the Selected Symptom\", 3, \"click\"], [\"aria-label\", \"Symptoms selection\"], [\"chipList\", \"\"], [3, \"selectable\", \"removable\", \"removed\", 4, \"ngFor\", \"ngForOf\"], [1, \"example-form\"], [1, \"example-full-width\", \"w-75\"], [\"matInput\", \"\", \"placeholder\", \"Enter additional symptoms...\", \"type\", \"text\"], [1, \"col-lg-6\", \"p-3\", \"mt-3\", \"mx-auto\", \"row\"], [1, \"my-card\", \"col-lg-12\"], [1, \"my-card-header\", \"my-card-header-info\"], [1, \"example-full-width\", \"w-100\"], [\"matInput\", \"\", \"placeholder\", \"Notes/Directions\"], [1, \"col-lg-12\"], [1, \"col-lg-4\", \"mx-auto\", \"mt-3\"], [1, \"my-card\"], [1, \"my-card-header\", \"my-card-header-success\"], [\"matInput\", \"\", \"id\", \"medName\", \"placeholder\", \"Enter Medicine name\", 3, \"formControl\"], [\"matInput\", \"\", \"type\", \"number\", \"min\", \"1\", \"max\", \"100000\", 3, \"formControl\"], [\"id\", \"fr\"], [\"mat-stroked-button\", \"\", \"color\", \"accent\", 3, \"click\"], [1, \"col-lg-8\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", \"mt-3\", \"table\", 3, \"dataSource\"], [\"matColumnDef\", \"title\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"brand\"], [\"matColumnDef\", \"weight\"], [\"matColumnDef\", \"frequency\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [3, \"value\"], [\"InputSymptoms\", \"\"], [3, \"selectable\", \"removable\", \"removed\"], [\"matChipRemove\", \"\", 4, \"ngIf\"], [\"matChipRemove\", \"\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n  template: function PrescriptionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Prescription\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵelementStart(5, \"table\", 4);\n      i0.ɵɵelementStart(6, \"thead\");\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Patient Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 5);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"tbody\");\n      i0.ɵɵelementStart(12, \"tr\");\n      i0.ɵɵelementStart(13, \"td\");\n      i0.ɵɵtext(14, \"Age:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"td\");\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"tr\");\n      i0.ɵɵelementStart(18, \"td\");\n      i0.ɵɵtext(19, \"Mobile:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"td\");\n      i0.ɵɵtext(21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 6);\n      i0.ɵɵelementStart(23, \"div\", 7);\n      i0.ɵɵelementStart(24, \"div\", 8);\n      i0.ɵɵelementStart(25, \"div\", 9);\n      i0.ɵɵelementStart(26, \"h2\", 10);\n      i0.ɵɵtext(27, \"Observed Symptoms\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"mat-form-field\", 11);\n      i0.ɵɵelement(29, \"input\", 12);\n      i0.ɵɵelementStart(30, \"mat-autocomplete\", null, 13);\n      i0.ɵɵtemplate(32, PrescriptionComponent_mat_option_32_Template, 3, 2, \"mat-option\", 14);\n      i0.ɵɵpipe(33, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function PrescriptionComponent_Template_button_click_34_listener() {\n        return ctx.onAddition();\n      });\n      i0.ɵɵelementStart(35, \"mat-icon\");\n      i0.ɵɵtext(36, \"add\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"mat-chip-list\", 16, 17);\n      i0.ɵɵtemplate(39, PrescriptionComponent_mat_chip_39_Template, 3, 4, \"mat-chip\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(40, \"hr\");\n      i0.ɵɵelementStart(41, \"form\", 19);\n      i0.ɵɵelementStart(42, \"mat-form-field\", 20);\n      i0.ɵɵelement(43, \"input\", 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"div\", 22);\n      i0.ɵɵelementStart(45, \"div\", 23);\n      i0.ɵɵelementStart(46, \"div\", 24);\n      i0.ɵɵelementStart(47, \"h2\", 10);\n      i0.ɵɵtext(48, \"Notes or Directions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"mat-form-field\", 25);\n      i0.ɵɵelementStart(50, \"mat-label\");\n      i0.ɵɵtext(51, \"Enter Notes or Directions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(52, \"textarea\", 26);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(53, \"div\", 27);\n      i0.ɵɵelement(54, \"hr\");\n      i0.ɵɵelementStart(55, \"div\", 6);\n      i0.ɵɵelementStart(56, \"div\", 28);\n      i0.ɵɵelementStart(57, \"div\", 29);\n      i0.ɵɵelementStart(58, \"div\", 30);\n      i0.ɵɵelementStart(59, \"h2\", 10);\n      i0.ɵɵtext(60, \"Dosage\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(61, \"mat-form-field\", 11);\n      i0.ɵɵelement(62, \"input\", 31);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(63, \"hr\");\n      i0.ɵɵelementStart(64, \"mat-form-field\", 11);\n      i0.ɵɵelementStart(65, \"mat-label\");\n      i0.ɵɵtext(66, \"Dose (in miligrams)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(67, \"input\", 32);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(68, \"hr\");\n      i0.ɵɵelementStart(69, \"mat-form-field\", 11);\n      i0.ɵɵelementStart(70, \"mat-label\");\n      i0.ɵɵtext(71, \"Frequency\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(72, \"mat-select\", 33);\n      i0.ɵɵtemplate(73, PrescriptionComponent_mat_option_73_Template, 2, 2, \"mat-option\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(74, \"br\");\n      i0.ɵɵelementStart(75, \"button\", 34);\n      i0.ɵɵlistener(\"click\", function PrescriptionComponent_Template_button_click_75_listener() {\n        return ctx.addMedicine();\n      });\n      i0.ɵɵtext(76, \"Add Medicine\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(77, \"div\", 35);\n      i0.ɵɵelementStart(78, \"table\", 36);\n      i0.ɵɵelementContainerStart(79, 37);\n      i0.ɵɵtemplate(80, PrescriptionComponent_th_80_Template, 2, 0, \"th\", 38);\n      i0.ɵɵtemplate(81, PrescriptionComponent_td_81_Template, 2, 1, \"td\", 39);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(82, 40);\n      i0.ɵɵtemplate(83, PrescriptionComponent_th_83_Template, 2, 0, \"th\", 38);\n      i0.ɵɵtemplate(84, PrescriptionComponent_td_84_Template, 2, 1, \"td\", 39);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(85, 41);\n      i0.ɵɵtemplate(86, PrescriptionComponent_th_86_Template, 2, 0, \"th\", 38);\n      i0.ɵɵtemplate(87, PrescriptionComponent_td_87_Template, 2, 1, \"td\", 39);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(88, 42);\n      i0.ɵɵtemplate(89, PrescriptionComponent_th_89_Template, 2, 0, \"th\", 38);\n      i0.ɵɵtemplate(90, PrescriptionComponent_td_90_Template, 2, 1, \"td\", 39);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(91, PrescriptionComponent_tr_91_Template, 1, 0, \"tr\", 43);\n      i0.ɵɵtemplate(92, PrescriptionComponent_tr_92_Template, 1, 0, \"tr\", 44);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(31);\n\n      i0.ɵɵadvance(10);\n      i0.ɵɵtextInterpolate1(\" \", ctx.patient.name, \"\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(ctx.patient.age);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.patient.mobile);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(33, 13, ctx.filteredOptions));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.selectedSymptoms);\n      i0.ɵɵadvance(23);\n      i0.ɵɵproperty(\"formControl\", ctx.medNameControl);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formControl\", ctx.medWeightControl);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.frequencies);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n    }\n  },\n  directives: [i1.MatFormField, i2.MatInput, i3.DefaultValueAccessor, i4.MatAutocompleteTrigger, i3.NgControlStatus, i3.FormControlDirective, i4.MatAutocomplete, i5.NgForOf, i6.MatButton, i7.MatIcon, i8.MatChipList, i3.ɵangular_packages_forms_forms_y, i3.NgControlStatusGroup, i3.NgForm, i1.MatLabel, i3.NumberValueAccessor, i9.MatSelect, i10.MatTable, i10.MatColumnDef, i10.MatHeaderCellDef, i10.MatCellDef, i10.MatHeaderRowDef, i10.MatRowDef, i11.MatOption, i8.MatChip, i5.NgIf, i8.MatChipRemove, i10.MatHeaderCell, i10.MatCell, i10.MatHeaderRow, i10.MatRow],\n  pipes: [i5.AsyncPipe],\n  styles: [\".example-form[_ngcontent-%COMP%] {\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n  }\\n  \\n  .example-full-width[_ngcontent-%COMP%] {\\n    width: 70%;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByZXNjcmlwdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixXQUFXO0VBQ2I7O0VBRUE7SUFDRSxVQUFVO0VBQ1oiLCJmaWxlIjoicHJlc2NyaXB0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1mb3JtIHtcbiAgICBtaW4td2lkdGg6IDE1MHB4O1xuICAgIG1heC13aWR0aDogNTAwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgXG4gIC5leGFtcGxlLWZ1bGwtd2lkdGgge1xuICAgIHdpZHRoOiA3MCU7XG4gIH0iXX0= */\"]\n});","map":{"version":3,"sources":["/home/aamir/Documents/workspace-spring-tool-suite-4-4.8.1.RELEASE/DIPS/src/app/prescription/prescription.component.ts","/home/aamir/Documents/workspace-spring-tool-suite-4-4.8.1.RELEASE/DIPS/src/app/prescription/prescription.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl } from \"@angular/forms\";\n\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport { MatTable } from \"@angular/material/table\";\n\nexport interface Medicine {\n  title: string;\n  brand: string;\n  weight: number;\n  frequency: number;\n}\n\nexport interface Patient{\n  name: string;\n  age: number;\n  mobile: number;\n}\n\nexport interface Symptom {\n  name: string;\n}\n\n@Component({\n  selector: 'app-prescription',\n  templateUrl: './prescription.component.html',\n  styleUrls: ['./prescription.component.css']\n})\n\nexport class PrescriptionComponent implements OnInit {\n\n  @ViewChild(MatTable) table!: MatTable<any>;\n  ELEMENT_DATA: Medicine[] = [];\n\n  displayedColumns: string[] = ['title', 'brand', 'weight', 'frequency'];\n  dataSource = this.ELEMENT_DATA;\n\n  patient: Patient = {name: 'Faisal Saleh', age: 45, mobile : 923032424141} \n\n  frequencies: number[]=[6,12,24]\n  medNameControl = new FormControl();\n  medWeightControl = new FormControl();\n  medFrequencyControl = new FormControl();\n  myControl = new FormControl();\n  filteredOptions!: Observable<Symptom[]> ;\n  frequency!: number ;\n\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  symptoms: Symptom[] = [\n    {name: 'Headache'},\n    {name: 'Fever'},\n    {name: 'Sneezing'},\n    {name: 'Itching'},\n    {name: 'Red Skin'},\n    {name: 'Watery Eyes'},\n    {name: 'Cough'},\n    {name: 'Joint Pain'},\n    {name: 'Muscular Pain'}\n    \n  ];\n  selectedSymptoms: Symptom[]=[];\n\n  constructor() { }\n\n  ngOnInit(){\n    this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n  }\n\n  addMedicine(){\n    let medicine: Medicine = {title: '',brand:'',weight:0,frequency:0};\n    let name,formula,frequency: string;\n    let weight: number;\n    name = this.medNameControl.value;\n    formula = 'N/A';\n    weight = this.medWeightControl.value;\n    frequency = document.getElementById('fr')?.innerText.trim()!;\n        if(name!= null && weight != null && frequency != null ){\n      medicine.brand = formula;\n      medicine.title = name;\n      medicine.frequency = +frequency;\n      medicine.weight = weight;\n      this.ELEMENT_DATA.push(medicine);\n      this.medNameControl.reset();\n      this.medWeightControl.reset();\n      document.getElementById('medName')?.focus();\n    }\n    this.table.renderRows();\n  }\n\n  onAddition(){\n    let symptom: Symptom;\n    let temp: string;\n    let index: number; \n    temp = this.myControl.value;\n    symptom = this.symptoms.filter(s => s.name == temp)[0];\n    index = this.symptoms.findIndex(s => s.name == temp);\n    if(index >= 0){\n      symptom = this.symptoms[index];\n      this.symptoms.splice(index,1);\n      this.selectedSymptoms.push(symptom);\n      this.myControl.reset();\n      this.ngOnInit();\n    }\n    \n//    let temp = this.myControl.value;\n//    symptom.name = temp;   \n//    if(this.symptoms.indexOf(symptom) < 0){\n//      this.symptoms.push(symptom);\n//    }\n    //this.options.splice(this.options.indexOf(temp),1);\n    }\n\n  private _filter(value: string): Symptom[] {\n    const filterValue = value.toLowerCase();\n    return this.symptoms.filter(symptom=> symptom.name.toLowerCase().includes(filterValue));\n  }\n\n  remove(symptom: Symptom): void {\n    const index = this.selectedSymptoms.indexOf(symptom);\n\n    if (index >= 0) {\n      this.symptoms.push(symptom);\n      this.selectedSymptoms.splice(index, 1);\n    }\n  }\n\n}\n","<div class=\"row mx-0\">\n  <div class=\"col-lg-11 mt-2 mx-auto \">\n    <h1 class=\"h1  mt-2\">Prescription</h1>\n      <div class=\" p-3\">                 \n          <table class=\"table w-25\">\n            <thead>\n                <th>Patient Name: </th>\n                <th class=\"text-success\" > {{patient.name}}</th>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Age:</td>\n                <td>{{patient.age}}</td>\n              </tr>\n              <tr>\n                <td>Mobile:</td>\n                <td>{{patient.mobile}}</td>\n              </tr>\n            </tbody>\n          </table>\n      </div>\n      <div class=\"row\">\n          <div class=\"col-lg-6 mx-auto p-3 mt-3 row\">\n              <div class=\"col-lg-12 my-card\">\n                <div class=\"my-card-header my-card-header-primary\">\n                <h2 class=\"my-card-title\">Observed Symptoms</h2>\n              </div>\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"text\"\n                       placeholder=\"Pick one\"\n                       aria-label=\"Number\"\n                       matInput\n                       [formControl]=\"myControl\"\n                       [matAutocomplete]=\"auto\">\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                  <mat-option #InputSymptoms *ngFor=\"let option of filteredOptions | async\" [value]=\"option.name\">\n                    {{option.name}}\n                  </mat-option>\n                </mat-autocomplete>\n            </mat-form-field>\n              <button mat-fab color=\"accent\" aria-label=\"Add the Selected Symptom\" (click)=\"onAddition()\" >\n                <mat-icon>add</mat-icon>\n              </button>\n              <mat-chip-list #chipList aria-label=\"Symptoms selection\">\n                <mat-chip *ngFor=\"let symptom of selectedSymptoms\" [selectable]=\"selectable\"\n                         [removable]=\"removable\" (removed)=\"remove(symptom)\">\n                  {{symptom.name}}\n                  <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n                </mat-chip>\n              </mat-chip-list>\n            <hr>\n              <form class=\"example-form\">                \n                <mat-form-field class=\"example-full-width w-75\">\n                  <input matInput placeholder=\"Enter additional symptoms...\" type=\"text\">\n                </mat-form-field>\n              </form>\n              </div>\n         </div>\n          <div class=\"col-lg-6 p-3 mt-3 mx-auto row\">\n              <div class=\"my-card col-lg-12\">\n                <div class=\"my-card-header my-card-header-info\">\n                  <h2 class=\"my-card-title\">Notes or Directions</h2>\n                </div>\n                <mat-form-field class=\"example-full-width w-100\">\n                  <mat-label>Enter Notes or Directions</mat-label>\n                  <textarea matInput placeholder=\"Notes/Directions\"></textarea>\n                </mat-form-field>\n              </div>  \n          </div>\n            <div class=\"col-lg-12\">\n              <hr>\n              <div class=\"row\">\n                <div class=\"col-lg-4 mx-auto mt-3\">\n                  <div class=\"my-card\" >\n                    <div class=\"my-card-header my-card-header-success\">\n                      <h2 class=\"my-card-title\">Dosage</h2>\n                    </div>\n                      <mat-form-field class=\"example-full-width \">\n                        <input matInput id=\"medName\" [formControl]=\"medNameControl\"  placeholder=\"Enter Medicine name\">\n                      </mat-form-field>\n                        <hr>                  \n                      <mat-form-field class=\"example-full-width \">\n                          <mat-label>Dose (in miligrams)</mat-label>\n                          <input matInput [formControl]=\"medWeightControl\" type=\"number\" min=\"1\" max=\"100000\" >\n                      </mat-form-field>\n                      <hr>\n                      <mat-form-field class=\"example-full-width\">\n                          <mat-label>Frequency</mat-label>\n                        <mat-select id=\"fr\"  >\n                          <mat-option *ngFor=\"let frequency of frequencies\" [value]=\"frequency\" >\n                            {{frequency}}\n                          </mat-option>\n                        </mat-select>\n                        </mat-form-field>\n                        <br>\n                        <button mat-stroked-button color=\"accent\" (click)=\"addMedicine()\" >Add Medicine</button>\n                 </div>\n                </div>\n                <div class=\"col-lg-8\">\n                  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 mt-3 table\" >\n                  \n                    <!-- Name Column -->\n                    <ng-container matColumnDef=\"title\">\n                      <th mat-header-cell *matHeaderCellDef> Title </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\n                    </ng-container>\n                  \n                    <!-- Weight Column -->\n                    <ng-container matColumnDef=\"brand\">\n                      <th mat-header-cell *matHeaderCellDef> Brand </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.brand}} </td>\n                    </ng-container>\n                  \n                    <!-- Symbol Column -->\n                    <ng-container matColumnDef=\"weight\">\n                      <th mat-header-cell *matHeaderCellDef> Weight </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"frequency\">\n                      <th mat-header-cell *matHeaderCellDef> Frequency </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.frequency}} </td>\n                    </ng-container>\n                  \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                  </table>\n                  \n      \n      \n                </div>\n\n            </div>\n          \n              \n            </div>\n      </div>      \n  </div>\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}